[{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"The MIT License","title":"The MIT License","text":"Copyright 2023 Statistisk sentralbyrå - Statistics Norway Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/SECURITY.html","id":null,"dir":"","previous_headings":"","what":"Security Policy","title":"Security Policy","text":"SSB takes security software products services seriously, includes source code repositories managed GitHub organization. believe responsible disclosure security vulnerabilities helps us ensure security privacy users.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"believe found security vulnerability SSB’s GitHub repositories, please report us using Github Private vulnerability reporting tool.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Magnitude_table_suppression.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Magnitude table suppression","text":"GaussSuppression package contains several easy--use wrapper functions vignette look SuppressFewContributors SuppressDominantCells functions. functions, primary suppression based number contributors dominance rules. , always package, secondary suppression performed using Gauss method. begin loading dataset used . can imagine figures variable \"value\" represent sales value different sectors different companies. first examples, use \"company\" variable, instead assume row represents contribution unique company. input data can reformatted illustrated like : Table 1: Input data 20 contributions.","code":"library(GaussSuppression) dataset <- SSBtoolsData(\"magnitude1\") dataset #>          sector4 sector2      geo    eu company value #> 1    Agriculture private Portugal    EU       A  75.9 #> 2    Agriculture private Portugal    EU       B  24.5 #> 3    Agriculture private    Spain    EU       A  96.6 #> 4    Agriculture private    Spain    EU       B  43.2 #> 5  Entertainment private  Iceland nonEU       B  16.8 #> 6  Entertainment private Portugal    EU       B   7.1 #> 7  Entertainment private Portugal    EU       D   2.3 #> 8  Entertainment private    Spain    EU       A  77.4 #> 9  Entertainment private    Spain    EU       B  11.5 #> 10 Entertainment private    Spain    EU       C  16.4 #> 11  Governmental  public Portugal    EU       B  21.6 #> 12  Governmental  public Portugal    EU       D   2.0 #> 13  Governmental  public    Spain    EU       C   6.5 #> 14  Governmental  public    Spain    EU       D   2.7 #> 15      Industry private  Iceland nonEU       B   9.6 #> 16      Industry private  Iceland nonEU       C   8.8 #> 17      Industry private  Iceland nonEU       D   1.9 #> 18      Industry private Portugal    EU       B  25.7 #> 19      Industry private Portugal    EU       D   3.4 #> 20      Industry private    Spain    EU       C   8.4"},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Magnitude_table_suppression.html","id":"using-few-contributors-primary-suppression","dir":"Articles","previous_headings":"Initial basic examples","what":"Using few contributors primary suppression","title":"Magnitude table suppression","text":"first example, use SuppressFewContributors maxN = 1. means cells based single contributor primary suppressed. output, number contributors columns nRule nAll. two columns equal normal usage. formatted version output given Table 2 . Primary suppressed cells underlined labeled red, secondary suppressed cells labeled purple. Table 2: Output SuppressFewContributors maxN = 1 (number contributors parenthesis)","code":"SuppressFewContributors(data=dataset,                          numVar = \"value\",                          dimVar= c(\"sector4\", \"geo\"),                          maxN=1) #> [extraAggregate 20*3->10*4] Checking .... #> GaussSuppression_numttHTT: ..............:::: #>          sector4      geo value nRule nAll primary suppressed #> 1          Total    Total 462.3    20   20   FALSE      FALSE #> 2          Total  Iceland  37.1     4    4   FALSE      FALSE #> 3          Total Portugal 162.5     8    8   FALSE      FALSE #> 4          Total    Spain 262.7     8    8   FALSE      FALSE #> 5    Agriculture    Total 240.2     4    4   FALSE      FALSE #> 6    Agriculture  Iceland   0.0     0    0   FALSE      FALSE #> 7    Agriculture Portugal 100.4     2    2   FALSE      FALSE #> 8    Agriculture    Spain 139.8     2    2   FALSE      FALSE #> 9  Entertainment    Total 131.5     6    6   FALSE      FALSE #> 10 Entertainment  Iceland  16.8     1    1    TRUE       TRUE #> 11 Entertainment Portugal   9.4     2    2   FALSE       TRUE #> 12 Entertainment    Spain 105.3     3    3   FALSE      FALSE #> 13  Governmental    Total  32.8     4    4   FALSE      FALSE #> 14  Governmental  Iceland   0.0     0    0   FALSE      FALSE #> 15  Governmental Portugal  23.6     2    2   FALSE       TRUE #> 16  Governmental    Spain   9.2     2    2   FALSE       TRUE #> 17      Industry    Total  57.8     6    6   FALSE      FALSE #> 18      Industry  Iceland  20.3     3    3   FALSE       TRUE #> 19      Industry Portugal  29.1     2    2   FALSE       TRUE #> 20      Industry    Spain   8.4     1    1    TRUE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Magnitude_table_suppression.html","id":"using-dominant-cell-primary-suppression","dir":"Articles","previous_headings":"Initial basic examples","what":"Using dominant cell primary suppression","title":"Magnitude table suppression","text":"second example, use SuppressDominantCells n = 1 k = 80. means aggregates primary suppressed whenever largest contribution exceeds 80% cell total. incorporate percentage two largest contributions output, parameter allDominance = TRUE utilized. formatted version output given Table 3 . Table 3: Output SuppressDominantCells  n = 1 k = 80  (percentage largest contribution parenthesis) Note table, well Table 2, discussed section singleton problem.","code":"SuppressDominantCells(data=dataset,                        numVar = \"value\",                        dimVar= c(\"sector4\", \"geo\"),                        n = 1, k = 80, allDominance = TRUE) #> [extraAggregate 20*3->10*4] Checking .... #> GaussSuppression_numttHTT: ..............:: #>          sector4      geo value dominant1 max1contributor n_contr n_non0_contr #> 1          Total    Total 462.3 0.2089552               3      20           20 #> 2          Total  Iceland  37.1 0.4528302               5       4            4 #> 3          Total Portugal 162.5 0.4670769               1       8            8 #> 4          Total    Spain 262.7 0.3677198               3       8            8 #> 5    Agriculture    Total 240.2 0.4021649               3       4            4 #> 6    Agriculture  Iceland   0.0 0.0000000              NA       0            0 #> 7    Agriculture Portugal 100.4 0.7559761               1       2            2 #> 8    Agriculture    Spain 139.8 0.6909871               3       2            2 #> 9  Entertainment    Total 131.5 0.5885932               8       6            6 #> 10 Entertainment  Iceland  16.8 1.0000000               5       1            1 #> 11 Entertainment Portugal   9.4 0.7553191               6       2            2 #> 12 Entertainment    Spain 105.3 0.7350427               8       3            3 #> 13  Governmental    Total  32.8 0.6585366              11       4            4 #> 14  Governmental  Iceland   0.0 0.0000000              NA       0            0 #> 15  Governmental Portugal  23.6 0.9152542              11       2            2 #> 16  Governmental    Spain   9.2 0.7065217              13       2            2 #> 17      Industry    Total  57.8 0.4446367              18       6            6 #> 18      Industry  Iceland  20.3 0.4729064              15       3            3 #> 19      Industry Portugal  29.1 0.8831615              18       2            2 #> 20      Industry    Spain   8.4 1.0000000              20       1            1 #>    primary suppressed #> 1    FALSE      FALSE #> 2    FALSE      FALSE #> 3    FALSE      FALSE #> 4    FALSE      FALSE #> 5    FALSE      FALSE #> 6    FALSE      FALSE #> 7    FALSE      FALSE #> 8    FALSE      FALSE #> 9    FALSE      FALSE #> 10    TRUE       TRUE #> 11   FALSE       TRUE #> 12   FALSE      FALSE #> 13   FALSE       TRUE #> 14   FALSE      FALSE #> 15    TRUE       TRUE #> 16   FALSE       TRUE #> 17   FALSE       TRUE #> 18   FALSE       TRUE #> 19    TRUE       TRUE #> 20    TRUE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Magnitude_table_suppression.html","id":"an-hierarchical-table-and-two-dominance-rules","dir":"Articles","previous_headings":"","what":"An hierarchical table and two dominance rules","title":"Magnitude table suppression","text":"use SuppressDominantCells n = 1:2 k = c(80, 99). means aggregates primary suppressed whenever largest contribution exceeds 80% cell total two largest contributions exceed 99% cell total. addition, example made even advanced including variables “sector2” “eu”. Table 4: Output SuppressDominantCells  n = 1:2 k = c(80, 99)  described define-tables vignette hierarchies detected automatically. output obtained first generate hierarchies : thereafter run SuppressDominantCells hierarchies input:","code":"output <- SuppressDominantCells(data=dataset,                                  numVar = \"value\",                                  dimVar= c(\"sector4\", \"sector2\", \"geo\", \"eu\"),                                  n = 1:2, k = c(80, 99)) #> [extraAggregate 20*5->10*6] Checking .... #> GaussSuppression_numttHTT: .............:::::: head(output) #>   sector4      geo value primary suppressed #> 1   Total    Total 462.3   FALSE      FALSE #> 2   Total       EU 425.2   FALSE      FALSE #> 3   Total    nonEU  37.1   FALSE      FALSE #> 4   Total  Iceland  37.1   FALSE      FALSE #> 5   Total Portugal 162.5   FALSE      FALSE #> 6   Total    Spain 262.7   FALSE      FALSE dimlists <- SSBtools::FindDimLists(dataset[c(\"sector4\", \"sector2\", \"geo\", \"eu\")]) dimlists #> $sector4 #>   levels         codes #> 1      @         Total #> 2     @@       private #> 3    @@@   Agriculture #> 4    @@@ Entertainment #> 5    @@@      Industry #> 6     @@        public #> 7    @@@  Governmental #>  #> $geo #>   levels    codes #> 1      @    Total #> 2     @@       EU #> 3    @@@ Portugal #> 4    @@@    Spain #> 5     @@    nonEU #> 6    @@@  Iceland output <- SuppressDominantCells(data=dataset,                                  numVar = \"value\",                                  hierarchies = dimlists,                                   n = 1:2, k = c(80, 99)) #> [extraAggregate 20*3->10*4] Checking .... #> GaussSuppression_numttHTT: .............::::::"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Magnitude_table_suppression.html","id":"using-the-formula-interface","dir":"Articles","previous_headings":"","what":"Using the formula interface","title":"Magnitude table suppression","text":"Using formula interface one way achieve fewer cells output. use SuppressFewContributors maxN = 2. means table cells based one two contributors primary suppressed. formatted version output, blank cells indicate included output. Table 5: Output SuppressFewContributors maxN = 2  (number contributors parenthesis)  Please note order include three empty cells contributors, removeEmpty parameter set FALSE. default, parameter set TRUE using formula interface.","code":"output <- SuppressFewContributors(data=dataset,                                    numVar = \"value\",                                    formula = ~sector2*geo + sector4*eu,                                    maxN=2,                                   removeEmpty = FALSE) #> [extraAggregate 20*5->10*6] Checking .... #> GaussSuppression_numttHTT: ............::::: head(output) #>        geo sector4 value nRule nAll primary suppressed #> 1    Total   Total 462.3    20   20   FALSE      FALSE #> 2    Total private 429.5    16   16   FALSE      FALSE #> 3    Total  public  32.8     4    4   FALSE      FALSE #> 4  Iceland   Total  37.1     4    4   FALSE      FALSE #> 5 Portugal   Total 162.5     8    8   FALSE      FALSE #> 6    Spain   Total 262.7     8    8   FALSE      FALSE tail(output) #>      geo       sector4 value nRule nAll primary suppressed #> 21    EU Entertainment 114.7     5    5   FALSE       TRUE #> 22 nonEU Entertainment  16.8     1    1    TRUE       TRUE #> 23    EU  Governmental  32.8     4    4   FALSE      FALSE #> 24 nonEU  Governmental   0.0     0    0   FALSE      FALSE #> 25    EU      Industry  37.5     3    3   FALSE       TRUE #> 26 nonEU      Industry  20.3     3    3   FALSE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Magnitude_table_suppression.html","id":"using-the-contributorvar-parameter-contributorvar-company","dir":"Articles","previous_headings":"","what":"Using the contributorVar parameter (contributorVar = \"company\")","title":"Magnitude table suppression","text":"According \"company\" variable data set, four contribution companies (, B, C D). specify using contributorVar parameter, corresponds variable within dataset, case, \"company\". general, variable refers holding information used suppression method. taken account, primary suppression rules applied data , within cell, aggregated within contributor. example data aggregated way shown . Table 6: “value” data aggregated according hierarchy contributor  take account contributor IDs using contributors primary suppression. Table 7: Output SuppressFewContributors maxN = 2 contributorVar = \"company\" (number contributors parenthesis)  take account contributor IDs using dominant cell primary suppression. also made use formula interface. Table 8: Output SuppressDominantCells n = 1:2 k = c(80, 99) contributorVar = \"company\"","code":"output <- SuppressFewContributors(data=dataset,                                    numVar = \"value\",                                    dimVar = c(\"sector4\", \"sector2\", \"geo\", \"eu\"),                                   maxN=2,                                   contributorVar = \"company\") #> [preAggregate 20*6->20*7] #> [extraAggregate 20*7->10*7] Checking ..... #> GaussSuppression_numttHTT: ............:::::: head(output) #>   sector4      geo freq value nRule nAll primary suppressed #> 1   Total    Total   20 462.3     4    4   FALSE      FALSE #> 2   Total       EU   16 425.2     4    4   FALSE      FALSE #> 3   Total    nonEU    4  37.1     3    3   FALSE      FALSE #> 4   Total  Iceland    4  37.1     3    3   FALSE      FALSE #> 5   Total Portugal    8 162.5     3    3   FALSE      FALSE #> 6   Total    Spain    8 262.7     4    4   FALSE      FALSE output <- SuppressDominantCells(data=dataset,                                  numVar = \"value\",                                  formula = ~sector2*geo + sector4*eu,                                 contributorVar = \"company\",                                 n = 1:2, k = c(80, 99)) #> [preAggregate 20*6->20*7] #> [extraAggregate 20*7->10*7] Checking ..... #> GaussSuppression_numttHTT: .........::::: head(output) #>        geo sector4 freq value primary suppressed #> 1    Total   Total   20 462.3   FALSE      FALSE #> 2    Total private   16 429.5   FALSE      FALSE #> 3    Total  public    4  32.8   FALSE      FALSE #> 4  Iceland   Total    4  37.1   FALSE      FALSE #> 5 Portugal   Total    8 162.5   FALSE      FALSE #> 6    Spain   Total    8 262.7   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Magnitude_table_suppression.html","id":"the-singleton-problem","dir":"Articles","previous_headings":"","what":"The singleton problem","title":"Magnitude table suppression","text":", data suppressed way Table 7, different formula. Table 9: Output SuppressDominantCells n = 1:2 k = c(80, 99) contributorVar = \"company\"  using singletonMethod = \"none\" case, Entertainment:Spain suppressed. cell suppressed due default handling singleton problem. reason Entertainment:Iceland single contributor. contributor can reveal Entertainment:Portugal Entertainment:Spain suppressed. might appear table contains another issue, Entertainment:Iceland can reveal Industry:Iceland. However, can considered ok case. Industry:Iceland secondary suppressed reason protect Entertainment:Iceland. Nevertheless, cases, secondary suppressed cells introduce complexity handling singletons. part singleton handling magnitude tables add virtual primary suppressed cells prior secondary suppression algorithm. Secondary suppressed cells , therefore, treated way. However, another part singleton handling solves many remaining problems. done within suppression algorithm. can observe effect Tables 2 3. using singletonMethod = \"none\" Table 2, Industry:Portugal suppressed. case, Industry:Spain can reveal Industry:Iceland consequently Entertainment:Iceland. Table 3, Governmental:Total Industry:Total suppressed due advanced singleton handling. fact, using singletonMethod = \"none\", tables suppressed differently.","code":"output <- SuppressDominantCells(data=dataset,                                 numVar = \"value\",                                  formula = ~sector4*geo + sector2*eu,                                 contributorVar = \"company\",                                 n = 1:2, k = c(80, 99)) #> [preAggregate 20*6->20*7] #> [extraAggregate 20*7->10*7] Checking ..... #> GaussSuppression_numttHTT: ............ head(output) #>         sector4     geo freq value primary suppressed #> 1         Total   Total   20 462.3   FALSE      FALSE #> 2   Agriculture   Total    4 240.2    TRUE       TRUE #> 3 Entertainment   Total    6 131.5   FALSE      FALSE #> 4  Governmental   Total    4  32.8   FALSE      FALSE #> 5      Industry   Total    6  57.8   FALSE       TRUE #> 6         Total Iceland    4  37.1   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Small count frequency table suppression","text":"GaussSuppression package contains several easy--use wrapper functions vignette look SuppressSmallCounts function. function, small frequencies primary suppressed. , always package, secondary suppression performed using Gauss method. begin creating datasets used . first examples based dataset_a, six rows.","code":"library(GaussSuppression) dataset <- SSBtoolsData(\"example1\") dataset_a <- dataset[dataset$year == \"2014\", -4] dataset_b <- dataset[dataset$year == \"2015\", -4] dataset_a #>     age      geo    eu freq #> 1 young    Spain    EU    5 #> 2 young  Iceland nonEU    2 #> 3 young Portugal    EU    0 #> 4   old    Spain    EU    6 #> 5   old  Iceland nonEU    3 #> 6   old Portugal    EU    4"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"an-initial-basic-example","dir":"Articles","previous_headings":"","what":"An initial basic example","title":"Small count frequency table suppression","text":"function description (?SuppressSmallCounts), visible parameter maxN addition parameters considered define-tables vignette. first example, use maxN = 1 means zeros ones primary suppressed. formatted version output given Table 1 . Primary suppressed cells underlined labeled red, secondary suppressed cells labeled purple. Table 1: dimVar = c(\"age\", \"geo\"), maxN = 1  output obtained microdata sent input illustrated de code . related point third row table can omitted (data = dataset_a[-3, ]) since frequency zero. frequency zero, underlying microdata. Later vignette, address scenarios inclusion zeros may important.","code":"SuppressSmallCounts(data = dataset_a,                      dimVar = c(\"age\", \"geo\"),                      freqVar = \"freq\",                      maxN = 1) #> [extend0 6*3->6*3] #> GaussSuppression_anySum: ........... #>      age      geo freq primary suppressed #> 1  Total    Total   20   FALSE      FALSE #> 2  Total  Iceland    5   FALSE      FALSE #> 3  Total Portugal    4   FALSE      FALSE #> 4  Total    Spain   11   FALSE      FALSE #> 5    old    Total   13   FALSE      FALSE #> 6    old  Iceland    3   FALSE       TRUE #> 7    old Portugal    4   FALSE       TRUE #> 8    old    Spain    6   FALSE      FALSE #> 9  young    Total    7   FALSE      FALSE #> 10 young  Iceland    2   FALSE       TRUE #> 11 young Portugal    0    TRUE       TRUE #> 12 young    Spain    5   FALSE      FALSE microdata_a <- SSBtools::MakeMicro(dataset_a, \"freq\")[-4] output <- SuppressSmallCounts(data = microdata_a,                                dimVar = c(\"age\", \"geo\"),                                maxN = 1) #> [preAggregate 20*3->5*3] #> [extend0 5*3->6*3] #> GaussSuppression_anySum: ..........."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"an-hierarchical-table","dir":"Articles","previous_headings":"","what":"An hierarchical table","title":"Small count frequency table suppression","text":"advanced example obtained including variable “eu”. formatted version output: Table 2: dimVar = c(\"age\", \"geo\", \"eu\"), maxN = 2  described define-tables vignette hierarchies detected automatically. output obtained first generate hierarchies : thereafter run SuppressSmallCounts hierarchies input:","code":"SuppressSmallCounts(data = dataset_a,                      dimVar = c(\"age\", \"geo\", \"eu\"),                      freqVar = \"freq\",                      maxN = 2) #> [extend0 6*4->6*4] #> GaussSuppression_anySum: ............. #>      age      geo freq primary suppressed #> 1  Total    Total   20   FALSE      FALSE #> 2  Total       EU   15   FALSE      FALSE #> 3  Total    nonEU    5   FALSE      FALSE #> 4  Total  Iceland    5   FALSE      FALSE #> 5  Total Portugal    4   FALSE      FALSE #> 6  Total    Spain   11   FALSE      FALSE #> 7    old    Total   13   FALSE      FALSE #> 8    old       EU   10   FALSE       TRUE #> 9    old    nonEU    3   FALSE       TRUE #> 10   old  Iceland    3   FALSE       TRUE #> 11   old Portugal    4   FALSE       TRUE #> 12   old    Spain    6   FALSE      FALSE #> 13 young    Total    7   FALSE      FALSE #> 14 young       EU    5   FALSE       TRUE #> 15 young    nonEU    2    TRUE       TRUE #> 16 young  Iceland    2    TRUE       TRUE #> 17 young Portugal    0    TRUE       TRUE #> 18 young    Spain    5   FALSE      FALSE dimlists <- SSBtools::FindDimLists(dataset_a[c(\"age\", \"geo\", \"eu\")]) dimlists #> $age #>   levels codes #> 1      @ Total #> 2     @@   old #> 3     @@ young #>  #> $geo #>   levels    codes #> 1      @    Total #> 2     @@       EU #> 3    @@@ Portugal #> 4    @@@    Spain #> 5     @@    nonEU #> 6    @@@  Iceland SuppressSmallCounts(data = dataset_a[c(\"age\", \"geo\", \"freq\")],                      hierarchies = dimlists,                      freqVar = \"freq\",                      maxN = 2)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"using-the-formula-interface","dir":"Articles","previous_headings":"","what":"Using the formula interface","title":"Small count frequency table suppression","text":"Using formula interface one way achieve fewer cells output: formatted version output, blank cells indicate included output. Table 3: formula = ~age:eu + geo, maxN = 2","code":"SuppressSmallCounts(data = dataset_a,                      formula = ~age:eu + geo,                      freqVar = \"freq\",                      maxN = 2) #> [extend0 6*4->6*4] #> GaussSuppression_anySum: ....... #>     age      geo freq primary suppressed #> 1 Total    Total   20   FALSE      FALSE #> 2 Total  Iceland    5   FALSE      FALSE #> 3 Total Portugal    4   FALSE      FALSE #> 4 Total    Spain   11   FALSE      FALSE #> 5   old       EU   10   FALSE      FALSE #> 6   old    nonEU    3   FALSE       TRUE #> 7 young       EU    5   FALSE      FALSE #> 8 young    nonEU    2    TRUE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"about-suppression-of-zeros","dir":"Articles","previous_headings":"","what":"About suppression of zeros","title":"Small count frequency table suppression","text":"default, zeros suppressed order protect attribute disclosure frequency tables. However, exceptions. several options handling exceptions.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"zeros-not-suppressed","dir":"Articles","previous_headings":"About suppression of zeros","what":"Zeros not suppressed","title":"Small count frequency table suppression","text":"One option use protectZeros = FALSE. Table 4: dimVar = c(\"age\", \"geo\", \"eu\"), maxN = 4, protectZeros = FALSE  Another possibility gives output : zero-frequency row omitted input. default, table automatically extended Gauss algorithm handles zeros correctly. turned (extend0 = FALSE), warning following text appear: “Suppressed cells empty input protected. Extend input data zeros?”. However, structuralEmpty = TRUE, “empty zeros” assumed represent structural zeros must suppressed. exemplified little , one can thus handle data structural non-structural zeros.","code":"SuppressSmallCounts(data = dataset_a,                      dimVar = c(\"age\", \"geo\", \"eu\"),                       freqVar = \"freq\",                      maxN = 4,                     protectZeros = FALSE) #> [extend0 6*4->6*4] #> GaussSuppression_anySum: ........... #>      age      geo freq primary suppressed #> 1  Total    Total   20   FALSE      FALSE #> 2  Total       EU   15   FALSE      FALSE #> 3  Total    nonEU    5   FALSE      FALSE #> 4  Total  Iceland    5   FALSE      FALSE #> 5  Total Portugal    4    TRUE       TRUE #> 6  Total    Spain   11   FALSE       TRUE #> 7    old    Total   13   FALSE      FALSE #> 8    old       EU   10   FALSE       TRUE #> 9    old    nonEU    3    TRUE       TRUE #> 10   old  Iceland    3    TRUE       TRUE #> 11   old Portugal    4    TRUE       TRUE #> 12   old    Spain    6   FALSE      FALSE #> 13 young    Total    7   FALSE      FALSE #> 14 young       EU    5   FALSE       TRUE #> 15 young    nonEU    2    TRUE       TRUE #> 16 young  Iceland    2    TRUE       TRUE #> 17 young Portugal    0   FALSE      FALSE #> 18 young    Spain    5   FALSE       TRUE output <- SuppressSmallCounts(data = dataset_a[-3, ],                                dimVar = c(\"age\", \"geo\", \"eu\"),                                 freqVar = \"freq\",                                maxN = 4,                               extend0 = FALSE,                                structuralEmpty = TRUE) #> GaussSuppression_anySum: .........."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"secondary-suppressed-zeros","dir":"Articles","previous_headings":"About suppression of zeros","what":"Secondary suppressed zeros","title":"Small count frequency table suppression","text":"can combine protectZeros = FALSE secondaryZeros = TRUE. Table 5: dimVar = c(\"age\", \"geo\", \"eu\"), maxN = 3, protectZeros = FALSE, secondaryZeros = TRUE","code":"SuppressSmallCounts(data = dataset_a,                      dimVar = c(\"age\", \"geo\", \"eu\"),                       freqVar = \"freq\",                      maxN = 3,                     protectZeros = FALSE,                      secondaryZeros = TRUE) #> [extend0 6*4->6*4] #> GaussSuppression_anySumNOTprimary: ............. #>      age      geo freq primary suppressed #> 1  Total    Total   20   FALSE      FALSE #> 2  Total       EU   15   FALSE      FALSE #> 3  Total    nonEU    5   FALSE      FALSE #> 4  Total  Iceland    5   FALSE      FALSE #> 5  Total Portugal    4   FALSE      FALSE #> 6  Total    Spain   11   FALSE      FALSE #> 7    old    Total   13   FALSE      FALSE #> 8    old       EU   10   FALSE       TRUE #> 9    old    nonEU    3    TRUE       TRUE #> 10   old  Iceland    3    TRUE       TRUE #> 11   old Portugal    4   FALSE       TRUE #> 12   old    Spain    6   FALSE      FALSE #> 13 young    Total    7   FALSE      FALSE #> 14 young       EU    5   FALSE       TRUE #> 15 young    nonEU    2    TRUE       TRUE #> 16 young  Iceland    2    TRUE       TRUE #> 17 young Portugal    0   FALSE       TRUE #> 18 young    Spain    5   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"both-structural-and-non-structural-zeros","dir":"Articles","previous_headings":"About suppression of zeros","what":"Both structural and non-structural zeros","title":"Small count frequency table suppression","text":"example uses dataset_b, two zeros. Let’s assume first zero considered structural zero. order account characteristic, exclude particular zero retain . general rule, exclude structural zeros. Table 6: dimVar = c(\"age\", \"geo\", \"eu\"), maxN = 2, extend0 = FALSE, structuralEmpty = TRUE  Now, data processed correctly, structural zeros published zeros suppressed. get output formula interface, can use following code: Please note order include empty cells output, need set removeEmpty parameter FALSE. default, parameter set TRUE using formula interface.","code":"dataset_b #>      age      geo    eu freq #> 7  young    Spain    EU    5 #> 8  young  Iceland nonEU    0 #> 9  young Portugal    EU    0 #> 10   old    Spain    EU    6 #> 11   old  Iceland nonEU    3 #> 12   old Portugal    EU    4 SuppressSmallCounts(data = dataset_b[-2,  ],                      dimVar = c(\"age\", \"geo\", \"eu\"),                       freqVar = \"freq\",                      maxN = 2,                     extend0 = FALSE,                      structuralEmpty = TRUE) #> GaussSuppression_anySum: ............. #>      age      geo freq primary suppressed #> 1  Total    Total   18   FALSE      FALSE #> 2  Total       EU   15   FALSE      FALSE #> 3  Total    nonEU    3   FALSE      FALSE #> 4  Total  Iceland    3   FALSE      FALSE #> 5  Total Portugal    4   FALSE      FALSE #> 6  Total    Spain   11   FALSE      FALSE #> 7    old    Total   13   FALSE      FALSE #> 8    old       EU   10   FALSE      FALSE #> 9    old    nonEU    3   FALSE      FALSE #> 10   old  Iceland    3   FALSE      FALSE #> 11   old Portugal    4   FALSE       TRUE #> 12   old    Spain    6   FALSE       TRUE #> 13 young    Total    5   FALSE      FALSE #> 14 young       EU    5   FALSE      FALSE #> 15 young    nonEU    0   FALSE      FALSE #> 16 young  Iceland    0   FALSE      FALSE #> 17 young Portugal    0    TRUE       TRUE #> 18 young    Spain    5   FALSE       TRUE SuppressSmallCounts(data = dataset_b[-2,  ],                      formula = ~age * (geo + eu),                       freqVar = \"freq\",                      maxN = 2,                     extend0 = FALSE,                      structuralEmpty = TRUE,                     removeEmpty = FALSE)"},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"the-problem-of-zeros","dir":"Articles","previous_headings":"The problem of singletons and zeros","what":"The problem of zeros","title":"Small count frequency table suppression","text":"using standard suppression technique table dataset_b, many cells suppressed. Table 7: dimVar = c(\"age\", \"geo\", \"eu\"), maxN = 2  reason Spain suppressions prevent disclosure zeros, easily revealed young:Spain suppressed. case sum young:Iceland young:Portugal can easily calculated zero. Since negative frequencies possible, possibility two zeros. handling problem standard, can turned singletonMethod = \"none\".","code":"SuppressSmallCounts(data = dataset_b,                      dimVar = c(\"age\", \"geo\", \"eu\"),                       freqVar = \"freq\",                      maxN = 2) #> [extend0 6*4->6*4] #> GaussSuppression_anySum: ............. #>      age      geo freq primary suppressed #> 1  Total    Total   18   FALSE      FALSE #> 2  Total       EU   15   FALSE      FALSE #> 3  Total    nonEU    3   FALSE      FALSE #> 4  Total  Iceland    3   FALSE      FALSE #> 5  Total Portugal    4   FALSE      FALSE #> 6  Total    Spain   11   FALSE      FALSE #> 7    old    Total   13   FALSE      FALSE #> 8    old       EU   10   FALSE       TRUE #> 9    old    nonEU    3   FALSE       TRUE #> 10   old  Iceland    3   FALSE       TRUE #> 11   old Portugal    4   FALSE       TRUE #> 12   old    Spain    6   FALSE       TRUE #> 13 young    Total    5   FALSE      FALSE #> 14 young       EU    5   FALSE       TRUE #> 15 young    nonEU    0    TRUE       TRUE #> 16 young  Iceland    0    TRUE       TRUE #> 17 young Portugal    0    TRUE       TRUE #> 18 young    Spain    5   FALSE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/Small_count_frequency_table_suppression.html","id":"the-problem-of-singletons","dir":"Articles","previous_headings":"The problem of singletons and zeros","what":"The problem of singletons","title":"Small count frequency table suppression","text":"problem occurs protectZeros = FALSE secondaryZeros = FALSE (default). now also look larger example uses dataset 18 rows. Table 8: formula = ~age*geo*year + eu*year, maxN = 1, protectZeros = FALSE  output, young:2016:Spain suppressed due standard handling singleton problem. However, using singletonMethod = \"none\" case, young:2016:Spain suppressed. sum young:2016:Iceland young:2016:Portugal can easily calculated two. Since zeros never suppressed, possible values two cells two ones.","code":"output <- SuppressSmallCounts(data = dataset,                                formula = ~age*geo*year + eu*year,                                 freqVar = \"freq\",                                maxN = 1,                                protectZeros = FALSE) #> [extend0 18*5->18*5] #> GaussSuppression_anySum: ................................................. head(output) #>     age      geo  year freq primary suppressed #> 1 Total    Total Total   59   FALSE      FALSE #> 2   old    Total Total   38   FALSE      FALSE #> 3 young    Total Total   21   FALSE      FALSE #> 4 Total  Iceland Total   13   FALSE      FALSE #> 5 Total Portugal Total   12   FALSE      FALSE #> 6 Total    Spain Total   34   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/define_tables.html","id":"introduction-and-setup","dir":"Articles","previous_headings":"","what":"Introduction and setup","title":"Defining Tables for GaussSuppression","text":"GaussSuppression package uses common interface shared SDC packages developed Statistics Norway (see also SmallCountRounding SSBcellKey). background, packages use model matrix representation, connects input data intended output. functionality provided R package SSBtools. vignette, look multiple ways specifying output tables given different forms input. Note vignette scratches surface possible provided interface, rather intended help users get going package. begin importing necessary dependencies well loading test data set provided SSBtools package. imported data set fictitious data set containing variables: region, county, size, main_income, freq, region, county, size different (non-nested) regional hierarchies. GaussSuppression can take microdata input well, demonstrate following sections. table illustrates dataset reshaped wide format several freq columns created main_income variable. However, please note data input output GaussSuppression package always long format. Table 1: dataset reshaped wide format.","code":"library(SSBtools) library(GaussSuppression)  dataset <- SSBtools::SSBtoolsData(\"d2s\")  microdata <- SSBtools::MakeMicro(dataset, \"freq\")  head(dataset) #>   region   county  size main_income freq #> 1      A county-1   BIG       other    2 #> 2      B county-2   BIG       other    3 #> 3      C county-2   BIG       other    5 #> 4      D county-1 small       other    3 #> 5      E county-3 small       other    9 #> 6      F county-3 small       other    4 nrow(dataset) #> [1] 24 head(microdata) #>   region   county size main_income freq #> 1      A county-1  BIG       other    1 #> 2      A county-1  BIG       other    1 #> 3      B county-2  BIG       other    1 #> 4      B county-2  BIG       other    1 #> 5      B county-2  BIG       other    1 #> 6      C county-2  BIG       other    1 nrow(microdata) #> [1] 338"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/define_tables.html","id":"defining-table-dimensions","dir":"Articles","previous_headings":"","what":"Defining Table Dimensions","title":"Defining Tables for GaussSuppression","text":"Output tables mainly specified using following three parameters: dimVar, hierarchies, formula.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/define_tables.html","id":"creating-tables-using-dimvar","dir":"Articles","previous_headings":"Defining Table Dimensions","what":"Creating tables using dimVar","title":"Defining Tables for GaussSuppression","text":"basic way defining output tables using dimVar parameter. generates default combinations variables provided, including marginals. example, following function call creates one dimensional frequency table variable region. Table 2: dimVar = \"region\"  Note use function GaussSuppressionFromData inclusion two parameters primary protectZeros. functions GaussSuppression designed incorporate table building protection single function call. Thus, illustrate table building features, set nothing must protected. learn different ways protecting tables, see vignettes package. similar fashion, can include multiple variables dimVar parameter: output shown formatted reshaped table. Cells also occur input/inner cells white background. Table 3: dimVar = c(\"region\", \"main_income\")  Note particular happens provide two regional variables: Table 4: dimVar = c(\"region\", \"county\")  function detects hierarchies encoded dimVar columns, collapses single column (name detailed variable). way, necessary specify hierarchies hand include explicitly function call. also works non-nested hierarchies: Table 5: dimVar = c(\"region\", \"county\", \"size\") can combine dimensional variables example data: Table 6: dimVar = c(\"region\", \"county\", \"size\", \"main_income\") background, functions SSBtools used find hierarchies. multiple ways inspecting hierarchies can found; users familiar DimLists used SDC packages can example use following: Note last example contained non-nested hierarchies. , unique DimList created tree-shaped hierarchy data set. avoids need specifying non-nested hierarchies linked tables. Finally, illustration purposes, see function calls work microdata input: output illustrated Table 5 .","code":"GaussSuppressionFromData(data = dataset,                          dimVar = \"region\",                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>   region freq primary suppressed #> 1  Total  338   FALSE      FALSE #> 2      A  104   FALSE      FALSE #> 3      B   51   FALSE      FALSE #> 4      C   73   FALSE      FALSE #> 5      D   14   FALSE      FALSE #> 6      E   61   FALSE      FALSE #> 7      F   35   FALSE      FALSE GaussSuppressionFromData(data = dataset,                          dimVar = c(\"region\", \"main_income\"),                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>    region main_income freq primary suppressed #> 1   Total       Total  338   FALSE      FALSE #> 2   Total  assistance  178   FALSE      FALSE #> 3   Total       other   26   FALSE      FALSE #> 4   Total    pensions  112   FALSE      FALSE #> 5   Total       wages   22   FALSE      FALSE #> 6       A       Total  104   FALSE      FALSE #> 7       A  assistance   55   FALSE      FALSE #> 8       A       other    2   FALSE      FALSE #> 9       A    pensions   36   FALSE      FALSE #> 10      A       wages   11   FALSE      FALSE #> 11      B       Total   51   FALSE      FALSE #> 12      B  assistance   29   FALSE      FALSE #> 13      B       other    3   FALSE      FALSE #> 14      B    pensions   18   FALSE      FALSE #> 15      B       wages    1   FALSE      FALSE #> 16      C       Total   73   FALSE      FALSE #> 17      C  assistance   35   FALSE      FALSE #> 18      C       other    5   FALSE      FALSE #> 19      C    pensions   25   FALSE      FALSE #> 20      C       wages    8   FALSE      FALSE #> 21      D       Total   14   FALSE      FALSE #> 22      D  assistance    9   FALSE      FALSE #> 23      D       other    3   FALSE      FALSE #> 24      D    pensions    2   FALSE      FALSE #> 25      D       wages    0   FALSE      FALSE #> 26      E       Total   61   FALSE      FALSE #> 27      E  assistance   32   FALSE      FALSE #> 28      E       other    9   FALSE      FALSE #> 29      E    pensions   20   FALSE      FALSE #> 30      E       wages    0   FALSE      FALSE #> 31      F       Total   35   FALSE      FALSE #> 32      F  assistance   18   FALSE      FALSE #> 33      F       other    4   FALSE      FALSE #> 34      F    pensions   11   FALSE      FALSE #> 35      F       wages    2   FALSE      FALSE GaussSuppressionFromData(data = dataset,                          dimVar = c(\"region\", \"county\"),                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>      region freq primary suppressed #> 1     Total  338   FALSE      FALSE #> 2  county-1  118   FALSE      FALSE #> 3  county-2  124   FALSE      FALSE #> 4  county-3   96   FALSE      FALSE #> 5         A  104   FALSE      FALSE #> 6         B   51   FALSE      FALSE #> 7         C   73   FALSE      FALSE #> 8         D   14   FALSE      FALSE #> 9         E   61   FALSE      FALSE #> 10        F   35   FALSE      FALSE GaussSuppressionFromData(data = dataset,                          dimVar = c(\"region\", \"county\", \"size\"),                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>      region freq primary suppressed #> 1       BIG  228   FALSE      FALSE #> 2  county-1  118   FALSE      FALSE #> 3  county-2  124   FALSE      FALSE #> 4  county-3   96   FALSE      FALSE #> 5     small  110   FALSE      FALSE #> 6     Total  338   FALSE      FALSE #> 7         A  104   FALSE      FALSE #> 8         B   51   FALSE      FALSE #> 9         C   73   FALSE      FALSE #> 10        D   14   FALSE      FALSE #> 11        E   61   FALSE      FALSE #> 12        F   35   FALSE      FALSE output <- GaussSuppressionFromData(data = dataset,                                    dimVar = c(\"region\", \"county\", \"size\", \"main_income\"),                                    freqVar = \"freq\",                                    primary = FALSE,                                    protectZeros = FALSE) head(output) #>     region main_income freq primary suppressed #> 1      BIG       Total  228   FALSE      FALSE #> 2      BIG  assistance  119   FALSE      FALSE #> 3      BIG       other   10   FALSE      FALSE #> 4      BIG    pensions   79   FALSE      FALSE #> 5      BIG       wages   20   FALSE      FALSE #> 6 county-1       Total  118   FALSE      FALSE FindDimLists(dataset[c(\"region\", \"county\")]) #> $region #>    levels    codes #> 1       @    Total #> 2      @@ county-1 #> 3     @@@        A #> 4     @@@        D #> 5      @@ county-2 #> 6     @@@        B #> 7     @@@        C #> 8      @@ county-3 #> 9     @@@        E #> 10    @@@        F FindDimLists(dataset[c(\"region\", \"county\", \"size\")]) #> $region #>    levels    codes #> 1       @    Total #> 2      @@ county-1 #> 3     @@@        A #> 4     @@@        D #> 5      @@ county-2 #> 6     @@@        B #> 7     @@@        C #> 8      @@ county-3 #> 9     @@@        E #> 10    @@@        F #>  #> $region #>   levels codes #> 1      @ Total #> 2     @@   BIG #> 3    @@@     A #> 4    @@@     B #> 5    @@@     C #> 6     @@ small #> 7    @@@     D #> 8    @@@     E #> 9    @@@     F GaussSuppressionFromData(data = microdata,                          dimVar = c(\"region\", \"county\", \"size\"),                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>      region freq primary suppressed #> 1       BIG  228   FALSE      FALSE #> 2  county-1  118   FALSE      FALSE #> 3  county-2  124   FALSE      FALSE #> 4  county-3   96   FALSE      FALSE #> 5     small  110   FALSE      FALSE #> 6     Total  338   FALSE      FALSE #> 7         A  104   FALSE      FALSE #> 8         B   51   FALSE      FALSE #> 9         C   73   FALSE      FALSE #> 10        D   14   FALSE      FALSE #> 11        E   61   FALSE      FALSE #> 12        F   35   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/define_tables.html","id":"creating-tables-using-hierarchies","dir":"Articles","previous_headings":"Defining Table Dimensions","what":"Creating tables using hierarchies","title":"Defining Tables for GaussSuppression","text":"hierarchies parameter allows explicit specification hierarchies used creating output table. allows fine-grained approach opposed simply using dimVar, allows applying hierarchies already present data set. Hierarchies can provided many ways. vignette, exemplify following three forms: dimlist (defined sdcTable), using hrc format TauArgus, finally general hierarchy specification (internally, surprisingly, simply called hierarchy). can provided hierarchies parameter, translated internal hierarchy representation. purposes vignette, use dimlists, however following example shall see can translated one another using functions SSBtools. Let us begin defining two hierarchies using dimlists: can use hierarchies specify output table. supplying named list hierarchies parameter, list names correspond variables data, list elements correspond hierarchies wish include. Table 7: hierarchies = list(region = region_dim, main_income = income_dim) mentioned previously, GaussSuppression package supports non-nested hierarchies natively. achieve multiple elements name hierarchies list: Table 8: hierarchies = list(region = region_dim, region = region2_dim) Finally, , functionality works microdata input well.","code":"region_dim <- data.frame(levels = c(\"@\", \"@@\", rep(\"@@@\", 2), rep(\"@@\", 4)),                          codes = c(\"Total\", \"AB\", LETTERS[1:6])) region_dim #>   levels codes #> 1      @ Total #> 2     @@    AB #> 3    @@@     A #> 4    @@@     B #> 5     @@     C #> 6     @@     D #> 7     @@     E #> 8     @@     F  income_dim <- data.frame(levels = c(\"@\", \"@@\", \"@@\", \"@@@\", \"@@@\", \"@@@\"),                          codes = c(\"Total\", \"wages\", \"not_wages\", \"other\", \"assistance\", \"pensions\")) income_dim #>   levels      codes #> 1      @      Total #> 2     @@      wages #> 3     @@  not_wages #> 4    @@@      other #> 5    @@@ assistance #> 6    @@@   pensions SSBtools::DimList2Hrc(income_dim) #> [1] \"wages\"       \"not_wages\"   \"@other\"      \"@assistance\" \"@pensions\" SSBtools::DimList2Hierarchy(income_dim) #>     mapsFrom    mapsTo sign level #> 1      wages     Total    1     2 #> 2  not_wages     Total    1     2 #> 3      other not_wages    1     1 #> 4 assistance not_wages    1     1 #> 5   pensions not_wages    1     1 GaussSuppressionFromData(data = dataset,                          hierarchies = list(region = region_dim, main_income = income_dim),                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>    region main_income freq primary suppressed #> 1   Total       Total  338   FALSE      FALSE #> 2   Total   not_wages  316   FALSE      FALSE #> 3   Total  assistance  178   FALSE      FALSE #> 4   Total       other   26   FALSE      FALSE #> 5   Total    pensions  112   FALSE      FALSE #> 6   Total       wages   22   FALSE      FALSE #> 7      AB       Total  155   FALSE      FALSE #> 8      AB   not_wages  143   FALSE      FALSE #> 9      AB  assistance   84   FALSE      FALSE #> 10     AB       other    5   FALSE      FALSE #> 11     AB    pensions   54   FALSE      FALSE #> 12     AB       wages   12   FALSE      FALSE #> 13      A       Total  104   FALSE      FALSE #> 14      A   not_wages   93   FALSE      FALSE #> 15      A  assistance   55   FALSE      FALSE #> 16      A       other    2   FALSE      FALSE #> 17      A    pensions   36   FALSE      FALSE #> 18      A       wages   11   FALSE      FALSE #> 19      B       Total   51   FALSE      FALSE #> 20      B   not_wages   50   FALSE      FALSE #> 21      B  assistance   29   FALSE      FALSE #> 22      B       other    3   FALSE      FALSE #> 23      B    pensions   18   FALSE      FALSE #> 24      B       wages    1   FALSE      FALSE #> 25      C       Total   73   FALSE      FALSE #> 26      C   not_wages   65   FALSE      FALSE #> 27      C  assistance   35   FALSE      FALSE #> 28      C       other    5   FALSE      FALSE #> 29      C    pensions   25   FALSE      FALSE #> 30      C       wages    8   FALSE      FALSE #> 31      D       Total   14   FALSE      FALSE #> 32      D   not_wages   14   FALSE      FALSE #> 33      D  assistance    9   FALSE      FALSE #> 34      D       other    3   FALSE      FALSE #> 35      D    pensions    2   FALSE      FALSE #> 36      D       wages    0   FALSE      FALSE #> 37      E       Total   61   FALSE      FALSE #> 38      E   not_wages   61   FALSE      FALSE #> 39      E  assistance   32   FALSE      FALSE #> 40      E       other    9   FALSE      FALSE #> 41      E    pensions   20   FALSE      FALSE #> 42      E       wages    0   FALSE      FALSE #> 43      F       Total   35   FALSE      FALSE #> 44      F   not_wages   33   FALSE      FALSE #> 45      F  assistance   18   FALSE      FALSE #> 46      F       other    4   FALSE      FALSE #> 47      F    pensions   11   FALSE      FALSE #> 48      F       wages    2   FALSE      FALSE region2_dim <- data.frame(levels = c(\"@\", rep(c(\"@@\", rep(\"@@@\", 2)), 2), rep(\"@@\", 2)),                           codes = c(\"Total\", \"AD\", \"A\", \"D\",                                       \"BF\", \"B\", \"F\",                                      \"C\", \"E\")) region2_dim #>   levels codes #> 1      @ Total #> 2     @@    AD #> 3    @@@     A #> 4    @@@     D #> 5     @@    BF #> 6    @@@     B #> 7    @@@     F #> 8     @@     C #> 9     @@     E  GaussSuppressionFromData(data = dataset,                          hierarchies = list(region = region_dim, region = region2_dim),                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>    region freq primary suppressed #> 1      AB  155   FALSE      FALSE #> 2      AD  118   FALSE      FALSE #> 3      BF   86   FALSE      FALSE #> 4   Total  338   FALSE      FALSE #> 5       A  104   FALSE      FALSE #> 6       B   51   FALSE      FALSE #> 7       C   73   FALSE      FALSE #> 8       D   14   FALSE      FALSE #> 9       E   61   FALSE      FALSE #> 10      F   35   FALSE      FALSE GaussSuppressionFromData(data = microdata,                          hierarchies = list(region = region_dim, region = region2_dim),                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>    region freq primary suppressed #> 1      AB  155   FALSE      FALSE #> 2      AD  118   FALSE      FALSE #> 3      BF   86   FALSE      FALSE #> 4   Total  338   FALSE      FALSE #> 5       A  104   FALSE      FALSE #> 6       B   51   FALSE      FALSE #> 7       C   73   FALSE      FALSE #> 8       D   14   FALSE      FALSE #> 9       E   61   FALSE      FALSE #> 10      F   35   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/define_tables.html","id":"creating-tables-using-formula","dir":"Articles","previous_headings":"Defining Table Dimensions","what":"Creating tables using formula","title":"Defining Tables for GaussSuppression","text":"flexible method specifying output GaussSuppression using formula interface. makes use model formulas R, provides powerful way specifying multiple different tables. Indeed, examples—much —can replicated using formula interface. formula’s predictor variables must variable names occuring data set (dependent variable ignored, thus leave empty). following, create table based region county variables. , hierarchical relationship variables detected automatically: Table 9: formula = ~ region + county  hierarchical relationship variables, multiplication formula specification dimVar yield results. Table 10: formula = ~ county * main_income dimVar = c(\"county\" , \"main_income\") However, formula lets us specify different shapes tables. example, interested marginal values, can supply use addition operator: Table 11: formula = ~ county + main_income example demonstrates, fact, ability specifying multiple linked tables: one-dimensional table county linked one-dimensional table main_income. Similarly, can use colon (“:”) operator omit row column marginals: Table 12: formula = ~ county:main_income Using subtraction, can omit marginals cells output. example, intercept (sum records) can omitted including - 1 formula, like : formula = county : main_income - 1. Using features, can define complicated linked tables. illustrate , let us assume wish publish following: levels detail main_income counties sizes, region level, wish publish main source income “wages” “not_wages”. , begin adding column encoding whether main source income “wages” “not_wages”. can specify desired output following formula: Table 13: formula = ~ region * income2 + (county + size) * main_income manner, can specify multiple linked tables, can use different non-nested hierarchies. allows suppression algorithm protect tables simultaneously (indeed, treated single table internally), avoiding need stratified protection paradigm. Furthermore, fine-grained specification cells published allows secondary suppression algorithm protect respect precisely cells published. row column marginals published, example, suppression algorithm need secondary suppress respect marginals. See vignettes package details setting protection methods. Looking output data Table 13, see row 9 duplicated row 18. reason code wages used main_income variable income2 variable. Currently, formula interface special checking phenomenon. recommended practice avoid duplicate codes. running FindDimLists, see function performs checking.","code":"GaussSuppressionFromData(data = microdata,                          formula = ~ region + county,                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>      region freq primary suppressed #> 1     Total  338   FALSE      FALSE #> 2         A  104   FALSE      FALSE #> 3         B   51   FALSE      FALSE #> 4         C   73   FALSE      FALSE #> 5         D   14   FALSE      FALSE #> 6         E   61   FALSE      FALSE #> 7         F   35   FALSE      FALSE #> 8  county-1  118   FALSE      FALSE #> 9  county-2  124   FALSE      FALSE #> 10 county-3   96   FALSE      FALSE GaussSuppressionFromData(data = microdata,                          formula = ~ county * main_income,                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>      county main_income freq primary suppressed #> 1     Total       Total  338   FALSE      FALSE #> 2  county-1       Total  118   FALSE      FALSE #> 3  county-2       Total  124   FALSE      FALSE #> 4  county-3       Total   96   FALSE      FALSE #> 5     Total  assistance  178   FALSE      FALSE #> 6     Total       other   26   FALSE      FALSE #> 7     Total    pensions  112   FALSE      FALSE #> 8     Total       wages   22   FALSE      FALSE #> 9  county-1  assistance   64   FALSE      FALSE #> 10 county-1       other    5   FALSE      FALSE #> 11 county-1    pensions   38   FALSE      FALSE #> 12 county-1       wages   11   FALSE      FALSE #> 13 county-2  assistance   64   FALSE      FALSE #> 14 county-2       other    8   FALSE      FALSE #> 15 county-2    pensions   43   FALSE      FALSE #> 16 county-2       wages    9   FALSE      FALSE #> 17 county-3  assistance   50   FALSE      FALSE #> 18 county-3       other   13   FALSE      FALSE #> 19 county-3    pensions   31   FALSE      FALSE #> 20 county-3       wages    2   FALSE      FALSE   GaussSuppressionFromData(data = microdata,                          dimVar = c(\"county\" , \"main_income\"),                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>      county main_income freq primary suppressed #> 1     Total       Total  338   FALSE      FALSE #> 2     Total  assistance  178   FALSE      FALSE #> 3     Total       other   26   FALSE      FALSE #> 4     Total    pensions  112   FALSE      FALSE #> 5     Total       wages   22   FALSE      FALSE #> 6  county-1       Total  118   FALSE      FALSE #> 7  county-1  assistance   64   FALSE      FALSE #> 8  county-1       other    5   FALSE      FALSE #> 9  county-1    pensions   38   FALSE      FALSE #> 10 county-1       wages   11   FALSE      FALSE #> 11 county-2       Total  124   FALSE      FALSE #> 12 county-2  assistance   64   FALSE      FALSE #> 13 county-2       other    8   FALSE      FALSE #> 14 county-2    pensions   43   FALSE      FALSE #> 15 county-2       wages    9   FALSE      FALSE #> 16 county-3       Total   96   FALSE      FALSE #> 17 county-3  assistance   50   FALSE      FALSE #> 18 county-3       other   13   FALSE      FALSE #> 19 county-3    pensions   31   FALSE      FALSE #> 20 county-3       wages    2   FALSE      FALSE GaussSuppressionFromData(data = microdata,                          formula = ~ county + main_income,                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>     county main_income freq primary suppressed #> 1    Total       Total  338   FALSE      FALSE #> 2 county-1       Total  118   FALSE      FALSE #> 3 county-2       Total  124   FALSE      FALSE #> 4 county-3       Total   96   FALSE      FALSE #> 5    Total  assistance  178   FALSE      FALSE #> 6    Total       other   26   FALSE      FALSE #> 7    Total    pensions  112   FALSE      FALSE #> 8    Total       wages   22   FALSE      FALSE GaussSuppressionFromData(data = microdata,                          formula = ~ county:main_income,                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>      county main_income freq primary suppressed #> 1     Total       Total  338   FALSE      FALSE #> 2  county-1  assistance   64   FALSE      FALSE #> 3  county-1       other    5   FALSE      FALSE #> 4  county-1    pensions   38   FALSE      FALSE #> 5  county-1       wages   11   FALSE      FALSE #> 6  county-2  assistance   64   FALSE      FALSE #> 7  county-2       other    8   FALSE      FALSE #> 8  county-2    pensions   43   FALSE      FALSE #> 9  county-2       wages    9   FALSE      FALSE #> 10 county-3  assistance   50   FALSE      FALSE #> 11 county-3       other   13   FALSE      FALSE #> 12 county-3    pensions   31   FALSE      FALSE #> 13 county-3       wages    2   FALSE      FALSE dataset$income2 <- ifelse(dataset$main_income == \"wages\", \"wages\", \"not_wages\") microdata$income2 <- ifelse(microdata$main_income == \"wages\", \"wages\", \"not_wages\") head(dataset) #>   region   county  size main_income freq   income2 #> 1      A county-1   BIG       other    2 not_wages #> 2      B county-2   BIG       other    3 not_wages #> 3      C county-2   BIG       other    5 not_wages #> 4      D county-1 small       other    3 not_wages #> 5      E county-3 small       other    9 not_wages #> 6      F county-3 small       other    4 not_wages GaussSuppressionFromData(data = dataset,                          formula = ~ region * income2 + (county + size) * main_income,                          freqVar = \"freq\",                          primary = FALSE,                          protectZeros = FALSE) #>      region main_income freq primary suppressed #> 1     Total       Total  338   FALSE      FALSE #> 2         A       Total  104   FALSE      FALSE #> 3         B       Total   51   FALSE      FALSE #> 4         C       Total   73   FALSE      FALSE #> 5         D       Total   14   FALSE      FALSE #> 6         E       Total   61   FALSE      FALSE #> 7         F       Total   35   FALSE      FALSE #> 8     Total   not_wages  316   FALSE      FALSE #> 9     Total       wages   22   FALSE      FALSE #> 10 county-1       Total  118   FALSE      FALSE #> 11 county-2       Total  124   FALSE      FALSE #> 12 county-3       Total   96   FALSE      FALSE #> 13      BIG       Total  228   FALSE      FALSE #> 14    small       Total  110   FALSE      FALSE #> 15    Total  assistance  178   FALSE      FALSE #> 16    Total       other   26   FALSE      FALSE #> 17    Total    pensions  112   FALSE      FALSE #> 18    Total       wages   22   FALSE      FALSE #> 19        A   not_wages   93   FALSE      FALSE #> 20        A       wages   11   FALSE      FALSE #> 21        B   not_wages   50   FALSE      FALSE #> 22        B       wages    1   FALSE      FALSE #> 23        C   not_wages   65   FALSE      FALSE #> 24        C       wages    8   FALSE      FALSE #> 25        D   not_wages   14   FALSE      FALSE #> 26        D       wages    0   FALSE      FALSE #> 27        E   not_wages   61   FALSE      FALSE #> 28        E       wages    0   FALSE      FALSE #> 29        F   not_wages   33   FALSE      FALSE #> 30        F       wages    2   FALSE      FALSE #> 31 county-1  assistance   64   FALSE      FALSE #> 32 county-1       other    5   FALSE      FALSE #> 33 county-1    pensions   38   FALSE      FALSE #> 34 county-1       wages   11   FALSE      FALSE #> 35 county-2  assistance   64   FALSE      FALSE #> 36 county-2       other    8   FALSE      FALSE #> 37 county-2    pensions   43   FALSE      FALSE #> 38 county-2       wages    9   FALSE      FALSE #> 39 county-3  assistance   50   FALSE      FALSE #> 40 county-3       other   13   FALSE      FALSE #> 41 county-3    pensions   31   FALSE      FALSE #> 42 county-3       wages    2   FALSE      FALSE #> 43      BIG  assistance  119   FALSE      FALSE #> 44      BIG       other   10   FALSE      FALSE #> 45      BIG    pensions   79   FALSE      FALSE #> 46      BIG       wages   20   FALSE      FALSE #> 47    small  assistance   59   FALSE      FALSE #> 48    small       other   16   FALSE      FALSE #> 49    small    pensions   33   FALSE      FALSE #> 50    small       wages    2   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/articles/define_tables.html","id":"tabulating-continuous-variables","dir":"Articles","previous_headings":"","what":"Tabulating continuous variables","title":"Defining Tables for GaussSuppression","text":"addition defining dimensions output tables, need decide whether frequency tables (count contributing records) magnititude tables (add contributing records’ numerical values given variable). examples frequency tables. However, process exactly one wishes construct magnititude tables; difference one must specify numerical variable help parameter numVar. Since magnitude table suppression methods based comparing units’ contributions, input data likely supplied microdata. Therefore, let us add fake numerical variable microdata: order construct magnitude table records’ contributions num aggregated, supply parameter GaussSuppressionFromData: Table 14: formula = ~ region * income2 + (county + size) * main_income  cell: num frequencies parenthesis.  Note two empty cells wages column. means cells included output data. One reason removeEmpty parameter SSBtools::ModelMatrix TRUE default case formula interface. including removeEmpty = FALSE, zeros included output. Another way achieve use extend0 = TRUE. parameter, zeros added input data automatic aggregation microdata. see vignettes package, extend0 parameter can important suppression methods. Note also new frequency variable generated call. frequency variable already present input data, can provide addition numVar method use information instead:","code":"set.seed(12345) microdata$num <- sample(0:1000, nrow(microdata), replace = TRUE) GaussSuppressionFromData(data = microdata,                          formula = ~ region * income2 + (county + size) * main_income,                          numVar = \"num\",                          primary = FALSE,                          protectZeros = FALSE) #> [preAggregate 338*7->22*7] #>      region main_income freq.1    num primary suppressed #> 1     Total       Total    338 168843   FALSE      FALSE #> 2         A       Total    104  50640   FALSE      FALSE #> 3         B       Total     51  27386   FALSE      FALSE #> 4         C       Total     73  35826   FALSE      FALSE #> 5         D       Total     14   5730   FALSE      FALSE #> 6         E       Total     61  30295   FALSE      FALSE #> 7         F       Total     35  18966   FALSE      FALSE #> 8     Total   not_wages    316 157199   FALSE      FALSE #> 9     Total       wages     22  11644   FALSE      FALSE #> 10 county-1       Total    118  56370   FALSE      FALSE #> 11 county-2       Total    124  63212   FALSE      FALSE #> 12 county-3       Total     96  49261   FALSE      FALSE #> 13      BIG       Total    228 113852   FALSE      FALSE #> 14    small       Total    110  54991   FALSE      FALSE #> 15    Total  assistance    178  91989   FALSE      FALSE #> 16    Total       other     26  13000   FALSE      FALSE #> 17    Total    pensions    112  52210   FALSE      FALSE #> 18    Total       wages     22  11644   FALSE      FALSE #> 19        A   not_wages     93  45268   FALSE      FALSE #> 20        A       wages     11   5372   FALSE      FALSE #> 21        B   not_wages     50  26500   FALSE      FALSE #> 22        B       wages      1    886   FALSE      FALSE #> 23        C   not_wages     65  32111   FALSE      FALSE #> 24        C       wages      8   3715   FALSE      FALSE #> 25        D   not_wages     14   5730   FALSE      FALSE #> 26        E   not_wages     61  30295   FALSE      FALSE #> 27        F   not_wages     33  17295   FALSE      FALSE #> 28        F       wages      2   1671   FALSE      FALSE #> 29 county-1  assistance     64  33024   FALSE      FALSE #> 30 county-1       other      5   1260   FALSE      FALSE #> 31 county-1    pensions     38  16714   FALSE      FALSE #> 32 county-1       wages     11   5372   FALSE      FALSE #> 33 county-2  assistance     64  33424   FALSE      FALSE #> 34 county-2       other      8   4696   FALSE      FALSE #> 35 county-2    pensions     43  20491   FALSE      FALSE #> 36 county-2       wages      9   4601   FALSE      FALSE #> 37 county-3  assistance     50  25541   FALSE      FALSE #> 38 county-3       other     13   7044   FALSE      FALSE #> 39 county-3    pensions     31  15005   FALSE      FALSE #> 40 county-3       wages      2   1671   FALSE      FALSE #> 41      BIG  assistance    119  62407   FALSE      FALSE #> 42      BIG       other     10   4887   FALSE      FALSE #> 43      BIG    pensions     79  36585   FALSE      FALSE #> 44      BIG       wages     20   9973   FALSE      FALSE #> 45    small  assistance     59  29582   FALSE      FALSE #> 46    small       other     16   8113   FALSE      FALSE #> 47    small    pensions     33  15625   FALSE      FALSE #> 48    small       wages      2   1671   FALSE      FALSE GaussSuppressionFromData(data = microdata,                          formula = ~ region * income2 + (county + size) * main_income,                          freqVar = \"freq\",                          numVar = \"num\",                          primary = FALSE,                          protectZeros = FALSE) #>      region main_income freq    num primary suppressed #> 1     Total       Total  338 168843   FALSE      FALSE #> 2         A       Total  104  50640   FALSE      FALSE #> 3         B       Total   51  27386   FALSE      FALSE #> 4         C       Total   73  35826   FALSE      FALSE #> 5         D       Total   14   5730   FALSE      FALSE #> 6         E       Total   61  30295   FALSE      FALSE #> 7         F       Total   35  18966   FALSE      FALSE #> 8     Total   not_wages  316 157199   FALSE      FALSE #> 9     Total       wages   22  11644   FALSE      FALSE #> 10 county-1       Total  118  56370   FALSE      FALSE #> 11 county-2       Total  124  63212   FALSE      FALSE #> 12 county-3       Total   96  49261   FALSE      FALSE #> 13      BIG       Total  228 113852   FALSE      FALSE #> 14    small       Total  110  54991   FALSE      FALSE #> 15    Total  assistance  178  91989   FALSE      FALSE #> 16    Total       other   26  13000   FALSE      FALSE #> 17    Total    pensions  112  52210   FALSE      FALSE #> 18    Total       wages   22  11644   FALSE      FALSE #> 19        A   not_wages   93  45268   FALSE      FALSE #> 20        A       wages   11   5372   FALSE      FALSE #> 21        B   not_wages   50  26500   FALSE      FALSE #> 22        B       wages    1    886   FALSE      FALSE #> 23        C   not_wages   65  32111   FALSE      FALSE #> 24        C       wages    8   3715   FALSE      FALSE #> 25        D   not_wages   14   5730   FALSE      FALSE #> 26        E   not_wages   61  30295   FALSE      FALSE #> 27        F   not_wages   33  17295   FALSE      FALSE #> 28        F       wages    2   1671   FALSE      FALSE #> 29 county-1  assistance   64  33024   FALSE      FALSE #> 30 county-1       other    5   1260   FALSE      FALSE #> 31 county-1    pensions   38  16714   FALSE      FALSE #> 32 county-1       wages   11   5372   FALSE      FALSE #> 33 county-2  assistance   64  33424   FALSE      FALSE #> 34 county-2       other    8   4696   FALSE      FALSE #> 35 county-2    pensions   43  20491   FALSE      FALSE #> 36 county-2       wages    9   4601   FALSE      FALSE #> 37 county-3  assistance   50  25541   FALSE      FALSE #> 38 county-3       other   13   7044   FALSE      FALSE #> 39 county-3    pensions   31  15005   FALSE      FALSE #> 40 county-3       wages    2   1671   FALSE      FALSE #> 41      BIG  assistance  119  62407   FALSE      FALSE #> 42      BIG       other   10   4887   FALSE      FALSE #> 43      BIG    pensions   79  36585   FALSE      FALSE #> 44      BIG       wages   20   9973   FALSE      FALSE #> 45    small  assistance   59  29582   FALSE      FALSE #> 46    small       other   16   8113   FALSE      FALSE #> 47    small    pensions   33  15625   FALSE      FALSE #> 48    small       wages    2   1671   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Øyvind Langsrud. Author, maintainer. Daniel Lupp. Author. Hege Bøvelstad. Contributor. Vidar Norstein Klungre. Reviewer. Statistics Norway. Copyright holder.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Langsrud Ø, Lupp D (2025). GaussSuppression: Tabular Data Suppression using Gaussian Elimination. R package version 0.9.6, https://statisticsnorway.github.io/ssb-gausssuppression/, https://github.com/statisticsnorway/ssb-gausssuppression.","code":"@Manual{,   title = {GaussSuppression: Tabular Data Suppression using Gaussian Elimination},   author = {Øyvind Langsrud and Daniel Lupp},   year = {2025},   note = {R package version 0.9.6, https://statisticsnorway.github.io/ssb-gausssuppression/},   url = {https://github.com/statisticsnorway/ssb-gausssuppression}, }"},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/index.html","id":"r-package-to-protect-tables-by-suppression-using-the-gaussian-elimination-algorithm","dir":"","previous_headings":"","what":"R-package to protect tables by suppression using the Gaussian elimination algorithm","title":"Tabular Data Suppression using Gaussian Elimination","text":"statistical disclosure control tool protect tables suppression using Gaussian elimination secondary suppression algorithm (Langsrud, 2024). suggestion start working functions SuppressSmallCounts() SuppressDominantCells(). functions use primary suppression functions minimum frequency rule dominance rule, respectively. Novel functionality suppression disclosive cells also included. General primary suppression functions can supplied input general working horse function, GaussSuppressionFromData(). Suppressed frequencies can replaced synthetic decimal numbers described Langsrud (2019). 📌 See broader list available functions. See package vignettes: Magnitude table suppression, Small count frequency table suppression, Defining tables GaussSuppression.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/index.html","id":"installation","dir":"","previous_headings":"R-package to protect tables by suppression using the Gaussian elimination algorithm","what":"Installation","title":"Tabular Data Suppression using Gaussian Elimination","text":"can install GaussSuppression CRAN Alternatively install GitHub bydevtools::install_github(\"statisticsnorway/ssb-gausssuppression\") want test newest changes. Official version CRAN: https://cran.r-project.org/package=GaussSuppression","code":"install.packages(\"GaussSuppression\")"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/AdditionalSuppression.html","id":null,"dir":"Reference","previous_headings":"","what":"GaussSuppression from data and suppressed data — AdditionalSuppression","title":"GaussSuppression from data and suppressed data — AdditionalSuppression","text":"Extended version GaussSuppressionFromData takes account suppression pattern suppressed data sent input","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/AdditionalSuppression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GaussSuppression from data and suppressed data — AdditionalSuppression","text":"","code":"AdditionalSuppression(   data,   ...,   fun = GaussSuppressionFromData,   primary = GetDefault(fun, \"primary\"),   suppressedData = NULL,   makePrimary = TRUE,   makeForced = TRUE,   forceNotPrimary = TRUE )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/AdditionalSuppression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GaussSuppression from data and suppressed data — AdditionalSuppression","text":"data Input data data frame ... parameters GaussSuppressionFromData fun function: GaussSuppressionFromData one wrappers SuppressSmallCounts SuppressDominantCells. primary input GaussSuppressionFromData possible extension caused suppressedData. Supply NULL primary suppressions retrieved form suppressedData. suppressedData data frame list data frames output GaussSuppressionFromData. makePrimary TRUE, suppression suppressedData preserved. makeForced TRUE, non-suppression suppressedData preserved. exception possible primary suppression priority forced. Use forceNotPrimary avoid exception. forceNotPrimary TRUE, non-suppression suppressedData forced primary suppressed.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/AdditionalSuppression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GaussSuppression from data and suppressed data — AdditionalSuppression","text":"Aggregated data suppression information","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/AdditionalSuppression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GaussSuppression from data and suppressed data — AdditionalSuppression","text":"function easy alternative using PrimaryFromSuppressedData relating functions manually. See examples PrimaryFromSuppressedData. default, suppression pattern suppressedData preserved. behavior can tuned parameters. Note variables used suppressedData addition \"suppressed\" matching names crossTable. Others ignored. See examples (d3, d4, d5). NOW FIX INCLUDED attribute totCode. EXAMPLES YET CHANGED.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/AdditionalSuppression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GaussSuppression from data and suppressed data — AdditionalSuppression","text":"","code":"z1 <- SSBtoolsData(\"z1\") z2 <- SSBtoolsData(\"z2\") z3 <- SSBtoolsData(\"z3\")  # Ordinary suppressions a <- GaussSuppressionFromData(z1, 1:2, 3, maxN = 5) #> GaussSuppression_anySum: ........................................ b <- GaussSuppressionFromData(z2, 1:4, 5, maxN = 1) #> GaussSuppression_anySum: ..............................  # As b and also suppression pattern in a preserved  b1 <- AdditionalSuppression(z2, 1:4, 5, maxN = 1, suppressedData = a) #> GaussSuppression_anySum: ...........................  # Rows with differences cbind(b, b1)[b1$suppressed != b$suppressed, ] #>    region hovedint ant primary suppressed region hovedint ant primary forced #> 2       1    annet  14   FALSE      FALSE      1    annet  14   FALSE  FALSE #> 3       1   arbeid  11   FALSE      FALSE      1   arbeid  11   FALSE  FALSE #> 37      8    annet  15   FALSE      FALSE      8    annet  15   FALSE  FALSE #> 38      8   arbeid   7   FALSE      FALSE      8   arbeid   7   FALSE  FALSE #> 47      A    annet  11   FALSE       TRUE      A    annet  11   FALSE   TRUE #> 48      A   arbeid  11   FALSE       TRUE      A   arbeid  11   FALSE   TRUE #> 57      C    annet   5   FALSE      FALSE      C    annet   5    TRUE  FALSE #> 58      C   arbeid   8   FALSE      FALSE      C   arbeid   8    TRUE  FALSE #> 62      D    annet  13   FALSE      FALSE      D    annet  13    TRUE  FALSE #> 63      D   arbeid   2   FALSE      FALSE      D   arbeid   2    TRUE  FALSE #> 77      G    annet   6   FALSE      FALSE      G    annet   6    TRUE  FALSE #> 78      G   arbeid   4   FALSE      FALSE      G   arbeid   4    TRUE  FALSE #> 82      H    annet   9   FALSE      FALSE      H    annet   9    TRUE  FALSE #> 83      H   arbeid   3   FALSE      FALSE      H   arbeid   3    TRUE  FALSE #>    unsafe suppressed #> 2   FALSE       TRUE #> 3   FALSE       TRUE #> 37  FALSE       TRUE #> 38  FALSE       TRUE #> 47  FALSE      FALSE #> 48  FALSE      FALSE #> 57  FALSE       TRUE #> 58  FALSE       TRUE #> 62  FALSE       TRUE #> 63  FALSE       TRUE #> 77  FALSE       TRUE #> 78  FALSE       TRUE #> 82  FALSE       TRUE #> 83  FALSE       TRUE  # All primary from a  b2 <- AdditionalSuppression(z2, 1:4, 5, suppressedData = a, primary = NULL, singleton = NULL) #> GaussSuppression_none: ............................  # Rows with suppression  b2[b2$suppressed, ] #>    region hovedint ant primary forced unsafe suppressed #> 17      4    annet   7   FALSE  FALSE  FALSE       TRUE #> 18      4   arbeid   1   FALSE  FALSE  FALSE       TRUE #> 37      8    annet  15   FALSE  FALSE  FALSE       TRUE #> 38      8   arbeid   7   FALSE  FALSE  FALSE       TRUE #> 52      B    annet   7    TRUE  FALSE  FALSE       TRUE #> 53      B   arbeid   1    TRUE  FALSE  FALSE       TRUE #> 57      C    annet   5    TRUE  FALSE  FALSE       TRUE #> 58      C   arbeid   8    TRUE  FALSE  FALSE       TRUE #> 62      D    annet  13    TRUE  FALSE  FALSE       TRUE #> 63      D   arbeid   2    TRUE  FALSE  FALSE       TRUE #> 77      G    annet   6    TRUE  FALSE  FALSE       TRUE #> 78      G   arbeid   4    TRUE  FALSE  FALSE       TRUE #> 82      H    annet   9    TRUE  FALSE  FALSE       TRUE #> 83      H   arbeid   3    TRUE  FALSE  FALSE       TRUE  # All primary from b2 d1 <- AdditionalSuppression(data = z3, 1:6, 7, suppressedData = b2, primary = NULL,                              singleton = NULL)  # No suppression since no common codes  d1[d1$suppressed, ] #> [1] region     hovedint   mnd        ant        primary    forced     unsafe     #> [8] suppressed #> <0 rows> (or 0-length row.names)  # Use another coding of fylke z3$fylke_ <- z3$fylke - 4 d2 <- AdditionalSuppression(data = z3, c(1, 3:6, 8), 7, suppressedData = b2, primary = NULL,                              singleton = NULL) #> GaussSuppression_none: .........................  # Two primary found in b2 -> several secondary d2[d2$suppressed,] #>     region hovedint    mnd ant primary forced unsafe suppressed #> 187      7    annet  Total  67   FALSE  FALSE  FALSE       TRUE #> 189      7    annet M06M12  32   FALSE  FALSE  FALSE       TRUE #> 192      7    annet m10m12  11   FALSE  FALSE  FALSE       TRUE #> 193      7   arbeid  Total  75   FALSE  FALSE  FALSE       TRUE #> 195      7   arbeid M06M12  24   FALSE  FALSE  FALSE       TRUE #> 198      7   arbeid m10m12  10   FALSE  FALSE  FALSE       TRUE #> 217      8    annet  Total  98    TRUE  FALSE  FALSE       TRUE #> 219      8    annet M06M12  26   FALSE  FALSE  FALSE       TRUE #> 222      8    annet m10m12   8   FALSE  FALSE  FALSE       TRUE #> 223      8   arbeid  Total  92    TRUE  FALSE  FALSE       TRUE #> 225      8   arbeid M06M12  36   FALSE  FALSE  FALSE       TRUE #> 228      8   arbeid m10m12  13   FALSE  FALSE  FALSE       TRUE #> 437      Q   arbeid m06m09   1   FALSE  FALSE  FALSE       TRUE #> 438      Q   arbeid m10m12   1   FALSE  FALSE  FALSE       TRUE #> 449      Q    trygd m06m09   3   FALSE  FALSE  FALSE       TRUE #> 450      Q    trygd m10m12   2   FALSE  FALSE  FALSE       TRUE #> 517      T    annet  Total   3   FALSE  FALSE  FALSE       TRUE #> 519      T    annet M06M12   2   FALSE  FALSE  FALSE       TRUE #> 522      T    annet m10m12   1   FALSE  FALSE  FALSE       TRUE #> 523      T   arbeid  Total   3   FALSE  FALSE  FALSE       TRUE #> 525      T   arbeid M06M12   2   FALSE  FALSE  FALSE       TRUE #> 527      T   arbeid m06m09   1   FALSE  FALSE  FALSE       TRUE #> 539      T    trygd m06m09   2   FALSE  FALSE  FALSE       TRUE #> 540      T    trygd m10m12   1   FALSE  FALSE  FALSE       TRUE #> 677      Y   arbeid m06m09   1   FALSE  FALSE  FALSE       TRUE #> 678      Y   arbeid m10m12   1   FALSE  FALSE  FALSE       TRUE #> 689      Y    trygd m06m09   3   FALSE  FALSE  FALSE       TRUE #> 690      Y    trygd m10m12   2   FALSE  FALSE  FALSE       TRUE #> 698      Z    annet M01M05   1   FALSE  FALSE  FALSE       TRUE #> 699      Z    annet M06M12   4   FALSE  FALSE  FALSE       TRUE #> 700      Z    annet m01m05   1   FALSE  FALSE  FALSE       TRUE #> 702      Z    annet m10m12   2   FALSE  FALSE  FALSE       TRUE #> 704      Z   arbeid M01M05   1   FALSE  FALSE  FALSE       TRUE #> 705      Z   arbeid M06M12   1   FALSE  FALSE  FALSE       TRUE #> 706      Z   arbeid m01m05   1   FALSE  FALSE  FALSE       TRUE #> 707      Z   arbeid m06m09   1   FALSE  FALSE  FALSE       TRUE #> 719      Z    trygd m06m09   2   FALSE  FALSE  FALSE       TRUE #> 720      Z    trygd m10m12   2   FALSE  FALSE  FALSE       TRUE #> 907      g    annet  Total   2   FALSE  FALSE  FALSE       TRUE #> 908      g    annet M01M05   2   FALSE  FALSE  FALSE       TRUE #> 910      g    annet m01m05   2   FALSE  FALSE  FALSE       TRUE #> 913      g   arbeid  Total   1   FALSE  FALSE  FALSE       TRUE #> 914      g   arbeid M01M05   1   FALSE  FALSE  FALSE       TRUE #> 916      g   arbeid m01m05   1   FALSE  FALSE  FALSE       TRUE   # Examples demonstrating limitations of AdditionalSuppression # Variable mnd in suppressedData is not used   # No suppression since unsuppressed rows used by makeForced and forceNotPrimary d3 <- AdditionalSuppression(data = z3, c(1, 3:4, 8), 7, suppressedData = d2, primary = NULL,                              singleton = NULL) #> GaussSuppression_none: ........................... d3[d3$suppressed, ] #>     region hovedint ant primary forced unsafe suppressed #> 32       7    annet  67    TRUE  FALSE  FALSE       TRUE #> 33       7   arbeid  75    TRUE  FALSE  FALSE       TRUE #> 37       8    annet  98    TRUE  FALSE  FALSE       TRUE #> 38       8   arbeid  92    TRUE  FALSE  FALSE       TRUE #> 87       T    annet   3    TRUE  FALSE  FALSE       TRUE #> 88       T   arbeid   3    TRUE  FALSE  FALSE       TRUE #> 152      g    annet   2    TRUE  FALSE  FALSE       TRUE #> 153      g   arbeid   1    TRUE  FALSE  FALSE       TRUE  # Now suppression, but not too much d4 <- AdditionalSuppression(data = z3, c(1, 3:4, 8), 7, suppressedData = d2,                              forceNotPrimary = FALSE, primary = NULL, singleton = NULL) #> GaussSuppression_none: ........................... d4[d4$suppressed, ] #>     region hovedint ant primary forced unsafe suppressed #> 32       7    annet  67    TRUE  FALSE  FALSE       TRUE #> 33       7   arbeid  75    TRUE  FALSE  FALSE       TRUE #> 37       8    annet  98    TRUE  FALSE  FALSE       TRUE #> 38       8   arbeid  92    TRUE  FALSE  FALSE       TRUE #> 87       T    annet   3    TRUE  FALSE  FALSE       TRUE #> 88       T   arbeid   3    TRUE  FALSE  FALSE       TRUE #> 152      g    annet   2    TRUE  FALSE  FALSE       TRUE #> 153      g   arbeid   1    TRUE  FALSE  FALSE       TRUE  # The correct way is to limit the input d5 <- AdditionalSuppression(data = z3, c(1, 3:4, 8), 7, suppressedData = d2[d2$mnd == \"Total\", ],                              primary = NULL, singleton = NULL) #> GaussSuppression_none: ........................... d5[d5$suppressed, ] #>     region hovedint ant primary forced unsafe suppressed #> 32       7    annet  67    TRUE  FALSE  FALSE       TRUE #> 33       7   arbeid  75    TRUE  FALSE  FALSE       TRUE #> 37       8    annet  98    TRUE  FALSE  FALSE       TRUE #> 38       8   arbeid  92    TRUE  FALSE  FALSE       TRUE #> 87       T    annet   3    TRUE  FALSE  FALSE       TRUE #> 88       T   arbeid   3    TRUE  FALSE  FALSE       TRUE #> 152      g    annet   2    TRUE  FALSE  FALSE       TRUE #> 153      g   arbeid   1    TRUE  FALSE  FALSE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/CandidatesDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Candidates functions — CandidatesDefault","title":"Candidates functions — CandidatesDefault","text":"Function GaussSuppressionFromData","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/CandidatesDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Candidates functions — CandidatesDefault","text":"","code":"CandidatesDefault(freq, x, secondaryZeros = FALSE, weight, ...)  CandidatesNum(   secondaryZeros = FALSE,   freq = NULL,   num,   weight,   x,   candidatesVar = NULL,   removeCodes = character(0),   removeCodesForCandidates = TRUE,   data,   charVar,   ... )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/CandidatesDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Candidates functions — CandidatesDefault","text":"freq Vector output frequencies x model matrix secondaryZeros TRUE, cells zero frequency value prioritized published secondary suppressed. achieved function zero frequency indices first retuned order. weight Vector output weights ... Unused parameters num Data frame output aggregates calculated numVar. several variables, without specifying candidatesVar,  first used. candidatesVar One variable names numVar used calculations. Specifying candidatesVar helps avoid warnings multiple numVar variables present. removeCodes parameter used suppression rules, e.g. NContributorsRule. often assumed cells contributors (charVar)  present removeCodes published. , cells prioritized achieve . Note functionality redundant cells specified forced. removeCodesForCandidates removeCodes ignored set FALSE. data Input data data frame (needed removeCodes calculations) charVar Variable(s) contributor codes (needed removeCodes calculations)","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/CandidatesDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Candidates functions — CandidatesDefault","text":"candidates, GaussSuppression input","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/CandidatesDefault.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Candidates functions — CandidatesDefault","text":"CandidatesDefault orders indices decreasingly according freq , weight non-NULL,  (freq+1)*weight. Ties handled prioritizing output cells calculated many input cells. addition, zeros handled according parameter secondaryZeros. freq negative (special hierarchy), abs(freq)*weight used. CandidatesNum orders indices decreasingly according absolute values numeric variable (according  abs(num[[1]])). practice done running CandidatesDefault manipulated weights.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ChainedSuppression.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeated GaussSuppression with forwarding of previous results — ChainedSuppression","title":"Repeated GaussSuppression with forwarding of previous results — ChainedSuppression","text":"AdditionalSuppression called several times. time previous  results suppressedData.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ChainedSuppression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated GaussSuppression with forwarding of previous results — ChainedSuppression","text":"","code":"ChainedSuppression(..., withinArg = NULL)  ChainedSuppressionHi(..., hierarchies)  ChainedSuppressionHi1(..., hierarchies)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ChainedSuppression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated GaussSuppression with forwarding of previous results — ChainedSuppression","text":"... Arguments AdditionalSuppression/GaussSuppressionFromData kept constant. withinArg list named lists. Arguments AdditionalSuppression/GaussSuppressionFromData kept constant. List elements suppressed data also allowed. hierarchies wrapper ChainedSuppressionHi, argument used generate withinArg ChainedSuppression length (see examples). , element number withinArg list(hierarchies = hierarchies[1:]). similar wrapper, ChainedSuppressionHi1, withinArg always two elements: list(hierarchies = hierarchies[1]) list(hierarchies = hierarchies).","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ChainedSuppression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeated GaussSuppression with forwarding of previous results — ChainedSuppression","text":"List data frames. wrappers, ChainedSuppressionHi ChainedSuppressionHi1, return single data frame, last list item.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ChainedSuppression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeated GaussSuppression with forwarding of previous results — ChainedSuppression","text":"","code":"z1 <- SSBtoolsData(\"z1\") z2 <- SSBtoolsData(\"z2\") z2b <- z2[3:5] names(z2b)[1] <- \"region\"  # As GaussSuppressionFromData when a single element within withinArg a1 <- ChainedSuppression(z1, 1:2, 3, maxN = 5) #> GaussSuppression_anySum: ........................................ a2 <- ChainedSuppression(z1, withinArg = list(list(dimVar = 1:2, freqVar = 3, maxN = 5))) #> GaussSuppression_anySum: ........................................ identical(a1, a2[[1]]) #> [1] TRUE  # b[[3]] include results from b[[1]] and b[[2]] b <- ChainedSuppression(z1, freqVar = 3, withinArg = list(        list(dimVar = 1,   maxN = 55),         list(dimVar = 2,   maxN = 55),         list(dimVar = 1:2, maxN = 5))) #> GaussSuppression_anySum: ...... #> GaussSuppression_anySum: .... #> GaussSuppression_anySum: ...................................  # d[[2]] is same as b1 in AdditionalSuppression examples d <- ChainedSuppression(withinArg = list(        list(data = z1,  dimVar = 1:2, freqVar = 3, maxN = 5),         list(data = z2,  dimVar = 1:4, freqVar = 5, maxN = 1))) #> GaussSuppression_anySum: ........................................ #> GaussSuppression_anySum: ...........................  # Common variable names important.  # Therefore kostragr renamed to region in z2b.  f <- ChainedSuppression(withinArg = list(        list(data = z1,  dimVar = 1:2, freqVar = 3, maxN = 5),         list(data = z2b, dimVar = 1:2, freqVar = 3, maxN = 5),         list(data = z2,  dimVar = 1:4, freqVar = 5, maxN = 1))) #> GaussSuppression_anySum: ........................................ #> GaussSuppression_anySum: .............. #> GaussSuppression_anySum: ..........................  # Parameters so that only suppressions are forwarded.  # This is first iteration in linked tables by iterations.  e <- ChainedSuppression(withinArg = list(        list(data = z1,  dimVar = 1:2, freqVar = 3, maxN = 5),         list(data = z2b, dimVar = 1:2, freqVar = 3, maxN = 5),         list(data = z2,  dimVar = 1:4, freqVar = 5, maxN = 1)),         makeForced = FALSE, forceNotPrimary = FALSE) #> GaussSuppression_anySum: ........................................ #> GaussSuppression_anySum: .............. #> GaussSuppression_anySum: ..........................         # \"A\" \"annet\"/\"arbeid\" could be suppressed here, but not in f since f[[1]]       e[[3]][which(e[[3]]$suppressed != f[[3]]$suppressed), ]   #>    region hovedint ant primary suppressed #> 2       1    annet  14   FALSE      FALSE #> 3       1   arbeid  11   FALSE      FALSE #> 7      10    annet  13   FALSE       TRUE #> 8      10   arbeid   2   FALSE       TRUE #> 47      A    annet  11   FALSE       TRUE #> 48      A   arbeid  11   FALSE       TRUE #> 97      K    annet   4   FALSE      FALSE #> 98      K   arbeid   2   FALSE      FALSE   #### Demonstrate SuppressionByChainedHierarchies  dimLists <- SSBtools::FindDimLists(z2[, 4:1])   # Two ways of doing the same calculations g1 <- ChainedSuppressionHi(z2, c(1, 3), 5, maxN = 1, hierarchies = dimLists) #> GaussSuppression_anySum: ................................. #> GaussSuppression_anySum: ............................ g1b <-  ChainedSuppression(z2, c(1, 3), 5, maxN = 1, withinArg = list(          list(hierarchies = dimLists[1]),          list(hierarchies = dimLists[1:2]),          list(hierarchies = dimLists[1:3])))[[3]]       #> GaussSuppression_anySum: ................................. #> GaussSuppression_anySum: ............................         # Results different after combining hierarchies       g2 <- ChainedSuppressionHi(z2, c(1, 3), 5, maxN = 1,           hierarchies = SSBtools::AutoHierarchies(dimLists))         #> GaussSuppression_anySum: ..............................         # In this case, the same results can be obtained by:          g3 <- ChainedSuppressionHi1(z2, c(1, 3), 5, maxN = 1, hierarchies = dimLists)         #> GaussSuppression_anySum: .............................."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ComputeIntervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for calculating intervals for suppressed tables. — ComputeIntervals","title":"Function for calculating intervals for suppressed tables. — ComputeIntervals","text":"function solves linear programs determine interval boundaries suppressed cells.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ComputeIntervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for calculating intervals for suppressed tables. — ComputeIntervals","text":"","code":"ComputeIntervals(   x,   z,   primary,   suppressed,   minVal = NULL,   lpPackage = \"lpSolve\",   gaussI = TRUE,   allInt = FALSE,   sparseConstraints = TRUE )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ComputeIntervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for calculating intervals for suppressed tables. — ComputeIntervals","text":"x ModelMatrix, output SSBtools::ModelMatrix z numerical vector length ncol(x). Corresponds table cell values primary Vector indicating primary suppressed cells. Can logical integer. integer vector, indicates columns x considered primary suppressed. suppressed Vector indicating suppressed cells. Can logical integer. integer vector, indicates columns x considered suppressed. minVal known minimum value table cells. Default NULL. Note 'minVal' interpreted limiting value suppressed cells. Specifying 'minVal=0' redundant, minimum value 0 anyway assumed inner cells (see details). lpPackage name package used solve linear programs. Currently, 'lpSolve' (default), 'Rsymphony',  'Rglpk' 'highs'  supported. gaussI Boolean vector. TRUE (default), GaussIndependent used reduce size linear program. allInt Integer variables TRUE. See .int parameter lpSolve types parameter Rsymphony Rglpk. sparseConstraints TRUE, sparse constraint matrix input solver. case lpSolve, sparse matrix represented triplet form dense matrix three columns, dense.const parameter utilized.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ComputeIntervals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for calculating intervals for suppressed tables. — ComputeIntervals","text":"function still experimental. Default bounds parameter Rsymphony_solve_LP Rglpk_solve_LP: default variable bound 0 Inf. Details lpSolve: Note every variable assumed >= 0!","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/ComputeIntervals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for calculating intervals for suppressed tables. — ComputeIntervals","text":"Øyvind Langsrud Daniel Lupp","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/FindDominantCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for finding dominant cells according to (possibly multiple) n,k dominance rules. — FindDominantCells","title":"Method for finding dominant cells according to (possibly multiple) n,k dominance rules. — FindDominantCells","text":"Supports functionality grouping contributions according holding variables, well calculating dominance surveys given sampling weight. Two methods implemented, depending whether sampling weights sum total population. parameter tauArgusDominance determines . FALSE, unweighted contributions compared weighted cell values. TRUE, method described  book \"Statistical Disclosure Control\" (Hundepool et al 2012, p. 151) used.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/FindDominantCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for finding dominant cells according to (possibly multiple) n,k dominance rules. — FindDominantCells","text":"","code":"FindDominantCells(   x,   inputnum,   num,   n,   k,   charVar_groups,   samplingWeight,   tauArgusDominance = FALSE,   returnContrib = FALSE,   maxContribution = NULL )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/FindDominantCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for finding dominant cells according to (possibly multiple) n,k dominance rules. — FindDominantCells","text":"x model matrix describing relationship input published cells inputnum vector numeric contributions input records num vector numeric values published cells n vector integers describing n parameters n,k rules. Must length k parameter. k vector numeric values describing k parameters n,k rules, percentages described numbers less 100. Must length n parameter. charVar_groups vector describing input records grouped samplingWeight vector sampling weights associated input records tauArgusDominance logical value, default FALSE. determines handle sampling weights dominance rule (see details). returnContrib logical value, default FALSE. TRUE return value percentage first n contributors maxContribution Possible precalculated output MaxContribution input. speed .","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/FindDominantCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for finding dominant cells according to (possibly multiple) n,k dominance rules. — FindDominantCells","text":"logical vector describing publish-cells need suppressed.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/FixRiskyIntervals.html","id":null,"dir":"Reference","previous_headings":"","what":"New primary cells to fix risky intervals — FixRiskyIntervals","title":"New primary cells to fix risky intervals — FixRiskyIntervals","text":"Indices new primary cells returned","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/FixRiskyIntervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New primary cells to fix risky intervals — FixRiskyIntervals","text":"","code":"FixRiskyIntervals(   x,   z,   primary,   suppressed,   candidates = NULL,   minVal = NULL,   lpPackage = \"lpSolve\",   gaussI = FALSE,   allInt = FALSE,   sparseConstraints = TRUE,   rangeLimits )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/FixRiskyIntervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New primary cells to fix risky intervals — FixRiskyIntervals","text":"x ModelMatrix, output SSBtools::ModelMatrix z numerical vector length ncol(x). Corresponds table cell values primary Vector indicating primary suppressed cells. Can logical integer. integer vector, indicates columns x considered primary suppressed. suppressed Vector indicating suppressed cells. Can logical integer. integer vector, indicates columns x considered suppressed. candidates candidates indices minVal known minimum value table cells. Default NULL. Note 'minVal' interpreted limiting value suppressed cells. Specifying 'minVal=0' redundant, minimum value 0 anyway assumed inner cells (see details). lpPackage name package used solve linear programs. Currently, 'lpSolve' (default), 'Rsymphony',  'Rglpk' 'highs'  supported. gaussI Boolean vector. TRUE (default), GaussIndependent used reduce size linear program. allInt Integer variables TRUE. See .int parameter lpSolve types parameter Rsymphony Rglpk. sparseConstraints TRUE, sparse constraint matrix input solver. case lpSolve, sparse matrix represented triplet form dense matrix three columns, dense.const parameter utilized. rangeLimits computed RangeLimitsDefault","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/FixRiskyIntervals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"New primary cells to fix risky intervals — FixRiskyIntervals","text":"Code function started copy ComputeIntervals","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressDec.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell suppression with synthetic decimal numbers — GaussSuppressDec","title":"Cell suppression with synthetic decimal numbers — GaussSuppressDec","text":"GaussSuppressionFromData, one wrappers, run decimal numbers added output executing  SuppressDec.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressDec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell suppression with synthetic decimal numbers — GaussSuppressDec","text":"","code":"GaussSuppressDec(   data,   ...,   fun = GaussSuppressionFromData,   output = NULL,   use_freqVar = NA,   digits = 9,   nRep = NULL,   rmse = pi/3,   sparseLimit = 500,   rndSeed = 123,   runIpf = FALSE,   eps = 0.01,   iter = 100,   mismatchWarning = TRUE,   whenDuplicatedInner = NULL,   whenMixedDuplicatedInner = warning )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressDec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell suppression with synthetic decimal numbers — GaussSuppressDec","text":"data Input daata data frame ... parameters GaussSuppressionFromData fun function: GaussSuppressionFromData one wrappers SuppressSmallCounts SuppressDominantCells. output NULL (default), \"publish\", \"inner\", \"publish_inner\", \"publish_inner_x\" (x also). use_freqVar Logical (TRUE/FALSE) default value NA. Determines whether variable freqVar used basis generating decimal numbers. NA, parameter set TRUE, except following cases, set FALSE: freqVar available. runIpf FALSE fun one functions SuppressFewContributors SuppressDominantCells. use_freqVar FALSE, zeros used instead. approach robust practice, decimal numbers can stored accurately. default value chosen ensure compatibility existing code allow use freqVar dealing frequency tables, may useful. digits Parameter RoundWhole. Values close whole numbers rounded. nRep NULL integer. >1, several decimal numbers generated. rmse Desired root mean square error decimal numbers. Variability around expected, according linear model, inner frequencies. expected frequencies calculated non-suppressed publishable frequencies. sparseLimit Limit number rows reduced x-matrix within algorithm. exceeded, new sparse algorithm used. rndSeed non-NULL, random generator seed used locally within function without affecting random value stream R. runIpf TRUE, additional frequencies generated iterative proportional fitting using Mipf. eps Parameter Mipf. iter Parameter Mipf. mismatchWarning Whether produce warning \"Mismatch whole numbers suppression\", relevant. nRep>1, replicates must satisfy whole number requirement non-suppressed cells. mismatchWarning integer (>0), used parameter digits RoundWhole mismatch checking (can quite low nRep>1). whenDuplicatedInner Function called default output cells marked inner correspond several input cells (aggregated) since correspond published cells. whenMixedDuplicatedInner Function called case inner cells correspond published cells (aggregated) (aggregated).","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressDec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell suppression with synthetic decimal numbers — GaussSuppressDec","text":"data frame inner cells cells published combined output according parameter output.","code":""},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressDec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cell suppression with synthetic decimal numbers — GaussSuppressDec","text":"Øyvind Langrsud","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressDec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell suppression with synthetic decimal numbers — GaussSuppressDec","text":"","code":"a <- GaussSuppressDec(data = SSBtoolsData(\"example1\"),                        fun = SuppressSmallCounts,                        dimVar = c(\"age\", \"geo\"),                       preAggregate = TRUE,                        freqVar = \"freq\", maxN = 3) #> [preAggregate 18*5->6*3] #> [extend0 6*3->6*3] #> GaussSuppression_anySum: .......... a                        #>      age      geo freq primary suppressed   freqDec isPublish isInner #> 1  Total    Total   59   FALSE      FALSE 59.000000      TRUE   FALSE #> 2  Total  Iceland   13   FALSE      FALSE 13.000000      TRUE   FALSE #> 3  Total Portugal   12   FALSE      FALSE 12.000000      TRUE   FALSE #> 4  Total    Spain   34   FALSE      FALSE 34.000000      TRUE   FALSE #> 5    old    Total   38   FALSE      FALSE 38.000000      TRUE   FALSE #> 6    old  Iceland   10   FALSE       TRUE 10.226401      TRUE    TRUE #> 7    old Portugal   11   FALSE       TRUE 10.773599      TRUE    TRUE #> 8    old    Spain   17   FALSE      FALSE 17.000000      TRUE    TRUE #> 9  young    Total   21   FALSE      FALSE 21.000000      TRUE   FALSE #> 10 young  Iceland    3    TRUE       TRUE  2.773599      TRUE    TRUE #> 11 young Portugal    1    TRUE       TRUE  1.226401      TRUE    TRUE #> 12 young    Spain   17   FALSE      FALSE 17.000000      TRUE    TRUE                    b <- GaussSuppressDec(data = SSBtoolsData(\"magnitude1\"),                        fun = SuppressDominantCells,                        numVar = \"value\",                        formula = ~sector2 * geo + sector4 * eu,                       contributorVar = \"company\", k = c(80, 99)) #> [preAggregate 20*6->20*7] #> [extraAggregate 20*7->10*7] Checking ..... #> GaussSuppression_numttHTT: .........::::: b   #>         geo       sector4 freq value primary suppressed    freqDec isPublish #> 1     Total         Total   20 462.3   FALSE      FALSE  0.0000000      TRUE #> 2     Total       private   16 429.5   FALSE      FALSE  0.0000000      TRUE #> 3     Total        public    4  32.8   FALSE      FALSE  0.0000000      TRUE #> 4   Iceland         Total    4  37.1   FALSE      FALSE  0.0000000      TRUE #> 5  Portugal         Total    8 162.5   FALSE      FALSE  0.0000000      TRUE #> 6     Spain         Total    8 262.7   FALSE      FALSE  0.0000000      TRUE #> 7     Total   Agriculture    4 240.2    TRUE       TRUE -0.2855034      TRUE #> 8     Total Entertainment    6 131.5   FALSE      FALSE  0.0000000      TRUE #> 9     Total  Governmental    4  32.8   FALSE      FALSE  0.0000000      TRUE #> 10    Total      Industry    6  57.8   FALSE       TRUE  0.2855034      TRUE #> 11       EU         Total   16 425.2   FALSE      FALSE  0.0000000      TRUE #> 12    nonEU         Total    4  37.1   FALSE      FALSE  0.0000000      TRUE #> 13  Iceland       private    4  37.1   FALSE      FALSE  0.0000000      TRUE #> 14 Portugal       private    6 138.9   FALSE       TRUE  1.0581688      TRUE #> 15    Spain       private    6 253.5   FALSE       TRUE -1.0581688      TRUE #> 16 Portugal        public    2  23.6    TRUE       TRUE -1.0581688      TRUE #> 17    Spain        public    2   9.2    TRUE       TRUE  1.0581688      TRUE #> 18       EU   Agriculture    4 240.2    TRUE       TRUE -0.2855034      TRUE #> 19       EU Entertainment    5 114.7   FALSE       TRUE  0.5859539      TRUE #> 20    nonEU Entertainment    1  16.8    TRUE       TRUE -0.5859539      TRUE #> 21       EU  Governmental    4  32.8   FALSE      FALSE  0.0000000      TRUE #> 22       EU      Industry    3  37.5   FALSE       TRUE -0.3004505      TRUE #> 23    nonEU      Industry    3  20.3   FALSE       TRUE  0.5859539      TRUE #> 24 Portugal   Agriculture    2 100.4      NA         NA -0.5054764     FALSE #> 25    Spain   Agriculture    2 139.8      NA         NA  0.2199730     FALSE #> 26 Portugal Entertainment    2   9.4      NA         NA  0.9375680     FALSE #> 27    Spain Entertainment    3 105.3      NA         NA -0.3516141     FALSE #> 28 Portugal  Governmental    2  23.6      NA         NA -1.0581688     FALSE #> 29    Spain  Governmental    2   9.2      NA         NA  1.0581688     FALSE #> 30 Portugal      Industry    2  29.1      NA         NA  0.6260773     FALSE #> 31    Spain      Industry    1   8.4      NA         NA -0.9265277     FALSE #> 32  Iceland Entertainment    1  16.8      NA         NA -0.5859539     FALSE #> 33  Iceland      Industry    3  20.3      NA         NA  0.5859539     FALSE #>    isInner sector2    eu nUnique company #> 1    FALSE    <NA>  <NA>      NA    <NA> #> 2    FALSE    <NA>  <NA>      NA    <NA> #> 3    FALSE    <NA>  <NA>      NA    <NA> #> 4    FALSE    <NA>  <NA>      NA    <NA> #> 5    FALSE    <NA>  <NA>      NA    <NA> #> 6    FALSE    <NA>  <NA>      NA    <NA> #> 7    FALSE    <NA>  <NA>      NA    <NA> #> 8    FALSE    <NA>  <NA>      NA    <NA> #> 9    FALSE    <NA>  <NA>      NA    <NA> #> 10   FALSE    <NA>  <NA>      NA    <NA> #> 11   FALSE    <NA>  <NA>      NA    <NA> #> 12   FALSE    <NA>  <NA>      NA    <NA> #> 13   FALSE    <NA>  <NA>      NA    <NA> #> 14   FALSE    <NA>  <NA>      NA    <NA> #> 15   FALSE    <NA>  <NA>      NA    <NA> #> 16   FALSE    <NA>  <NA>      NA    <NA> #> 17   FALSE    <NA>  <NA>      NA    <NA> #> 18   FALSE    <NA>  <NA>      NA    <NA> #> 19   FALSE    <NA>  <NA>      NA    <NA> #> 20   FALSE    <NA>  <NA>      NA    <NA> #> 21   FALSE    <NA>  <NA>      NA    <NA> #> 22   FALSE    <NA>  <NA>      NA    <NA> #> 23   FALSE    <NA>  <NA>      NA    <NA> #> 24    TRUE private    EU       2    <NA> #> 25    TRUE private    EU       2    <NA> #> 26    TRUE private    EU       2    <NA> #> 27    TRUE private    EU       3    <NA> #> 28    TRUE  public    EU       2    <NA> #> 29    TRUE  public    EU       2    <NA> #> 30    TRUE private    EU       2    <NA> #> 31    TRUE private    EU       1       C #> 32    TRUE private nonEU       1       B #> 33    TRUE private nonEU       3    <NA>   # FormulaSelection() works on this output as well  FormulaSelection(b, ~sector2 * geo)                        #>         geo sector4 freq value primary suppressed   freqDec isPublish isInner #> 1     Total   Total   20 462.3   FALSE      FALSE  0.000000      TRUE   FALSE #> 2     Total private   16 429.5   FALSE      FALSE  0.000000      TRUE   FALSE #> 3     Total  public    4  32.8   FALSE      FALSE  0.000000      TRUE   FALSE #> 4   Iceland   Total    4  37.1   FALSE      FALSE  0.000000      TRUE   FALSE #> 5  Portugal   Total    8 162.5   FALSE      FALSE  0.000000      TRUE   FALSE #> 6     Spain   Total    8 262.7   FALSE      FALSE  0.000000      TRUE   FALSE #> 13  Iceland private    4  37.1   FALSE      FALSE  0.000000      TRUE   FALSE #> 14 Portugal private    6 138.9   FALSE       TRUE  1.058169      TRUE   FALSE #> 15    Spain private    6 253.5   FALSE       TRUE -1.058169      TRUE   FALSE #> 16 Portugal  public    2  23.6    TRUE       TRUE -1.058169      TRUE   FALSE #> 17    Spain  public    2   9.2    TRUE       TRUE  1.058169      TRUE   FALSE #>    sector2   eu nUnique company #> 1     <NA> <NA>      NA    <NA> #> 2     <NA> <NA>      NA    <NA> #> 3     <NA> <NA>      NA    <NA> #> 4     <NA> <NA>      NA    <NA> #> 5     <NA> <NA>      NA    <NA> #> 6     <NA> <NA>      NA    <NA> #> 13    <NA> <NA>      NA    <NA> #> 14    <NA> <NA>      NA    <NA> #> 15    <NA> <NA>      NA    <NA> #> 16    <NA> <NA>      NA    <NA> #> 17    <NA> <NA>      NA    <NA>"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionFromData.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell suppression from input data containing inner cells — GaussSuppressionFromData","title":"Cell suppression from input data containing inner cells — GaussSuppressionFromData","text":"Aggregates generated followed primary suppression followed secondary suppression Gaussian elimination GaussSuppression","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionFromData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell suppression from input data containing inner cells — GaussSuppressionFromData","text":"","code":"GaussSuppressionFromData(   data,   dimVar = NULL,   freqVar = NULL,   ...,   numVar = NULL,   weightVar = NULL,   charVar = NULL,   hierarchies = NULL,   formula = NULL,   maxN = suppressWarnings(formals(c(primary)[[1]])$maxN),   protectZeros = suppressWarnings(formals(c(primary)[[1]])$protectZeros),   secondaryZeros = suppressWarnings(formals(candidates)$secondaryZeros),   candidates = CandidatesDefault,   primary = PrimaryDefault,   forced = NULL,   hidden = NULL,   singleton = SingletonDefault,   singletonMethod = ifelse(secondaryZeros, \"anySumNOTprimary\", \"anySum\"),   printInc = TRUE,   output = \"publish\",   x = NULL,   crossTable = NULL,   preAggregate = is.null(freqVar),   extraAggregate = preAggregate & !is.null(charVar),   structuralEmpty = FALSE,   extend0 = FALSE,   spec = NULL,   specLock = FALSE,   freqVarNew = rev(make.unique(c(names(data), \"freq\")))[1],   nUniqueVar = rev(make.unique(c(names(data), \"nUnique\")))[1],   forcedInOutput = \"ifNonNULL\",   unsafeInOutput = \"ifForcedInOutput\",   lpPackage = NULL,   aggregatePackage = \"base\",   aggregateNA = TRUE,   aggregateBaseOrder = FALSE,   rowGroupsPackage = aggregatePackage )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionFromData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell suppression from input data containing inner cells — GaussSuppressionFromData","text":"data Input data, typically data frame, tibble, data.table. data classic data frame, coerced one internally unless preAggregate TRUE aggregatePackage \"data.table\". dimVar main dimensional variables additional aggregating variables. parameter can  useful hierarchies formula unspecified. freqVar single variable holding counts (name number). ... arguments passed supplied functions ModelMatrix (inputInOutput removeEmpty). numVar numerical variables aggregated weightVar weightVar Weights (costs) used order candidates secondary suppression charVar variables possibly used within supplied functions hierarchies List hierarchies, can converted AutoHierarchies. Thus, variables can also coded \"rowFactor\" \"\", correspond using categories data. formula model formula maxN Suppression parameter. Cells frequency <= maxN set primary suppressed. Using default primary function, maxN default set 3. See details. protectZeros Suppression parameter. TRUE, cells zero frequency value set primary suppressed. Using default primary function, protectZeros default set TRUE. See details. secondaryZeros Suppression parameter. TRUE, cells zero frequency value prioritized published secondary suppressed. Using default candidates function, secondaryZeros default set FALSE. See details. candidates GaussSuppression input function generating (see details) Default: CandidatesDefault primary GaussSuppression input function generating (see details) Default: PrimaryDefault forced GaussSuppression input function generating (see details) hidden GaussSuppression input function generating (see details) singleton GaussSuppression input function generating (see details) Default: SingletonDefault singletonMethod GaussSuppression input. default value depends parameter secondaryZeros depends candidates (see details). printInc GaussSuppression input output One \"publish\" (default), \"inner\", \"publish_inner\", \"publish_inner_x\", \"publish_x\", \"inner_x\", \"input2functions\" (input supplied functions), \"inputGaussSuppression\", \"inputGaussSuppression_x\", \"outputGaussSuppression\"  \"outputGaussSuppression_x\", \"primary\",  \"secondary\" \"\". \"inner\" means input data (possibly pre-aggregated) \"x\" means dummy matrix (input parameter x). input output GaussSuppression, except ..., returned \"outputGaussSuppression_x\". Excluding x input also possible. code \"\" means relevant output calculations. Currently, means \"publish_inner_x\" extended matrices (NULL) xExtraPrimary  unsafe. former matrix usually made KDisclosurePrimary. latter matrix contains columns representing unsafe primary suppressions. addition x columns corresponding unsafe ordinary output (see parameter unsafeInOutput ), possible columns  xExtraPrimary may also included unsafe matrix (see details). x x (modelMatrix) crossTable can supplied input instead generating  ModelMatrix crossTable See . preAggregate TRUE, data aggregated within function appropriate level. defined dimensional variables according dimVar, hierarchies formula addition charVar. extraAggregate TRUE, data aggregated dimensional variables according dimVar, hierarchies formula. aggregated data corresponding x-matrix used input singleton function GaussSuppression. extra aggregation useful parameter charVar used. Supply \"publish_inner\", \"publish_inner_x\", \"publish_x\" \"inner_x\" output obtain extra aggregated results. Supply \"inner\" \"input2functions\" obtain results. structuralEmpty TRUE, output cells contributing inner cells (zeros column x) forced primary suppressed. Thus, cells considered structural zeros. structuralEmpty TRUE, following error message avoided: Suppressed cells empty input protected. Extend input data zeros?. removeEmpty TRUE (see \"...\" ), structuralEmpty superfluous extend0 Data automatically extended Extend0 TRUE. Can also set \"\" means input codes hierarchies considered addition data. Parameter extend0 can also specified list meaning parameter varGroups Extend0. spec NULL named list arguments act default values. specLock TRUE, arguments spec changed. freqVarNew Name new frequency variable generated input freqVar NULL preAggregate TRUE. Default \"freq\" provided found names(data). nUniqueVar Name variable holding number unique contributors. variable generated extraAggregate step. Default \"nUnique\" provided found names(data). existing variable passed input, variable apply preAggregate/extraAggregate done. forcedInOutput Whether include forced output column. One \"ifNonNULL\" (default), \"always\", \"ifany\" \"\". addition, TRUE FALSE allowed alternatives  \"always\" \"\". unsafeInOutput Whether include usafe output column. One \"ifForcedInOutput\" (default), \"always\", \"ifany\" \"\". addition, TRUE FALSE allowed alternatives  \"always\" \"\". see details. lpPackage lpPackage: non-NULL, intervals ComputeIntervals included output. See documentation valid parameter values 'lpPackage'. , additionally, least one two RangeLimitsDefault parameters specified, suppression performed satisfy interval width requirements. , values output variable suppressed_integer means: suppression (0), primary suppression (1), secondary suppression (2), additional suppression applied interval algorithm limited linearly independent cells (3), suppression according final gauss algorithm (4). Intervals, [lo_1, up_1], intervals calculated prior additional suppression. rangePercent: Required interval width expressed percentage rangeMin: Minimum required width interval   aggregatePackage Package used preAggregate/extraAggregate. Parameter pkg aggregate_by_pkg. aggregateNA Whether include NAs grouping variables preAggregate/extraAggregate. Parameter include_na aggregate_by_pkg. aggregateBaseOrder Parameter base_order aggregate_by_pkg, used preAggregate/extraAggregate. parameter affect ordering ordinary output. Therefore, default set FALSE avoid unnecessary sorting operations. parameter impact , e.g output = \"inner\". rowGroupsPackage Parameter pkg RowGroups. parameter input Formula2ModelMatrix via ModelMatrix.","code":"Please note that interval calculations may have a          different interface in future versions."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionFromData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell suppression from input data containing inner cells — GaussSuppressionFromData","text":"Aggregated data suppression information","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionFromData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cell suppression from input data containing inner cells — GaussSuppressionFromData","text":"supplied functions generating GaussSuppression input takes following arguments: crossTable,  x, freq, num, weight, maxN, protectZeros, secondaryZeros, data, freqVar, numVar, weightVar, charVar, dimVar aggregatePackage, aggregateNA, aggregateBaseOrder, rowGroupsPackage, structuralEmpty, .... two first  ModelMatrix outputs (modelMatrix renamed x). vector, freq, aggregated counts (t(x) %*% data[[freqVar]]). addition, supplied singleton function also takes nUniqueVar (output ) primary input. Similarly, num, data frame aggregated numerical variables. possible supply several primary functions joined c, e.g. (c(FunPrim1, FunPrim2)). NAs returned functions force corresponding cells primary suppressed. effect maxN , protectZeros secondaryZeros depends supplied functions parameters used. default values inherited default values first primary function (several possible) , case secondaryZeros, candidates function. defaults inherited, set NULL. practice function formals still used generate defaults primary /candidates functions. NULL correctly returned, suppressWarnings needed. Singleton handling can turned singleton = NULL singletonMethod = \"none\". choices identical sense singletonMethod set \"none\" whenever singleton NULL vice versa. Information uncertain primary suppressions due forced cells can found described parameters unsafeInOutput output  (= \"\"). forced cells affect singleton problems, implemented. information can seen warnings. can also seen choosing output = \"secondary\" together unsafeInOutput = \"ifany\" unsafeInOutput = \"always\". , negative indices GaussSuppression using unsafeAsNegative = TRUE included output. Singleton problems may, however, present even seen warning/output. cases, problems can detected GaussSuppressDec. cases, cells forced, hidden, primary suppressed can overlap. situations, forced precedence hidden primary. , cell forced hidden, treated forced cell thus published. Similarly, primary suppression forced cell ignored (see parameter whenPrimaryForced GaussSuppression). , however, meaningful combine primary hidden. cells protected also assigned NA value suppressed output variable.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionFromData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cell suppression from input data containing inner cells — GaussSuppressionFromData","text":"Øyvind Langsrud Daniel Lupp","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionFromData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell suppression from input data containing inner cells — GaussSuppressionFromData","text":"","code":"z1 <- SSBtoolsData(\"z1\") GaussSuppressionFromData(z1, 1:2, 3) #> GaussSuppression_anySum: .......................................... #>    region hovedint ant primary suppressed #> 1   Total    Total 596   FALSE      FALSE #> 2   Total    annet  72   FALSE      FALSE #> 3   Total   arbeid  52   FALSE      FALSE #> 4   Total soshjelp 283   FALSE      FALSE #> 5   Total    trygd 189   FALSE      FALSE #> 6       A    Total 113   FALSE      FALSE #> 7       A    annet  11   FALSE      FALSE #> 8       A   arbeid  11   FALSE      FALSE #> 9       A soshjelp  55   FALSE      FALSE #> 10      A    trygd  36   FALSE      FALSE #> 11      B    Total  55   FALSE      FALSE #> 12      B    annet   7   FALSE       TRUE #> 13      B   arbeid   1    TRUE       TRUE #> 14      B soshjelp  29   FALSE      FALSE #> 15      B    trygd  18   FALSE      FALSE #> 16      C    Total  73   FALSE      FALSE #> 17      C    annet   5   FALSE      FALSE #> 18      C   arbeid   8   FALSE      FALSE #> 19      C soshjelp  35   FALSE      FALSE #> 20      C    trygd  25   FALSE      FALSE #> 21      D    Total  45   FALSE      FALSE #> 22      D    annet  13   FALSE       TRUE #> 23      D   arbeid   2    TRUE       TRUE #> 24      D soshjelp  17   FALSE      FALSE #> 25      D    trygd  13   FALSE      FALSE #> 26      E    Total 138   FALSE      FALSE #> 27      E    annet   9   FALSE      FALSE #> 28      E   arbeid  14   FALSE      FALSE #> 29      E soshjelp  63   FALSE      FALSE #> 30      E    trygd  52   FALSE      FALSE #> 31      F    Total  67   FALSE      FALSE #> 32      F    annet  12   FALSE      FALSE #> 33      F   arbeid   9   FALSE      FALSE #> 34      F soshjelp  24   FALSE      FALSE #> 35      F    trygd  22   FALSE      FALSE #> 36      G    Total  40   FALSE      FALSE #> 37      G    annet   6   FALSE      FALSE #> 38      G   arbeid   4   FALSE      FALSE #> 39      G soshjelp  22   FALSE      FALSE #> 40      G    trygd   8   FALSE      FALSE #> 41      H    Total  65   FALSE      FALSE #> 42      H    annet   9   FALSE       TRUE #> 43      H   arbeid   3    TRUE       TRUE #> 44      H soshjelp  38   FALSE      FALSE #> 45      H    trygd  15   FALSE      FALSE  z2 <- SSBtoolsData(\"z2\") GaussSuppressionFromData(z2, 1:4, 5, protectZeros = FALSE) #> GaussSuppression_anySum: ............................. #>     region hovedint ant primary suppressed #> 1        1    Total 127   FALSE      FALSE #> 2        1    annet  14   FALSE      FALSE #> 3        1   arbeid  11   FALSE      FALSE #> 4        1 soshjelp  64   FALSE      FALSE #> 5        1    trygd  38   FALSE      FALSE #> 6       10    Total  96   FALSE      FALSE #> 7       10    annet  13   FALSE      FALSE #> 8       10   arbeid   2    TRUE       TRUE #> 9       10 soshjelp  50   FALSE      FALSE #> 10      10    trygd  31   FALSE       TRUE #> 11     300    Total 596   FALSE      FALSE #> 12     300    annet  72   FALSE       TRUE #> 13     300   arbeid  52   FALSE       TRUE #> 14     300 soshjelp 283   FALSE      FALSE #> 15     300    trygd 189   FALSE      FALSE #> 16       4    Total  55   FALSE      FALSE #> 17       4    annet   7   FALSE      FALSE #> 18       4   arbeid   1    TRUE       TRUE #> 19       4 soshjelp  29   FALSE      FALSE #> 20       4    trygd  18   FALSE       TRUE #> 21     400    Total 110   FALSE      FALSE #> 22     400    annet  16   FALSE       TRUE #> 23     400   arbeid   2    TRUE       TRUE #> 24     400 soshjelp  59   FALSE      FALSE #> 25     400    trygd  33   FALSE      FALSE #> 26       5    Total 118   FALSE      FALSE #> 27       5    annet  18   FALSE      FALSE #> 28       5   arbeid  10   FALSE      FALSE #> 29       5 soshjelp  52   FALSE      FALSE #> 30       5    trygd  38   FALSE      FALSE #> 31       6    Total 205   FALSE      FALSE #> 32       6    annet  21   FALSE      FALSE #> 33       6   arbeid  23   FALSE      FALSE #> 34       6 soshjelp  87   FALSE      FALSE #> 35       6    trygd  74   FALSE      FALSE #> 36       8    Total 105   FALSE      FALSE #> 37       8    annet  15   FALSE      FALSE #> 38       8   arbeid   7   FALSE      FALSE #> 39       8 soshjelp  60   FALSE      FALSE #> 40       8    trygd  23   FALSE      FALSE #> 41   Total    Total 706   FALSE      FALSE #> 42   Total    annet  88   FALSE      FALSE #> 43   Total   arbeid  54   FALSE      FALSE #> 44   Total soshjelp 342   FALSE      FALSE #> 45   Total    trygd 222   FALSE      FALSE #> 46       A    Total 113   FALSE      FALSE #> 47       A    annet  11   FALSE       TRUE #> 48       A   arbeid  11   FALSE      FALSE #> 49       A soshjelp  55   FALSE      FALSE #> 50       A    trygd  36   FALSE       TRUE #> 51       B    Total  55   FALSE      FALSE #> 52       B    annet   7   FALSE      FALSE #> 53       B   arbeid   1    TRUE       TRUE #> 54       B soshjelp  29   FALSE      FALSE #> 55       B    trygd  18   FALSE       TRUE #> 56       C    Total  73   FALSE      FALSE #> 57       C    annet   5   FALSE       TRUE #> 58       C   arbeid   8   FALSE       TRUE #> 59       C soshjelp  35   FALSE      FALSE #> 60       C    trygd  25   FALSE      FALSE #> 61       D    Total  45   FALSE      FALSE #> 62       D    annet  13   FALSE       TRUE #> 63       D   arbeid   2    TRUE       TRUE #> 64       D soshjelp  17   FALSE      FALSE #> 65       D    trygd  13   FALSE      FALSE #> 66       E    Total 138   FALSE      FALSE #> 67       E    annet   9   FALSE      FALSE #> 68       E   arbeid  14   FALSE      FALSE #> 69       E soshjelp  63   FALSE      FALSE #> 70       E    trygd  52   FALSE      FALSE #> 71       F    Total  67   FALSE      FALSE #> 72       F    annet  12   FALSE      FALSE #> 73       F   arbeid   9   FALSE      FALSE #> 74       F soshjelp  24   FALSE      FALSE #> 75       F    trygd  22   FALSE      FALSE #> 76       G    Total  40   FALSE      FALSE #> 77       G    annet   6   FALSE       TRUE #> 78       G   arbeid   4   FALSE       TRUE #> 79       G soshjelp  22   FALSE      FALSE #> 80       G    trygd   8   FALSE      FALSE #> 81       H    Total  65   FALSE      FALSE #> 82       H    annet   9   FALSE       TRUE #> 83       H   arbeid   3    TRUE       TRUE #> 84       H soshjelp  38   FALSE      FALSE #> 85       H    trygd  15   FALSE      FALSE #> 86       I    Total  14   FALSE      FALSE #> 87       I    annet   3    TRUE       TRUE #> 88       I   arbeid   0   FALSE      FALSE #> 89       I soshjelp   9   FALSE      FALSE #> 90       I    trygd   2    TRUE       TRUE #> 91       J    Total  61   FALSE      FALSE #> 92       J    annet   9   FALSE      FALSE #> 93       J   arbeid   0   FALSE      FALSE #> 94       J soshjelp  32   FALSE      FALSE #> 95       J    trygd  20   FALSE      FALSE #> 96       K    Total  35   FALSE      FALSE #> 97       K    annet   4   FALSE      FALSE #> 98       K   arbeid   2    TRUE       TRUE #> 99       K soshjelp  18   FALSE      FALSE #> 100      K    trygd  11   FALSE       TRUE   # Data as in GaussSuppression examples df <- data.frame(values = c(1, 1, 1, 5, 5, 9, 9, 9, 9, 9, 0, 0, 0, 7, 7),                   var1 = rep(1:3, each = 5), var2 = c(\"A\", \"B\", \"C\", \"D\", \"E\"))  GaussSuppressionFromData(df, c(\"var1\", \"var2\"), \"values\") #> GaussSuppression_anySum: .................. #>     var1  var2 values primary suppressed #> 1  Total Total     72   FALSE      FALSE #> 2  Total     A     10   FALSE      FALSE #> 3  Total     B     10   FALSE      FALSE #> 4  Total     C     10   FALSE      FALSE #> 5  Total     D     21   FALSE      FALSE #> 6  Total     E     21   FALSE      FALSE #> 7      1 Total     13   FALSE      FALSE #> 8      1     A      1    TRUE       TRUE #> 9      1     B      1    TRUE       TRUE #> 10     1     C      1    TRUE       TRUE #> 11     1     D      5   FALSE      FALSE #> 12     1     E      5   FALSE       TRUE #> 13     2 Total     45   FALSE      FALSE #> 14     2     A      9   FALSE      FALSE #> 15     2     B      9   FALSE      FALSE #> 16     2     C      9   FALSE      FALSE #> 17     2     D      9   FALSE      FALSE #> 18     2     E      9   FALSE      FALSE #> 19     3 Total     14   FALSE      FALSE #> 20     3     A      0    TRUE       TRUE #> 21     3     B      0    TRUE       TRUE #> 22     3     C      0    TRUE       TRUE #> 23     3     D      7   FALSE      FALSE #> 24     3     E      7   FALSE       TRUE GaussSuppressionFromData(df, c(\"var1\", \"var2\"), \"values\", formula = ~var1 + var2, maxN = 10) #> GaussSuppression_anySum: ...... #>    var1  var2 values primary suppressed #> 1 Total Total     72   FALSE      FALSE #> 2     1 Total     13   FALSE      FALSE #> 3     2 Total     45   FALSE      FALSE #> 4     3 Total     14   FALSE      FALSE #> 5 Total     A     10    TRUE       TRUE #> 6 Total     B     10    TRUE       TRUE #> 7 Total     C     10    TRUE       TRUE #> 8 Total     D     21   FALSE      FALSE #> 9 Total     E     21   FALSE      FALSE GaussSuppressionFromData(df, c(\"var1\", \"var2\"), \"values\", formula = ~var1 + var2, maxN = 10,       protectZeros = TRUE, # Parameter needed by SingletonDefault and default not in primary         primary = function(freq, crossTable, maxN, ...)                     which(freq <= maxN & crossTable[[2]] != \"A\" & crossTable[, 2] != \"C\")) #> GaussSuppression_anySum: ........ #>    var1  var2 values primary suppressed #> 1 Total Total     72   FALSE      FALSE #> 2     1 Total     13   FALSE      FALSE #> 3     2 Total     45   FALSE      FALSE #> 4     3 Total     14   FALSE      FALSE #> 5 Total     A     10   FALSE      FALSE #> 6 Total     B     10    TRUE       TRUE #> 7 Total     C     10   FALSE       TRUE #> 8 Total     D     21   FALSE      FALSE #> 9 Total     E     21   FALSE      FALSE                     # Combining several primary functions  # Note that NA & c(TRUE, FALSE) equals c(NA, FALSE)                       GaussSuppressionFromData(df, c(\"var1\", \"var2\"), \"values\", formula = ~var1 + var2, maxN = 10,         primary = c(function(freq, maxN, protectZeros = TRUE, ...) freq >= 45,                    function(freq, maxN, ...) freq <= maxN,                    function(crossTable, ...) NA & crossTable[[2]] == \"C\",                      function(crossTable, ...) NA & crossTable[[1]]== \"Total\"                                                  & crossTable[[2]]== \"Total\"))                     #> GaussSuppression_anySum: ...... #>    var1  var2 values primary suppressed #> 1 Total Total     72   FALSE      FALSE #> 2     1 Total     13   FALSE       TRUE #> 3     2 Total     45    TRUE       TRUE #> 4     3 Total     14   FALSE      FALSE #> 5 Total     A     10    TRUE       TRUE #> 6 Total     B     10    TRUE       TRUE #> 7 Total     C     10   FALSE      FALSE #> 8 Total     D     21   FALSE      FALSE #> 9 Total     E     21   FALSE      FALSE                     # Similar to GaussSuppression examples GaussSuppressionFromData(df, c(\"var1\", \"var2\"), \"values\", formula = ~var1 * var2,         candidates = NULL, singleton = NULL, protectZeros = FALSE, secondaryZeros = TRUE) #> GaussSuppression_none: ..................... #>     var1  var2 values primary suppressed #> 1  Total Total     72   FALSE      FALSE #> 2      1 Total     13   FALSE      FALSE #> 3      2 Total     45   FALSE      FALSE #> 4      3 Total     14   FALSE      FALSE #> 5  Total     A     10   FALSE      FALSE #> 6  Total     B     10   FALSE      FALSE #> 7  Total     C     10   FALSE      FALSE #> 8  Total     D     21   FALSE      FALSE #> 9  Total     E     21   FALSE      FALSE #> 10     1     A      1    TRUE       TRUE #> 11     1     B      1    TRUE       TRUE #> 12     1     C      1    TRUE       TRUE #> 13     1     D      5   FALSE      FALSE #> 14     1     E      5   FALSE      FALSE #> 15     2     A      9   FALSE      FALSE #> 16     2     B      9   FALSE      FALSE #> 17     2     C      9   FALSE      FALSE #> 18     2     D      9   FALSE      FALSE #> 19     2     E      9   FALSE      FALSE #> 20     3     A      0   FALSE       TRUE #> 21     3     B      0   FALSE       TRUE #> 22     3     C      0   FALSE       TRUE #> 23     3     D      7   FALSE      FALSE #> 24     3     E      7   FALSE      FALSE GaussSuppressionFromData(df, c(\"var1\", \"var2\"), \"values\", formula = ~var1 * var2,         singleton = NULL, protectZeros = FALSE, secondaryZeros = FALSE) #> GaussSuppression_none: ..................... #>     var1  var2 values primary suppressed #> 1  Total Total     72   FALSE      FALSE #> 2      1 Total     13   FALSE      FALSE #> 3      2 Total     45   FALSE      FALSE #> 4      3 Total     14   FALSE      FALSE #> 5  Total     A     10   FALSE      FALSE #> 6  Total     B     10   FALSE      FALSE #> 7  Total     C     10   FALSE      FALSE #> 8  Total     D     21   FALSE      FALSE #> 9  Total     E     21   FALSE      FALSE #> 10     1     A      1    TRUE       TRUE #> 11     1     B      1    TRUE       TRUE #> 12     1     C      1    TRUE       TRUE #> 13     1     D      5   FALSE      FALSE #> 14     1     E      5   FALSE      FALSE #> 15     2     A      9   FALSE       TRUE #> 16     2     B      9   FALSE       TRUE #> 17     2     C      9   FALSE       TRUE #> 18     2     D      9   FALSE      FALSE #> 19     2     E      9   FALSE      FALSE #> 20     3     A      0   FALSE      FALSE #> 21     3     B      0   FALSE      FALSE #> 22     3     C      0   FALSE      FALSE #> 23     3     D      7   FALSE      FALSE #> 24     3     E      7   FALSE      FALSE GaussSuppressionFromData(df, c(\"var1\", \"var2\"), \"values\", formula = ~var1 * var2,         protectZeros = FALSE, secondaryZeros = FALSE) #> GaussSuppression_anySum: ..................... #>     var1  var2 values primary suppressed #> 1  Total Total     72   FALSE      FALSE #> 2      1 Total     13   FALSE      FALSE #> 3      2 Total     45   FALSE      FALSE #> 4      3 Total     14   FALSE      FALSE #> 5  Total     A     10   FALSE      FALSE #> 6  Total     B     10   FALSE      FALSE #> 7  Total     C     10   FALSE      FALSE #> 8  Total     D     21   FALSE      FALSE #> 9  Total     E     21   FALSE      FALSE #> 10     1     A      1    TRUE       TRUE #> 11     1     B      1    TRUE       TRUE #> 12     1     C      1    TRUE       TRUE #> 13     1     D      5   FALSE      FALSE #> 14     1     E      5   FALSE       TRUE #> 15     2     A      9   FALSE       TRUE #> 16     2     B      9   FALSE       TRUE #> 17     2     C      9   FALSE       TRUE #> 18     2     D      9   FALSE      FALSE #> 19     2     E      9   FALSE       TRUE #> 20     3     A      0   FALSE      FALSE #> 21     3     B      0   FALSE      FALSE #> 22     3     C      0   FALSE      FALSE #> 23     3     D      7   FALSE      FALSE #> 24     3     E      7   FALSE      FALSE                 # Examples with zeros as singletons z <- data.frame(row = rep(1:3, each = 3), col = 1:3, freq = c(0, 2, 5, 0, 0, 6:9)) GaussSuppressionFromData(z, 1:2, 3, singleton = NULL)  #> GaussSuppression_none: ............ #>      row   col freq primary suppressed #> 1  Total Total   37   FALSE      FALSE #> 2  Total     1    7   FALSE      FALSE #> 3  Total     2   10   FALSE      FALSE #> 4  Total     3   20   FALSE      FALSE #> 5      1 Total    7   FALSE      FALSE #> 6      1     1    0    TRUE       TRUE #> 7      1     2    2    TRUE       TRUE #> 8      1     3    5   FALSE      FALSE #> 9      2 Total    6   FALSE      FALSE #> 10     2     1    0    TRUE       TRUE #> 11     2     2    0    TRUE       TRUE #> 12     2     3    6   FALSE      FALSE #> 13     3 Total   24   FALSE      FALSE #> 14     3     1    7   FALSE      FALSE #> 15     3     2    8   FALSE      FALSE #> 16     3     3    9   FALSE      FALSE GaussSuppressionFromData(z, 1:2, 3, singletonMethod = \"none\") # as above  #> GaussSuppression_none: ............ #>      row   col freq primary suppressed #> 1  Total Total   37   FALSE      FALSE #> 2  Total     1    7   FALSE      FALSE #> 3  Total     2   10   FALSE      FALSE #> 4  Total     3   20   FALSE      FALSE #> 5      1 Total    7   FALSE      FALSE #> 6      1     1    0    TRUE       TRUE #> 7      1     2    2    TRUE       TRUE #> 8      1     3    5   FALSE      FALSE #> 9      2 Total    6   FALSE      FALSE #> 10     2     1    0    TRUE       TRUE #> 11     2     2    0    TRUE       TRUE #> 12     2     3    6   FALSE      FALSE #> 13     3 Total   24   FALSE      FALSE #> 14     3     1    7   FALSE      FALSE #> 15     3     2    8   FALSE      FALSE #> 16     3     3    9   FALSE      FALSE GaussSuppressionFromData(z, 1:2, 3) #> GaussSuppression_anySum: ............ #>      row   col freq primary suppressed #> 1  Total Total   37   FALSE      FALSE #> 2  Total     1    7   FALSE      FALSE #> 3  Total     2   10   FALSE      FALSE #> 4  Total     3   20   FALSE      FALSE #> 5      1 Total    7   FALSE      FALSE #> 6      1     1    0    TRUE       TRUE #> 7      1     2    2    TRUE       TRUE #> 8      1     3    5   FALSE       TRUE #> 9      2 Total    6   FALSE      FALSE #> 10     2     1    0    TRUE       TRUE #> 11     2     2    0    TRUE       TRUE #> 12     2     3    6   FALSE       TRUE #> 13     3 Total   24   FALSE      FALSE #> 14     3     1    7   FALSE       TRUE #> 15     3     2    8   FALSE       TRUE #> 16     3     3    9   FALSE      FALSE GaussSuppressionFromData(z, 1:2, 3, protectZeros = FALSE, secondaryZeros = TRUE, singleton = NULL) #> GaussSuppression_none: ............... #>      row   col freq primary suppressed #> 1  Total Total   37   FALSE      FALSE #> 2  Total     1    7   FALSE      FALSE #> 3  Total     2   10   FALSE      FALSE #> 4  Total     3   20   FALSE      FALSE #> 5      1 Total    7   FALSE      FALSE #> 6      1     1    0   FALSE       TRUE #> 7      1     2    2    TRUE       TRUE #> 8      1     3    5   FALSE      FALSE #> 9      2 Total    6   FALSE      FALSE #> 10     2     1    0   FALSE       TRUE #> 11     2     2    0   FALSE       TRUE #> 12     2     3    6   FALSE      FALSE #> 13     3 Total   24   FALSE      FALSE #> 14     3     1    7   FALSE      FALSE #> 15     3     2    8   FALSE      FALSE #> 16     3     3    9   FALSE      FALSE GaussSuppressionFromData(z, 1:2, 3, protectZeros = FALSE, secondaryZeros = TRUE)       #> GaussSuppression_anySumNOTprimary: ............... #>      row   col freq primary suppressed #> 1  Total Total   37   FALSE      FALSE #> 2  Total     1    7   FALSE      FALSE #> 3  Total     2   10   FALSE      FALSE #> 4  Total     3   20   FALSE      FALSE #> 5      1 Total    7   FALSE      FALSE #> 6      1     1    0   FALSE      FALSE #> 7      1     2    2    TRUE       TRUE #> 8      1     3    5   FALSE       TRUE #> 9      2 Total    6   FALSE      FALSE #> 10     2     1    0   FALSE      FALSE #> 11     2     2    0   FALSE       TRUE #> 12     2     3    6   FALSE       TRUE #> 13     3 Total   24   FALSE      FALSE #> 14     3     1    7   FALSE      FALSE #> 15     3     2    8   FALSE      FALSE #> 16     3     3    9   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionTwoWay.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-way iteration variant of GaussSuppressionFromData — GaussSuppressionTwoWay","title":"Two-way iteration variant of GaussSuppressionFromData — GaussSuppressionTwoWay","text":"Internally, data organized two-way table. Use parameter colVar choose hierarchies columns (others rows). Iterations start column column suppression. algorithm utilizes HierarchyCompute2. two-way iterations, larger data can handled, residual risk. method special form linked-table iteration. Separately, rows columns protected GaussSuppression common suppressed cells.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionTwoWay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-way iteration variant of GaussSuppressionFromData — GaussSuppressionTwoWay","text":"","code":"GaussSuppressionTwoWay(   data,   dimVar = NULL,   freqVar = NULL,   numVar = NULL,   weightVar = NULL,   charVar = NULL,   hierarchies,   formula = NULL,   maxN = suppressWarnings(formals(c(primary)[[1]])$maxN),   protectZeros = suppressWarnings(formals(c(primary)[[1]])$protectZeros),   secondaryZeros = suppressWarnings(formals(candidates)$secondaryZeros),   candidates = CandidatesDefault,   primary = PrimaryDefault,   forced = NULL,   hidden = NULL,   singleton = SingletonDefault,   singletonMethod = ifelse(secondaryZeros, \"anySumNOTprimary\", \"anySum\"),   printInc = TRUE,   output = \"publish\",   preAggregate = is.null(freqVar),   colVar = names(hierarchies)[1],   removeEmpty = TRUE,   inputInOutput = TRUE,   candidatesFromTotal = TRUE,   structuralEmpty = FALSE,   freqVarNew = rev(make.unique(c(names(data), \"freq\")))[1],   ... )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionTwoWay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-way iteration variant of GaussSuppressionFromData — GaussSuppressionTwoWay","text":"data Input data data frame dimVar main dimensional variables additional aggregating variables. parameter can  useful hierarchies formula unspecified. freqVar single variable holding counts (name number). numVar numerical variables aggregated weightVar weightVar Weights (costs) used order candidates secondary suppression charVar variables possibly used within supplied functions hierarchies List hierarchies, can converted AutoHierarchies. Thus, variables can also coded \"rowFactor\" \"\", correspond using categories data. formula model formula maxN Suppression parameter. See GaussSuppressionFromData. protectZeros Suppression parameter. See GaussSuppressionFromData. secondaryZeros Suppression parameter. See GaussSuppressionFromData. candidates GaussSuppression input function generating (see details) Default: CandidatesDefault primary GaussSuppression input function generating (see details) Default: PrimaryDefault forced GaussSuppression input function generating (see details) hidden GaussSuppression input function generating (see details) singleton NULL function generating GaussSuppression input (logical vector possible) Default: SingletonDefault singletonMethod GaussSuppression input printInc GaussSuppression input output One \"publish\" (default), \"inner\". \"inner\" means input data (possibly pre-aggregated). preAggregate TRUE, data aggregated within function appropriate level. defined dimensional variables according dimVar, hierarchies formula addition charVar. colVar Hierarchy variables column groups (others row group). removeEmpty TRUE (default) empty output corresponding empty input removed. NULL, removal within algorithm (x  matrices) empty outputs never secondary suppressed. inputInOutput Logical vector (possibly recycled) element hierarchies. TRUE means codes input included output. Values corresponding \"rowFactor\" \"\" ignored. candidatesFromTotal TRUE (default), candidates rows columns, computed row/column totals. structuralEmpty See GaussSuppressionFromData. freqVarNew Name new frequency variable generated input freqVar NULL preAggregate TRUE. Default \"freq\" provided found names(data). ... arguments passed supplied functions.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionTwoWay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-way iteration variant of GaussSuppressionFromData — GaussSuppressionTwoWay","text":"Aggregated data suppression information","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionTwoWay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-way iteration variant of GaussSuppressionFromData — GaussSuppressionTwoWay","text":"supplied functions generating GaussSuppression input behave GaussSuppressionFromData exceptions. candidatesFromTotal TRUE (default) candidate function run locally rows columns. time based column row totals. global x-matrix generated one functions supplied needs . Non-NULL singleton can supplied function. function run locally within algorithm call GaussSuppression. Note difference GaussSuppressionFromData parameter removeEmpty set TRUE default. Another difference duplicated combinations allowed. Normally duplicates avoided setting preAggregate TRUE. charVar parameter used, can still problem. See examples possible workaround.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GaussSuppressionTwoWay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-way iteration variant of GaussSuppressionFromData — GaussSuppressionTwoWay","text":"","code":"z3 <- SSBtoolsData(\"z3\")  dimListsA <- SSBtools::FindDimLists(z3[, 1:6]) dimListsB <- SSBtools::FindDimLists(z3[, c(1, 4, 5)])  set.seed(123) z <- z3[sample(nrow(z3),250),]  if (FALSE) { # \\dontrun{ out1 <- GaussSuppressionTwoWay(z, freqVar = \"ant\", hierarchies = dimListsA,                                 colVar = c(\"hovedint\")) } # }                                 out2 <- GaussSuppressionTwoWay(z, freqVar = \"ant\", hierarchies = dimListsA,                                 colVar = c(\"hovedint\", \"mnd\")) #> 447-primary-suppressed #>   #> col 1 , 10 extra : GaussSuppression_anySum: .................. #> col 2 , 11 extra : GaussSuppression_anySum: ................... #> col 4 , 4 extra : GaussSuppression_anySum: ......................... #> col 5 , 7 extra : GaussSuppression_anySum: ...................................... #> col 6 , 20 extra : GaussSuppression_anySum: ........... #> col 7 , 24 extra : GaussSuppression_anySum: ......... #> col 8 , 16 extra : GaussSuppression_anySum: ................ #> col 9 , 17 extra : GaussSuppression_anySum: .............. #> col 10 , 16 extra : GaussSuppression_anySum: ............................ #> col 11 , 28 extra : GaussSuppression_anySum: ........ #> col 12 , 23 extra : GaussSuppression_anySum: .......... #> col 13 , 15 extra : GaussSuppression_anySum: ................ #> col 14 , 20 extra : GaussSuppression_anySum: .............. #> col 15 , 21 extra : GaussSuppression_anySum: ........................ #> col 16 , 10 extra : GaussSuppression_anySum: .................. #> col 17 , 11 extra : GaussSuppression_anySum: ................... #> col 19 , 4 extra : GaussSuppression_anySum: ......................... #> col 20 , 7 extra : GaussSuppression_anySum: ...................................... #> col 21 , 28 extra : GaussSuppression_anySum: .............. #> col 22 , 29 extra : GaussSuppression_anySum: ............. #> col 23 , 18 extra : GaussSuppression_anySum: ....................... #> col 24 , 20 extra : GaussSuppression_anySum: ....................... #> col 25 , 10 extra : GaussSuppression_anySum: ................................... #> col 26 , 24 extra : GaussSuppression_anySum: ..................... #> col 27 , 22 extra : GaussSuppression_anySum: ....................... #> col 28 , 12 extra : GaussSuppression_anySum: ................................. #> col 29 , 15 extra : GaussSuppression_anySum: .............................. #> col 30 , 5 extra : GaussSuppression_anySum: ........................................ #> 447-primary-suppressed #> iter-1-col-468-suppressed #>   #> row 1 , 14 extra : GaussSuppression_anySum: ..... #> row 2 , 1 extra : GaussSuppression_anySum: ................. #> row 3 , 12 extra : GaussSuppression_anySum: ....... #> row 4 , 14 extra : GaussSuppression_anySum: ........ #> row 5 , 3 extra : GaussSuppression_anySum: .............. #> row 6 , 13 extra : GaussSuppression_anySum: .......... #> row 7 , 2 extra : GaussSuppression_anySum: ............ #> row 8 , 23 extra : GaussSuppression_anySum: .. #> row 9 , 11 extra : GaussSuppression_anySum: ..... #> row 10 , 24 extra : GaussSuppression_anySum: .. #> row 11 , 9 extra : GaussSuppression_anySum: ......... #> row 12 , 4 extra : GaussSuppression_anySum: ................ #> row 13 , 5 extra : GaussSuppression_anySum: ................. #> row 14 , 11 extra : GaussSuppression_anySum: ............ #> row 15 , 15 extra : GaussSuppression_anySum: ....... #> row 16 , 16 extra : GaussSuppression_anySum: ....... #> row 17 , 15 extra : GaussSuppression_anySum: .......... #> row 18 , 13 extra : GaussSuppression_anySum: ........ #> row 19 , 7 extra : GaussSuppression_anySum: ................ #> row 20 , 3 extra : GaussSuppression_anySum: ............. #> row 21 , 8 extra : GaussSuppression_anySum: .............. #> row 22 , 17 extra : GaussSuppression_anySum: ...... #> row 23 , 14 extra : GaussSuppression_anySum: .. #> row 24 , 16 extra : GaussSuppression_anySum: .. #> row 25 , 24 extra : GaussSuppression_anySum: ... #> row 26 , 7 extra : GaussSuppression_anySum: ............... #> row 27 , 13 extra : GaussSuppression_anySum: ...... #> row 28 , 17 extra : GaussSuppression_anySum: ...... #> row 29 , 12 extra : GaussSuppression_anySum: ............ #> row 30 , 7 extra : GaussSuppression_anySum: ........... #> row 31 , 14 extra : GaussSuppression_anySum: ...... #> row 32 , 16 extra : GaussSuppression_anySum: .... #> row 33 , 8 extra : GaussSuppression_anySum: ................. #> row 34 , 9 extra : GaussSuppression_anySum: .............. #> row 35 , 13 extra : GaussSuppression_anySum: ....... #> row 36 , 17 extra : GaussSuppression_anySum: .. #> row 37 , 5 extra : GaussSuppression_anySum: .................... #> row 43 , 18 extra : GaussSuppression_anySum: ......... #> row 44 , 18 extra : GaussSuppression_anySum: ......... #> 447-primary-suppressed #> iter-1-col-468-suppressed #> iter-1-row-573-suppressed #>   #> col 1 , 2 extra : GaussSuppression_anySum: ............... #> col 2 , 3 extra : GaussSuppression_anySum: ............... #> col 3 , 5 extra : GaussSuppression_anySum: ......................... #> col 4 , 9 extra : GaussSuppression_anySum: ............... #> col 5 , 7 extra : GaussSuppression_anySum: .............................. #> col 6 , 2 extra : GaussSuppression_anySum: ......... #> col 8 , 6 extra : GaussSuppression_anySum: ......... #> col 9 , 2 extra : GaussSuppression_anySum: ............ #> col 10 , 6 extra : GaussSuppression_anySum: ...................... #> col 12 , 1 extra : GaussSuppression_anySum: ......... #> col 13 , 4 extra : GaussSuppression_anySum: ............ #> col 14 , 1 extra : GaussSuppression_anySum: ............ #> col 15 , 5 extra : GaussSuppression_anySum: .................. #> col 16 , 2 extra : GaussSuppression_anySum: ............... #> col 17 , 3 extra : GaussSuppression_anySum: ............... #> col 18 , 5 extra : GaussSuppression_anySum: ......................... #> col 19 , 9 extra : GaussSuppression_anySum: ............... #> col 20 , 7 extra : GaussSuppression_anySum: .............................. #> col 21 , 1 extra : GaussSuppression_anySum: ............ #> col 22 , 3 extra : GaussSuppression_anySum: .......... #> col 23 , 1 extra : GaussSuppression_anySum: ...................... #> col 24 , 3 extra : GaussSuppression_anySum: ................... #> col 25 , 3 extra : GaussSuppression_anySum: .............................. #> col 26 , 5 extra : GaussSuppression_anySum: ............... #> col 27 , 8 extra : GaussSuppression_anySum: .............. #> col 29 , 2 extra : GaussSuppression_anySum: ............................ #> 447-primary-suppressed #> iter-1-col-468-suppressed #> iter-1-row-573-suppressed #> iter-2-col-581-suppressed #>   #> row 9 , 2 extra : GaussSuppression_anySum: ... #> row 13 , 2 extra : GaussSuppression_anySum: ............. #> row 18 , 2 extra : GaussSuppression_anySum: .... #> row 34 , 2 extra : GaussSuppression_anySum: .......... #> 447-primary-suppressed #> iter-1-col-468-suppressed #> iter-1-row-573-suppressed #> iter-2-col-581-suppressed #> iter-2-row-589-suppressed #>   #> col 1 , 2 extra : GaussSuppression_anySum: ............. #> col 9 , 1 extra : GaussSuppression_anySum: ........... #> col 16 , 2 extra : GaussSuppression_anySum: ............. #> col 23 , 1 extra : GaussSuppression_anySum: ..................... #> col 24 , 1 extra : GaussSuppression_anySum: .................. #> col 28 , 1 extra : GaussSuppression_anySum: .............................. #> 447-primary-suppressed #> iter-1-col-468-suppressed #> iter-1-row-573-suppressed #> iter-2-col-581-suppressed #> iter-2-row-589-suppressed #> iter-3-col-589-suppressed #>   #> 447-primary-suppressed #> iter-1-col-468-suppressed #> iter-1-row-573-suppressed #> iter-2-col-581-suppressed #> iter-2-row-589-suppressed #> iter-3-col-589-suppressed #> iter-3-row-589-suppressed #>   out3 <- GaussSuppressionTwoWay(z, freqVar = \"ant\", hierarchies = dimListsB,                                 colVar = c(\"region\")) #> 284-primary-suppressed #>   #> col 1 , 9 extra : GaussSuppression_anySum: ..... #> col 2 , 1 extra : GaussSuppression_anySum: ............... #> col 3 , 8 extra : GaussSuppression_anySum: ...... #> col 4 , 10 extra : GaussSuppression_anySum: ....... #> col 5 , 2 extra : GaussSuppression_anySum: ............ #> col 6 , 9 extra : GaussSuppression_anySum: ......... #> col 7 , 1 extra : GaussSuppression_anySum: ............ #> col 8 , 16 extra : GaussSuppression_anySum: .. #> col 9 , 7 extra : GaussSuppression_anySum: ..... #> col 10 , 16 extra : GaussSuppression_anySum: .. #> col 11 , 5 extra : GaussSuppression_anySum: ......... #> col 12 , 3 extra : GaussSuppression_anySum: .............. #> col 13 , 3 extra : GaussSuppression_anySum: ............... #> col 14 , 8 extra : GaussSuppression_anySum: .......... #> col 15 , 10 extra : GaussSuppression_anySum: ...... #> col 16 , 11 extra : GaussSuppression_anySum: ...... #> col 17 , 10 extra : GaussSuppression_anySum: ......... #> col 18 , 7 extra : GaussSuppression_anySum: .......... #> col 19 , 5 extra : GaussSuppression_anySum: .............. #> col 20 , 2 extra : GaussSuppression_anySum: ............ #> col 21 , 6 extra : GaussSuppression_anySum: ............. #> col 22 , 11 extra : GaussSuppression_anySum: ...... #> col 23 , 9 extra : GaussSuppression_anySum: .. #> col 24 , 11 extra : GaussSuppression_anySum: .. #> col 25 , 14 extra : GaussSuppression_anySum: .... #> col 26 , 5 extra : GaussSuppression_anySum: ............. #> col 27 , 8 extra : GaussSuppression_anySum: ...... #> col 28 , 9 extra : GaussSuppression_anySum: ....... #> col 29 , 9 extra : GaussSuppression_anySum: .......... #> col 30 , 6 extra : GaussSuppression_anySum: ......... #> col 31 , 10 extra : GaussSuppression_anySum: ..... #> col 32 , 11 extra : GaussSuppression_anySum: ... #> col 33 , 6 extra : GaussSuppression_anySum: .............. #> col 34 , 6 extra : GaussSuppression_anySum: ............ #> col 35 , 8 extra : GaussSuppression_anySum: ........ #> col 36 , 12 extra : GaussSuppression_anySum: .. #> 284-primary-suppressed #> iter-1-col-341-suppressed #>   #> row 1 , 12 extra : GaussSuppression_anySum: ......... #> row 2 , 12 extra : GaussSuppression_anySum: ........... #> row 3 , 4 extra : GaussSuppression_anySum: ................... #> row 4 , 11 extra : GaussSuppression_anySum: .......... #> row 5 , 10 extra : GaussSuppression_anySum: ........................... #> row 6 , 19 extra : GaussSuppression_anySum: .... #> row 7 , 22 extra : GaussSuppression_anySum: ... #> row 8 , 19 extra : GaussSuppression_anySum: ..... #> row 9 , 17 extra : GaussSuppression_anySum: ....... #> row 10 , 22 extra : GaussSuppression_anySum: .............. #> row 11 , 25 extra : GaussSuppression_anySum: ... #> row 12 , 20 extra : GaussSuppression_anySum: ..... #> row 13 , 16 extra : GaussSuppression_anySum: ....... #> row 14 , 19 extra : GaussSuppression_anySum: ....... #> row 15 , 25 extra : GaussSuppression_anySum: ............ #> row 16 , 27 extra : GaussSuppression_anySum: .......... #> row 17 , 27 extra : GaussSuppression_anySum: .......... #> row 18 , 12 extra : GaussSuppression_anySum: ......................... #> row 19 , 17 extra : GaussSuppression_anySum: .................... #> row 20 , 5 extra : GaussSuppression_anySum: ................................ #> 284-primary-suppressed #> iter-1-col-341-suppressed #> iter-1-row-341-suppressed #>   out4 <- GaussSuppressionTwoWay(z, freqVar = \"ant\", hierarchies = dimListsB,                                 colVar = c(\"hovedint\", \"region\")) #> 284-primary-suppressed #>   #> col 1 , 2 extra : GaussSuppression_anySum: .. #> col 2 , 1 extra : GaussSuppression_anySum: ... #> col 3 , 2 extra : GaussSuppression_anySum: .. #> col 4 , 4 extra : GaussSuppression_anySum:  #> col 6 , 2 extra : GaussSuppression_anySum: .. #> col 7 , 1 extra : GaussSuppression_anySum: ... #> col 8 , 2 extra : GaussSuppression_anySum: .. #> col 9 , 2 extra : GaussSuppression_anySum: .. #> col 10 , 3 extra : GaussSuppression_anySum: . #> col 11 , 2 extra : GaussSuppression_anySum: .. #> col 12 , 1 extra : GaussSuppression_anySum: ... #> col 13 , 1 extra : GaussSuppression_anySum: ... #> col 14 , 2 extra : GaussSuppression_anySum: .. #> col 15 , 4 extra : GaussSuppression_anySum:  #> col 16 , 2 extra : GaussSuppression_anySum: .. #> col 17 , 2 extra : GaussSuppression_anySum: .. #> col 18 , 3 extra : GaussSuppression_anySum: . #> col 19 , 2 extra : GaussSuppression_anySum: .. #> col 20 , 3 extra : GaussSuppression_anySum: . #> col 21 , 4 extra : GaussSuppression_anySum:  #> col 22 , 2 extra : GaussSuppression_anySum: .. #> col 23 , 2 extra : GaussSuppression_anySum: .. #> col 24 , 3 extra : GaussSuppression_anySum: . #> col 25 , 1 extra : GaussSuppression_anySum: ... #> col 26 , 2 extra : GaussSuppression_anySum: .. #> col 27 , 2 extra : GaussSuppression_anySum: .. #> col 28 , 3 extra : GaussSuppression_anySum: . #> col 29 , 3 extra : GaussSuppression_anySum: . #> col 30 , 2 extra : GaussSuppression_anySum: .. #> col 31 , 4 extra : GaussSuppression_anySum:  #> col 32 , 2 extra : GaussSuppression_anySum: .. #> col 33 , 1 extra : GaussSuppression_anySum: ... #> col 34 , 3 extra : GaussSuppression_anySum: . #> col 36 , 2 extra : GaussSuppression_anySum: .. #> col 37 , 1 extra : GaussSuppression_anySum: ... #> col 38 , 2 extra : GaussSuppression_anySum: .. #> col 39 , 1 extra : GaussSuppression_anySum: ... #> col 40 , 3 extra : GaussSuppression_anySum: . #> col 42 , 3 extra : GaussSuppression_anySum: . #> col 43 , 2 extra : GaussSuppression_anySum: .. #> col 44 , 2 extra : GaussSuppression_anySum: .. #> col 45 , 2 extra : GaussSuppression_anySum: .. #> col 46 , 1 extra : GaussSuppression_anySum: ... #> col 47 , 2 extra : GaussSuppression_anySum: .. #> col 48 , 3 extra : GaussSuppression_anySum: . #> col 49 , 3 extra : GaussSuppression_anySum: . #> col 50 , 4 extra : GaussSuppression_anySum:  #> col 51 , 3 extra : GaussSuppression_anySum: . #> col 52 , 2 extra : GaussSuppression_anySum: .. #> col 53 , 1 extra : GaussSuppression_anySum: ... #> col 55 , 2 extra : GaussSuppression_anySum: .. #> col 56 , 2 extra : GaussSuppression_anySum: .. #> col 57 , 2 extra : GaussSuppression_anySum: .. #> col 58 , 2 extra : GaussSuppression_anySum: .. #> col 59 , 3 extra : GaussSuppression_anySum: . #> col 60 , 2 extra : GaussSuppression_anySum: .. #> col 61 , 2 extra : GaussSuppression_anySum: .. #> col 62 , 2 extra : GaussSuppression_anySum: .. #> col 63 , 3 extra : GaussSuppression_anySum: . #> col 64 , 2 extra : GaussSuppression_anySum: .. #> col 65 , 2 extra : GaussSuppression_anySum: .. #> col 66 , 2 extra : GaussSuppression_anySum: .. #> col 67 , 2 extra : GaussSuppression_anySum: .. #> col 68 , 2 extra : GaussSuppression_anySum: .. #> col 69 , 3 extra : GaussSuppression_anySum: . #> col 70 , 2 extra : GaussSuppression_anySum: .. #> col 72 , 2 extra : GaussSuppression_anySum: .. #> col 74 , 2 extra : GaussSuppression_anySum: .. #> col 77 , 1 extra : GaussSuppression_anySum: ... #> col 79 , 3 extra : GaussSuppression_anySum: . #> col 81 , 3 extra : GaussSuppression_anySum: . #> col 83 , 1 extra : GaussSuppression_anySum: ... #> col 85 , 1 extra : GaussSuppression_anySum: ... #> col 86 , 2 extra : GaussSuppression_anySum: .. #> col 87 , 1 extra : GaussSuppression_anySum: ... #> col 88 , 2 extra : GaussSuppression_anySum: .. #> col 93 , 1 extra : GaussSuppression_anySum: ... #> col 94 , 2 extra : GaussSuppression_anySum: .. #> col 95 , 2 extra : GaussSuppression_anySum: .. #> col 97 , 2 extra : GaussSuppression_anySum: .. #> col 98 , 2 extra : GaussSuppression_anySum: .. #> col 101 , 2 extra : GaussSuppression_anySum: .. #> col 102 , 2 extra : GaussSuppression_anySum: .. #> col 103 , 2 extra : GaussSuppression_anySum: .. #> col 105 , 1 extra : GaussSuppression_anySum: ... #> col 106 , 3 extra : GaussSuppression_anySum: . #> col 108 , 1 extra : GaussSuppression_anySum: ... #> col 110 , 2 extra : GaussSuppression_anySum: .. #> col 111 , 2 extra : GaussSuppression_anySum: .. #> col 112 , 1 extra : GaussSuppression_anySum: ... #> col 113 , 2 extra : GaussSuppression_anySum: .. #> col 115 , 4 extra : GaussSuppression_anySum:  #> col 116 , 2 extra : GaussSuppression_anySum: .. #> col 117 , 4 extra : GaussSuppression_anySum:  #> col 119 , 1 extra : GaussSuppression_anySum: ... #> col 121 , 2 extra : GaussSuppression_anySum: .. #> col 122 , 2 extra : GaussSuppression_anySum: .. #> col 123 , 2 extra : GaussSuppression_anySum: .. #> col 124 , 2 extra : GaussSuppression_anySum: .. #> col 125 , 1 extra : GaussSuppression_anySum: ... #> col 128 , 2 extra : GaussSuppression_anySum: .. #> col 129 , 2 extra : GaussSuppression_anySum: .. #> col 130 , 2 extra : GaussSuppression_anySum: .. #> col 131 , 4 extra : GaussSuppression_anySum:  #> col 132 , 2 extra : GaussSuppression_anySum: .. #> col 133 , 1 extra : GaussSuppression_anySum: ... #> col 134 , 1 extra : GaussSuppression_anySum: ... #> col 135 , 2 extra : GaussSuppression_anySum: .. #> col 137 , 2 extra : GaussSuppression_anySum: .. #> col 139 , 3 extra : GaussSuppression_anySum: . #> col 141 , 3 extra : GaussSuppression_anySum: . #> col 143 , 2 extra : GaussSuppression_anySum: .. #> col 145 , 1 extra : GaussSuppression_anySum: ... #> col 146 , 2 extra : GaussSuppression_anySum: .. #> col 148 , 1 extra : GaussSuppression_anySum: ... #> col 150 , 4 extra : GaussSuppression_anySum:  #> col 151 , 1 extra : GaussSuppression_anySum: ... #> col 152 , 4 extra : GaussSuppression_anySum:  #> col 153 , 1 extra : GaussSuppression_anySum: ... #> col 156 , 1 extra : GaussSuppression_anySum: ... #> col 157 , 1 extra : GaussSuppression_anySum: ... #> col 158 , 2 extra : GaussSuppression_anySum: .. #> col 159 , 1 extra : GaussSuppression_anySum: ... #> col 160 , 1 extra : GaussSuppression_anySum: ... #> col 163 , 1 extra : GaussSuppression_anySum: ... #> col 164 , 2 extra : GaussSuppression_anySum: .. #> col 165 , 3 extra : GaussSuppression_anySum: . #> col 166 , 3 extra : GaussSuppression_anySum: . #> col 167 , 2 extra : GaussSuppression_anySum: .. #> col 169 , 1 extra : GaussSuppression_anySum: ... #> col 170 , 2 extra : GaussSuppression_anySum: .. #> col 171 , 1 extra : GaussSuppression_anySum: ... #> col 172 , 1 extra : GaussSuppression_anySum: ... #> col 173 , 2 extra : GaussSuppression_anySum: .. #> col 174 , 3 extra : GaussSuppression_anySum: . #> col 177 , 1 extra : GaussSuppression_anySum: ... #> col 178 , 4 extra : GaussSuppression_anySum:  #> 284-primary-suppressed #> iter-1-col-321-suppressed #>   #> row 1 , 48 extra : GaussSuppression_anySum: ................................. #> row 2 , 97 extra : GaussSuppression_anySum: .......................... #> row 3 , 100 extra : GaussSuppression_anySum: ................................ #> row 4 , 76 extra : GaussSuppression_anySum: ......................... #> 284-primary-suppressed #> iter-1-col-321-suppressed #> iter-1-row-352-suppressed #>   #> col 5 , 1 extra : GaussSuppression_anySum: .. #> col 12 , 1 extra : GaussSuppression_anySum: . #> col 13 , 1 extra : GaussSuppression_anySum: . #> col 25 , 1 extra : GaussSuppression_anySum: . #> col 32 , 1 extra : GaussSuppression_anySum: . #> col 38 , 1 extra : GaussSuppression_anySum: . #> col 40 , 1 extra : GaussSuppression_anySum:  #> col 41 , 1 extra : GaussSuppression_anySum: .. #> col 53 , 1 extra : GaussSuppression_anySum: . #> col 54 , 1 extra : GaussSuppression_anySum: .. #> col 55 , 1 extra : GaussSuppression_anySum: . #> col 73 , 1 extra : GaussSuppression_anySum: ... #> col 78 , 1 extra : GaussSuppression_anySum: .. #> col 84 , 1 extra : GaussSuppression_anySum: ... #> col 89 , 1 extra : GaussSuppression_anySum: ... #> col 91 , 1 extra : GaussSuppression_anySum: ... #> col 104 , 2 extra : GaussSuppression_anySum: .. #> col 109 , 1 extra : GaussSuppression_anySum: ... #> col 118 , 1 extra : GaussSuppression_anySum: .. #> col 120 , 2 extra : GaussSuppression_anySum: .. #> col 123 , 1 extra : GaussSuppression_anySum: . #> col 125 , 1 extra : GaussSuppression_anySum: . #> col 132 , 1 extra : GaussSuppression_anySum: . #> col 135 , 1 extra : GaussSuppression_anySum: . #> col 136 , 1 extra : GaussSuppression_anySum: .. #> col 140 , 1 extra : GaussSuppression_anySum: .. #> col 143 , 1 extra : GaussSuppression_anySum: . #> col 145 , 1 extra : GaussSuppression_anySum: . #> col 147 , 1 extra : GaussSuppression_anySum: ... #> 284-primary-suppressed #> iter-1-col-321-suppressed #> iter-1-row-352-suppressed #> iter-2-col-365-suppressed #>   #> row 1 , 1 extra : GaussSuppression_anySum: .......................... #> row 2 , 3 extra : GaussSuppression_anySum: ................... #> row 3 , 4 extra : GaussSuppression_anySum: ........................ #> row 4 , 5 extra : GaussSuppression_anySum: .............................. #> 284-primary-suppressed #> iter-1-col-321-suppressed #> iter-1-row-352-suppressed #> iter-2-col-365-suppressed #> iter-2-row-368-suppressed #>   #> col 39 , 1 extra : GaussSuppression_anySum: . #> col 73 , 1 extra : GaussSuppression_anySum: . #> col 126 , 1 extra : GaussSuppression_anySum: .. #> 284-primary-suppressed #> iter-1-col-321-suppressed #> iter-1-row-352-suppressed #> iter-2-col-365-suppressed #> iter-2-row-368-suppressed #> iter-3-col-369-suppressed #>   #> row 3 , 1 extra : GaussSuppression_anySum: ....................... #> 284-primary-suppressed #> iter-1-col-321-suppressed #> iter-1-row-352-suppressed #> iter-2-col-365-suppressed #> iter-2-row-368-suppressed #> iter-3-col-369-suppressed #> iter-3-row-369-suppressed #>                                   # \"mnd\" not in  hierarchies -> duplicated combinations in input  # Error when  preAggregate is FALSE: Index method failed. Duplicated combinations? out5 <- GaussSuppressionTwoWay(z, freqVar = \"ant\", hierarchies = dimListsA[1:3],                                 protectZeros = FALSE, colVar = c(\"hovedint\"), preAggregate = TRUE) #> [preAggregate 250*7->138*3] #> 57-primary-suppressed #>   #> col 1 , 19 extra : GaussSuppression_anySum: .......................... #> col 2 , 13 extra : GaussSuppression_anySum: ................................ #> col 3 , 11 extra : GaussSuppression_anySum: .................................. #> col 4 , 9 extra : GaussSuppression_anySum: .................................... #> col 5 , 5 extra : GaussSuppression_anySum: ........................................ #> 57-primary-suppressed #> iter-1-col-64-suppressed #>   #> row 1 , 2 extra : GaussSuppression_anySum: ... #> row 3 , 2 extra : GaussSuppression_anySum: ... #> row 4 , 2 extra : GaussSuppression_anySum: ... #> row 6 , 1 extra : GaussSuppression_anySum: .... #> row 8 , 3 extra : GaussSuppression_anySum: .. #> row 9 , 3 extra : GaussSuppression_anySum: .. #> row 10 , 3 extra : GaussSuppression_anySum: .. #> row 13 , 1 extra : GaussSuppression_anySum: .... #> row 14 , 2 extra : GaussSuppression_anySum: ... #> row 15 , 3 extra : GaussSuppression_anySum: .. #> row 16 , 2 extra : GaussSuppression_anySum: ... #> row 17 , 2 extra : GaussSuppression_anySum: ... #> row 18 , 2 extra : GaussSuppression_anySum: ... #> row 19 , 1 extra : GaussSuppression_anySum: .... #> row 21 , 1 extra : GaussSuppression_anySum: .... #> row 22 , 1 extra : GaussSuppression_anySum: .... #> row 23 , 3 extra : GaussSuppression_anySum: .. #> row 24 , 2 extra : GaussSuppression_anySum: ... #> row 25 , 5 extra : GaussSuppression_anySum:  #> row 27 , 4 extra : GaussSuppression_anySum: . #> row 28 , 1 extra : GaussSuppression_anySum: .... #> row 29 , 2 extra : GaussSuppression_anySum: ... #> row 30 , 1 extra : GaussSuppression_anySum: .... #> row 31 , 2 extra : GaussSuppression_anySum: ... #> row 32 , 3 extra : GaussSuppression_anySum: .. #> row 34 , 1 extra : GaussSuppression_anySum: .... #> row 35 , 3 extra : GaussSuppression_anySum: .. #> row 36 , 2 extra : GaussSuppression_anySum: ... #> row 43 , 2 extra : GaussSuppression_anySum: ... #> row 44 , 2 extra : GaussSuppression_anySum: ... #> 57-primary-suppressed #> iter-1-col-64-suppressed #> iter-1-row-73-suppressed #>   #> col 1 , 4 extra : GaussSuppression_anySum: ..................... #> col 2 , 5 extra : GaussSuppression_anySum: ......................... #> 57-primary-suppressed #> iter-1-col-64-suppressed #> iter-1-row-73-suppressed #> iter-2-col-73-suppressed #>   #> 57-primary-suppressed #> iter-1-col-64-suppressed #> iter-1-row-73-suppressed #> iter-2-col-73-suppressed #> iter-2-row-73-suppressed #>     # charVar needed -> Still problem when preAggregate is TRUE # Possible workaround by extra hierarchy  out6 <- GaussSuppressionTwoWay(z, freqVar = \"ant\", charVar = \"mnd2\",                                hierarchies = c(dimListsA[1:3], mnd2 = \"Total\"), # include charVar                                 inputInOutput = c(TRUE, TRUE, FALSE),  # FALSE -> only Total                                 protectZeros = FALSE, colVar = c(\"hovedint\"),                                preAggregate = TRUE,                                  hidden = function(x, data, charVar, ...)             as.vector((Matrix::t(x) %*% as.numeric(data[[charVar]] == \"M06M12\")) == 0))                                 #> [preAggregate 250*7->200*4] #> 57-primary-suppressed #>   #> col 1 , 19 extra : GaussSuppression_anySum: ......................... #> col 2 , 13 extra : GaussSuppression_anySum: .............................. #> col 3 , 11 extra : GaussSuppression_anySum: ............................. #> col 4 , 9 extra : GaussSuppression_anySum: ................................... #> col 5 , 5 extra : GaussSuppression_anySum: ........................................ #> 57-primary-suppressed #> iter-1-col-62-suppressed #>   #> row 1 , 2 extra : GaussSuppression_anySum: ... #> row 3 , 2 extra : GaussSuppression_anySum: ... #> row 4 , 2 extra : GaussSuppression_anySum: .. #> row 6 , 1 extra : GaussSuppression_anySum: .... #> row 8 , 3 extra : GaussSuppression_anySum: .. #> row 9 , 3 extra : GaussSuppression_anySum: . #> row 10 , 3 extra : GaussSuppression_anySum: .. #> row 13 , 1 extra : GaussSuppression_anySum: .... #> row 14 , 2 extra : GaussSuppression_anySum: ... #> row 15 , 3 extra : GaussSuppression_anySum: .. #> row 16 , 2 extra : GaussSuppression_anySum: ... #> row 17 , 2 extra : GaussSuppression_anySum: ... #> row 18 , 1 extra : GaussSuppression_anySum: .... #> row 19 , 1 extra : GaussSuppression_anySum: .... #> row 21 , 1 extra : GaussSuppression_anySum: .... #> row 22 , 1 extra : GaussSuppression_anySum: .... #> row 23 , 3 extra : GaussSuppression_anySum: .. #> row 24 , 2 extra : GaussSuppression_anySum: ... #> row 25 , 5 extra : GaussSuppression_anySum:  #> row 27 , 4 extra : GaussSuppression_anySum: . #> row 28 , 1 extra : GaussSuppression_anySum: .... #> row 29 , 2 extra : GaussSuppression_anySum: ... #> row 30 , 1 extra : GaussSuppression_anySum: ... #> row 31 , 2 extra : GaussSuppression_anySum: ... #> row 32 , 3 extra : GaussSuppression_anySum: .. #> row 34 , 1 extra : GaussSuppression_anySum: .... #> row 35 , 2 extra : GaussSuppression_anySum: .. #> row 36 , 2 extra : GaussSuppression_anySum: .. #> row 43 , 2 extra : GaussSuppression_anySum: ... #> row 44 , 2 extra : GaussSuppression_anySum: ... #> 57-primary-suppressed #> iter-1-col-62-suppressed #> iter-1-row-71-suppressed #>   #> col 1 , 4 extra : GaussSuppression_anySum: .................... #> col 2 , 5 extra : GaussSuppression_anySum: ....................... #> 57-primary-suppressed #> iter-1-col-62-suppressed #> iter-1-row-71-suppressed #> iter-2-col-71-suppressed #>   #> 57-primary-suppressed #> iter-1-col-62-suppressed #> iter-1-row-71-suppressed #> iter-2-col-71-suppressed #> iter-2-row-71-suppressed #>"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GetDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default value of a function — GetDefault","title":"Get default value of a function — GetDefault","text":"value may found spec. See PackageSpecs.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GetDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default value of a function — GetDefault","text":"","code":"GetDefault(fun, parameter, ifnotfound = NULL)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GetDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get default value of a function — GetDefault","text":"fun function parameter parameter name ifnotfound","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GetDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default value of a function — GetDefault","text":"default parameter, possibly evaluated.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GetDefault.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get default value of a function — GetDefault","text":"result evaluated .name returns TRUE.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/GetDefault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get default value of a function — GetDefault","text":"","code":"fun1 <- GetDefault(GaussSuppressionFromData, \"candidates\") fun2 <- GetDefault(SuppressFewContributors, \"primary\") fun3 <- GetDefault(SuppressDominantCells, \"primary\")"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/HierarchyContributors.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts of input code contributions — HierarchyContributors","title":"Counts of input code contributions — HierarchyContributors","text":"Counts input code contributions","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/HierarchyContributors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts of input code contributions — HierarchyContributors","text":"","code":"HierarchyContributors(data, x, crossTable, hierarchies, inputInOutput = TRUE)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/HierarchyContributors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counts of input code contributions — HierarchyContributors","text":"data input data x model matrix created ModelMatrix data, hierarchies inputInOutput input crossTable crossTable created ModelMatrix data, hierarchies inputInOutput input hierarchies Standardized hierarchies.  , output AutoHierarchies. inputInOutput ModelMatrix input.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/HierarchyContributors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counts of input code contributions — HierarchyContributors","text":"List data frames counts associated crossTable min: Minimum number times contributing input code contributes max: Maximum number times contributing input code contributes n:   Number contributing input codes ac:  Theoretical number contributing input codes according hierarchy","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/HierarchyContributors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Counts of input code contributions — HierarchyContributors","text":"","code":"z <- SSBtoolsData(\"sprt_emp_withEU\")[-(1:3), ] z$age[z$age == \"Y15-29\"] <- \"young\" z$age[z$age == \"Y30-64\"] <- \"old\" hi <- SSBtools::FindHierarchies(z[, -4]) inputInOutput <- c(TRUE, FALSE, FALSE) mm <- SSBtools::ModelMatrix(z, hi, crossTable = TRUE, inputInOutput = inputInOutput)  out <- HierarchyContributors(z, mm$modelMatrix, mm$crossTable, hi, inputInOutput)  # The nonzero values are caused by the removed three data rows cbind(mm$crossTable, out$max - out$min) #>     age   geo  year age geo year #> 1 Total Total Total   3   0    3 #> 2 Total    EU Total   2   0    2 #> 3 Total nonEU Total   1   0    1 #> 4   old Total Total   0   0    0 #> 5   old    EU Total   0   0    0 #> 6   old nonEU Total   0   0    0 #> 7 young Total Total   0   0    0 #> 8 young    EU Total   0   0    0 #> 9 young nonEU Total   0   0    0 cbind(mm$crossTable, out$ac - out$n) #>     age   geo  year age geo year #> 1 Total Total Total   0   0    0 #> 2 Total    EU Total   0   0    0 #> 3 Total nonEU Total   0   0    0 #> 4   old Total Total   0   0    0 #> 5   old    EU Total   0   0    0 #> 6   old nonEU Total   0   0    0 #> 7 young Total Total   0   0    1 #> 8 young    EU Total   0   0    1 #> 9 young nonEU Total   0   0    1"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/IncrementalTimeSuppression.html","id":null,"dir":"Reference","previous_headings":"","what":"Incremental Time Suppression — IncrementalTimeSuppression","title":"Incremental Time Suppression — IncrementalTimeSuppression","text":"Suppression function useful sequential calculations successive time periods.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/IncrementalTimeSuppression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incremental Time Suppression — IncrementalTimeSuppression","text":"","code":"IncrementalTimeSuppression(   data,   fun,   timeVar,   formula,   suppressedData = NULL,   subTotals = FALSE,   finalTotal = FALSE,   totalPriority = !isFALSE(finalTotal),   ... )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/IncrementalTimeSuppression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incremental Time Suppression — IncrementalTimeSuppression","text":"data Input data data frame fun function: GaussSuppressionFromData one wrappers SuppressSmallCounts SuppressDominantCells. timeVar time period variable formula formula formula defining tables within time periods. Therefore, variable timeVar  included. suppressedData data frame list data frames output GaussSuppressionFromData. subTotals Whether cumulative totals time included. finalTotal FALSE, timeVar total named according time period categories. totalPriority FALSE, timeVar  totals prioritized publication. words, totals preferred secondary suppression. ... parameters GaussSuppressionFromData","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/IncrementalTimeSuppression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incremental Time Suppression — IncrementalTimeSuppression","text":"data.frame","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/IncrementalTimeSuppression.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Incremental Time Suppression — IncrementalTimeSuppression","text":"function made internal since new future non-backward compatible changes may occur.","code":""},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/IncrementalTimeSuppression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Incremental Time Suppression — IncrementalTimeSuppression","text":"","code":"# Generating a dataset spanning four quarters  d2s <- SSBtoolsData(\"d2s\") d <- rbind(d2s, d2s, d2s, d2s) set.seed(10) d$freq[25:96] <- round(d$freq[25:96] + 9 * rnorm(72)) d$freq[d$freq < 0] <- 0 d$quarter <- rep(c(\"Q1\", \"Q2\", \"Q3\", \"Q4\"), each = 24)  # Redefine the function so that several parameters are preset.  # Also, a simpler function name.    STS <- function(data, ...) {   IncrementalTimeSuppression(data,            fun = SuppressSmallCounts,            timeVar = \"quarter\",            formula = ~main_income * size,            maxN = 15, freqVar = \"freq\", ...)}                       # Default settings without suppressedData as input a1 <- STS(d[1:24, ])    #> [extend0 24*3->24*3] #> GaussSuppression_anySum: ............. a2 <- STS(d[1:48, ]) #> [extend0 48*4->48*4] #> GaussSuppression_anySum: ....................................... a3 <- STS(d[1:72, ]) #> [extend0 72*4->72*4] #> GaussSuppression_anySum: ......................... a4 <- STS(d, finalTotal = TRUE) #> [extend0 96*4->96*4] #> GaussSuppression_anySum: ................................  # The quarters and named totals unique(a1$quarter) #> [1] \"Q1\" unique(a2$quarter) #> [1] \"quarter_Q1_Q2\" \"Q1\"            \"Q2\"            unique(a3$quarter) #> [1] \"quarter_Q1_Q3\" \"Q1\"            \"Q2\"            \"Q3\"            unique(a4$quarter) #> [1] \"Total\" \"Q1\"    \"Q2\"    \"Q3\"    \"Q4\"     # Default settings with suppressedData as input b2 <- STS(d[1:48, ], suppressedData = a1) #> [extend0 48*4->48*4] #> GaussSuppression_anySum: ..................................... b3 <- STS(d[1:72, ], suppressedData = b2) #> [extend0 72*4->72*4] #> GaussSuppression_anySum: ............................................. b4 <- STS(d, finalTotal = TRUE, suppressedData = b3) #> [extend0 96*4->96*4] #> GaussSuppression_anySum: ............................  # Without totalPriority, suppression will be the same as before.  # suppressedData makes no difference. # However, if, for example, there is a changed version of the suppression  # algorithm, it may be important to use suppressedData  identical(a2$suppressed, b2$suppressed) #> [1] TRUE identical(a3$suppressed, b3$suppressed) #> [1] TRUE identical(a4$suppressed, b4$suppressed) # totalPriority here, since finalTotal  #> [1] FALSE  # With totalPriority and  all the subtotals  # Note: subtotals are not prioritized c2 <- STS(d[1:48, ], subTotals = TRUE, totalPriority = TRUE) #> [extend0 48*4->48*4] #> GaussSuppression_anySum: ....................................... c3 <- STS(d[1:72, ], subTotals = TRUE, totalPriority = TRUE) #> [extend0 72*5->72*5] #> GaussSuppression_anySum: ................................ c4 <- STS(d, subTotals = TRUE, finalTotal = TRUE) #> [extend0 96*6->96*6] #> GaussSuppression_anySum: .............................. unique(c2$quarter) #> [1] \"quarter_Q1_Q2\" \"Q1\"            \"Q2\"            unique(c3$quarter) #> [1] \"quarter_Q1_Q3\" \"Q1\"            \"Q2\"            \"Q3\"            #> [5] \"quarter_Q1_Q2\" unique(c4$quarter) #> [1] \"Total\"         \"Q1\"            \"Q2\"            \"Q3\"            #> [5] \"Q4\"            \"quarter_Q1_Q2\" \"quarter_Q1_Q3\"  # With such a method, we can see that is important to take into account  # previously published results. # Here this is not done and we see differences. a2[a2$suppressed | c2$suppressed, ] #>          quarter main_income  size freq primary suppressed #> 12 quarter_Q1_Q2       other   BIG   13    TRUE       TRUE #> 13 quarter_Q1_Q2       other small   36   FALSE       TRUE #> 14 quarter_Q1_Q2    pensions   BIG  165   FALSE       TRUE #> 15 quarter_Q1_Q2    pensions small   47   FALSE       TRUE #> 16 quarter_Q1_Q2       wages   BIG   20   FALSE      FALSE #> 17 quarter_Q1_Q2       wages small   21   FALSE      FALSE #> 32            Q1       other   BIG   10    TRUE       TRUE #> 33            Q1       other small   16   FALSE       TRUE #> 34            Q1    pensions   BIG   79   FALSE      FALSE #> 35            Q1    pensions small   33   FALSE      FALSE #> 36            Q1       wages   BIG   20   FALSE       TRUE #> 37            Q1       wages small    2    TRUE       TRUE #> 40            Q2       other   BIG    3    TRUE       TRUE #> 41            Q2       other small   20   FALSE       TRUE #> 42            Q2    pensions   BIG   86   FALSE       TRUE #> 43            Q2    pensions small   14    TRUE       TRUE #> 44            Q2       wages   BIG    0    TRUE       TRUE #> 45            Q2       wages small   19   FALSE       TRUE c2[a2$suppressed | c2$suppressed, ] #>          quarter main_income  size freq primary suppressed #> 12 quarter_Q1_Q2       other   BIG   13    TRUE       TRUE #> 13 quarter_Q1_Q2       other small   36   FALSE       TRUE #> 14 quarter_Q1_Q2    pensions   BIG  165   FALSE      FALSE #> 15 quarter_Q1_Q2    pensions small   47   FALSE      FALSE #> 16 quarter_Q1_Q2       wages   BIG   20   FALSE       TRUE #> 17 quarter_Q1_Q2       wages small   21   FALSE       TRUE #> 32            Q1       other   BIG   10    TRUE       TRUE #> 33            Q1       other small   16   FALSE       TRUE #> 34            Q1    pensions   BIG   79   FALSE       TRUE #> 35            Q1    pensions small   33   FALSE       TRUE #> 36            Q1       wages   BIG   20   FALSE       TRUE #> 37            Q1       wages small    2    TRUE       TRUE #> 40            Q2       other   BIG    3    TRUE       TRUE #> 41            Q2       other small   20   FALSE       TRUE #> 42            Q2    pensions   BIG   86   FALSE       TRUE #> 43            Q2    pensions small   14    TRUE       TRUE #> 44            Q2       wages   BIG    0    TRUE       TRUE #> 45            Q2       wages small   19   FALSE       TRUE c3[SSBtools::Match( c2[a2$suppressed | c2$suppressed, 1:4], c3[1:4]), ] #>          quarter main_income  size freq primary suppressed #> 70 quarter_Q1_Q2       other   BIG   13    TRUE       TRUE #> 71 quarter_Q1_Q2       other small   36   FALSE       TRUE #> 72 quarter_Q1_Q2    pensions   BIG  165   FALSE       TRUE #> 73 quarter_Q1_Q2    pensions small   47   FALSE       TRUE #> 74 quarter_Q1_Q2       wages   BIG   20   FALSE       TRUE #> 75 quarter_Q1_Q2       wages small   21   FALSE      FALSE #> 46            Q1       other   BIG   10    TRUE       TRUE #> 47            Q1       other small   16   FALSE       TRUE #> 48            Q1    pensions   BIG   79   FALSE      FALSE #> 49            Q1    pensions small   33   FALSE      FALSE #> 50            Q1       wages   BIG   20   FALSE       TRUE #> 51            Q1       wages small    2    TRUE       TRUE #> 54            Q2       other   BIG    3    TRUE       TRUE #> 55            Q2       other small   20   FALSE      FALSE #> 56            Q2    pensions   BIG   86   FALSE       TRUE #> 57            Q2    pensions small   14    TRUE       TRUE #> 58            Q2       wages   BIG    0    TRUE       TRUE #> 59            Q2       wages small   19   FALSE       TRUE c4[SSBtools::Match( c2[a2$suppressed | c2$suppressed, 1:4], c4[1:4]), ] #>          quarter main_income  size freq primary suppressed #> 92 quarter_Q1_Q2       other   BIG   13    TRUE       TRUE #> 93 quarter_Q1_Q2       other small   36   FALSE       TRUE #> 94 quarter_Q1_Q2    pensions   BIG  165   FALSE       TRUE #> 95 quarter_Q1_Q2    pensions small   47   FALSE       TRUE #> 96 quarter_Q1_Q2       wages   BIG   20   FALSE       TRUE #> 97 quarter_Q1_Q2       wages small   21   FALSE       TRUE #> 60            Q1       other   BIG   10    TRUE       TRUE #> 61            Q1       other small   16   FALSE       TRUE #> 62            Q1    pensions   BIG   79   FALSE      FALSE #> 63            Q1    pensions small   33   FALSE      FALSE #> 64            Q1       wages   BIG   20   FALSE       TRUE #> 65            Q1       wages small    2    TRUE       TRUE #> 68            Q2       other   BIG    3    TRUE       TRUE #> 69            Q2       other small   20   FALSE      FALSE #> 70            Q2    pensions   BIG   86   FALSE       TRUE #> 71            Q2    pensions small   14    TRUE       TRUE #> 72            Q2       wages   BIG    0    TRUE       TRUE #> 73            Q2       wages small   19   FALSE       TRUE   # Here we take into account previously published results. d2 <- STS(d[1:48, ], subTotals = TRUE, totalPriority = TRUE, suppressedData = a1) #> [extend0 48*4->48*4] #> GaussSuppression_anySum: ..................................... d3 <- STS(d[1:72, ], subTotals = TRUE, totalPriority = TRUE, suppressedData = d2) #> [extend0 72*5->72*5] #> GaussSuppression_anySum: ............................ d4 <- STS(d, subTotals = TRUE, finalTotal = TRUE, suppressedData = d3) #> [extend0 96*6->96*6] #> GaussSuppression_anySum: .........................  SSBtools::SortRows(d2[d2$suppressed, ]) #>          quarter main_income  size freq primary forced unsafe suppressed #> 32            Q1       other   BIG   10    TRUE  FALSE  FALSE       TRUE #> 33            Q1       other small   16    TRUE  FALSE  FALSE       TRUE #> 36            Q1       wages   BIG   20    TRUE  FALSE  FALSE       TRUE #> 37            Q1       wages small    2    TRUE  FALSE  FALSE       TRUE #> 40            Q2       other   BIG    3    TRUE  FALSE  FALSE       TRUE #> 41            Q2       other small   20   FALSE  FALSE  FALSE       TRUE #> 42            Q2    pensions   BIG   86   FALSE  FALSE  FALSE       TRUE #> 43            Q2    pensions small   14    TRUE  FALSE  FALSE       TRUE #> 44            Q2       wages   BIG    0    TRUE  FALSE  FALSE       TRUE #> 45            Q2       wages small   19   FALSE  FALSE  FALSE       TRUE #> 12 quarter_Q1_Q2       other   BIG   13    TRUE  FALSE  FALSE       TRUE #> 13 quarter_Q1_Q2       other small   36   FALSE  FALSE  FALSE       TRUE #> 14 quarter_Q1_Q2    pensions   BIG  165   FALSE  FALSE  FALSE       TRUE #> 15 quarter_Q1_Q2    pensions small   47   FALSE  FALSE  FALSE       TRUE SSBtools::SortRows(d3[d3$suppressed, ]) #>          quarter main_income  size freq primary forced unsafe suppressed #> 46            Q1       other   BIG   10    TRUE  FALSE  FALSE       TRUE #> 47            Q1       other small   16    TRUE  FALSE  FALSE       TRUE #> 50            Q1       wages   BIG   20    TRUE  FALSE  FALSE       TRUE #> 51            Q1       wages small    2    TRUE  FALSE  FALSE       TRUE #> 54            Q2       other   BIG    3    TRUE  FALSE  FALSE       TRUE #> 55            Q2       other small   20    TRUE  FALSE  FALSE       TRUE #> 56            Q2    pensions   BIG   86    TRUE  FALSE  FALSE       TRUE #> 57            Q2    pensions small   14    TRUE  FALSE  FALSE       TRUE #> 58            Q2       wages   BIG    0    TRUE  FALSE  FALSE       TRUE #> 59            Q2       wages small   19    TRUE  FALSE  FALSE       TRUE #> 62            Q3       other   BIG    0    TRUE  FALSE  FALSE       TRUE #> 29            Q3       other Total   10    TRUE  FALSE  FALSE       TRUE #> 63            Q3       other small   10    TRUE  FALSE  FALSE       TRUE #> 64            Q3    pensions   BIG   71   FALSE  FALSE  FALSE       TRUE #> 65            Q3    pensions small   32   FALSE  FALSE  FALSE       TRUE #> 66            Q3       wages   BIG   17   FALSE  FALSE  FALSE       TRUE #> 31            Q3       wages Total   19   FALSE  FALSE  FALSE       TRUE #> 67            Q3       wages small    2    TRUE  FALSE  FALSE       TRUE #> 70 quarter_Q1_Q2       other   BIG   13    TRUE  FALSE  FALSE       TRUE #> 71 quarter_Q1_Q2       other small   36    TRUE  FALSE  FALSE       TRUE #> 72 quarter_Q1_Q2    pensions   BIG  165    TRUE  FALSE  FALSE       TRUE #> 73 quarter_Q1_Q2    pensions small   47    TRUE  FALSE  FALSE       TRUE #> 14 quarter_Q1_Q3       other   BIG   13    TRUE  FALSE  FALSE       TRUE #> 7  quarter_Q1_Q3       other Total   59   FALSE  FALSE  FALSE       TRUE #> 15 quarter_Q1_Q3       other small   46   FALSE  FALSE  FALSE       TRUE #> 18 quarter_Q1_Q3       wages   BIG   37   FALSE  FALSE  FALSE       TRUE #> 9  quarter_Q1_Q3       wages Total   60   FALSE  FALSE  FALSE       TRUE #> 19 quarter_Q1_Q3       wages small   23   FALSE  FALSE  FALSE       TRUE  # With such a method, some annual totals must be suppressed SSBtools::SortRows(d4[d4$suppressed, ])  #>           quarter main_income  size freq primary forced unsafe suppressed #> 60             Q1       other   BIG   10    TRUE  FALSE  FALSE       TRUE #> 61             Q1       other small   16    TRUE  FALSE  FALSE       TRUE #> 64             Q1       wages   BIG   20    TRUE  FALSE  FALSE       TRUE #> 65             Q1       wages small    2    TRUE  FALSE  FALSE       TRUE #> 68             Q2       other   BIG    3    TRUE  FALSE  FALSE       TRUE #> 69             Q2       other small   20    TRUE  FALSE  FALSE       TRUE #> 70             Q2    pensions   BIG   86    TRUE  FALSE  FALSE       TRUE #> 71             Q2    pensions small   14    TRUE  FALSE  FALSE       TRUE #> 72             Q2       wages   BIG    0    TRUE  FALSE  FALSE       TRUE #> 73             Q2       wages small   19    TRUE  FALSE  FALSE       TRUE #> 76             Q3       other   BIG    0    TRUE  FALSE  FALSE       TRUE #> 31             Q3       other Total   10    TRUE  FALSE  FALSE       TRUE #> 77             Q3       other small   10    TRUE  FALSE  FALSE       TRUE #> 78             Q3    pensions   BIG   71    TRUE  FALSE  FALSE       TRUE #> 79             Q3    pensions small   32    TRUE  FALSE  FALSE       TRUE #> 80             Q3       wages   BIG   17    TRUE  FALSE  FALSE       TRUE #> 33             Q3       wages Total   19    TRUE  FALSE  FALSE       TRUE #> 81             Q3       wages small    2    TRUE  FALSE  FALSE       TRUE #> 84             Q4       other   BIG   10    TRUE  FALSE  FALSE       TRUE #> 35             Q4       other Total   54   FALSE  FALSE  FALSE       TRUE #> 85             Q4       other small   44   FALSE  FALSE  FALSE       TRUE #> 88             Q4       wages   BIG   24   FALSE  FALSE  FALSE       TRUE #> 37             Q4       wages Total   34   FALSE  FALSE  FALSE       TRUE #> 89             Q4       wages small   10    TRUE  FALSE  FALSE       TRUE #> 16          Total       other   BIG   23   FALSE  FALSE  FALSE       TRUE #> 17          Total       other small   90   FALSE  FALSE  FALSE       TRUE #> 20          Total       wages   BIG   61   FALSE  FALSE  FALSE       TRUE #> 21          Total       wages small   33   FALSE  FALSE  FALSE       TRUE #> 92  quarter_Q1_Q2       other   BIG   13    TRUE  FALSE  FALSE       TRUE #> 93  quarter_Q1_Q2       other small   36    TRUE  FALSE  FALSE       TRUE #> 94  quarter_Q1_Q2    pensions   BIG  165    TRUE  FALSE  FALSE       TRUE #> 95  quarter_Q1_Q2    pensions small   47    TRUE  FALSE  FALSE       TRUE #> 100 quarter_Q1_Q3       other   BIG   13    TRUE  FALSE  FALSE       TRUE #> 53  quarter_Q1_Q3       other Total   59    TRUE  FALSE  FALSE       TRUE #> 101 quarter_Q1_Q3       other small   46    TRUE  FALSE  FALSE       TRUE #> 104 quarter_Q1_Q3       wages   BIG   37    TRUE  FALSE  FALSE       TRUE #> 55  quarter_Q1_Q3       wages Total   60    TRUE  FALSE  FALSE       TRUE #> 105 quarter_Q1_Q3       wages small   23    TRUE  FALSE  FALSE       TRUE  # If necessary, several suppressed data sets can be taken into account e4 <- STS(d, finalTotal = TRUE, suppressedData = list(a1, a2)) #> [extend0 96*4->96*4] #> GaussSuppression_anySum: ............................."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/KDisclosurePrimary.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct primary suppressed difference matrix — KDisclosurePrimary","title":"Construct primary suppressed difference matrix — KDisclosurePrimary","text":"Function constructing model matrix columns representing primary suppressed difference cells","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/KDisclosurePrimary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct primary suppressed difference matrix — KDisclosurePrimary","text":"","code":"KDisclosurePrimary(   data,   x,   crossTable,   freqVar,   mc_hierarchies = NULL,   coalition = 1,   upper_bound = Inf,   ... )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/KDisclosurePrimary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct primary suppressed difference matrix — KDisclosurePrimary","text":"data data.frame representing data set x ModelMatrix generated parent function crossTable crossTable generated parent function freqVar name frequency variable data mc_hierarchies hierarchy representing meaningful combinations protected. Default value NULL. coalition numeric vector length one, representing possible size attacking coalition. parameter corresponds parameter k definition k-disclosure. upper_bound numeric value representing minimum count considered safe. Default set Inf ... parameters passed children functions","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/KDisclosurePrimary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct primary suppressed difference matrix — KDisclosurePrimary","text":"dgCMatrix corresponding primary suppressed cells","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/KDisclosurePrimary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct primary suppressed difference matrix — KDisclosurePrimary","text":"Daniel P. Lupp","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/LazyLinkedTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Linked tables by full GaussSuppressionFromData iterations — LazyLinkedTables","title":"Linked tables by full GaussSuppressionFromData iterations — LazyLinkedTables","text":"AdditionalSuppression called several times ChainedSuppression","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/LazyLinkedTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linked tables by full GaussSuppressionFromData iterations — LazyLinkedTables","text":"","code":"LazyLinkedTables(..., withinArg = NULL, maxIterLinked = 1000)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/LazyLinkedTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linked tables by full GaussSuppressionFromData iterations — LazyLinkedTables","text":"... Arguments GaussSuppressionFromData kept constant. withinArg list named lists. Arguments GaussSuppressionFromData kept constant. maxIterLinked Maximum number GaussSuppressionFromData calls table.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/LazyLinkedTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linked tables by full GaussSuppressionFromData iterations — LazyLinkedTables","text":"List data frames","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/LazyLinkedTables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linked tables by full GaussSuppressionFromData iterations — LazyLinkedTables","text":"function created spin-AdditionalSuppression ChainedSuppression. calculations run GaussSuppressionFromData input time. doubt can done efficiently. consequence lazy implementation , output, primary suppressed identical. Note residual risk suppression linked tables iterations.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/LazyLinkedTables.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Linked tables by full GaussSuppressionFromData iterations — LazyLinkedTables","text":"function, parameters makeForced  forceNotPrimary  AdditionalSuppression forced FALSE.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/LazyLinkedTables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linked tables by full GaussSuppressionFromData iterations — LazyLinkedTables","text":"","code":"z1 <- SSBtoolsData(\"z1\") z2 <- SSBtoolsData(\"z2\") z2b <- z2[3:5]  # As in ChainedSuppression example  names(z2b)[1] <- \"region\"  # The two region hierarchies as two linked tables a <- LazyLinkedTables(z2, freqVar = 5, withinArg = list(        list(dimVar = c(1, 2, 4)),         list(dimVar = c(1, 3, 4)))) #> GaussSuppression_anySum: ......................... #> GaussSuppression_anySum: ................................................. #> GaussSuppression_anySum: .............................. #> GaussSuppression_anySum: .......................................... #> GaussSuppression_anySum: .............................  # As 'f' and 'e' in ChainedSuppression example.  # 'A' 'annet'/'arbeid' suppressed in b[[1]], since suppressed in b[[3]]. b <- LazyLinkedTables(withinArg = list(        list(data = z1, dimVar = 1:2, freqVar = 3, maxN = 5),         list(data = z2b, dimVar = 1:2, freqVar = 3, maxN = 5),         list(data = z2, dimVar = 1:4, freqVar = 5, maxN = 1))) #> GaussSuppression_anySum: ........................................ #> GaussSuppression_anySum: .............. #> GaussSuppression_anySum: .......................... #> GaussSuppression_anySum: ................................. #> GaussSuppression_anySum: ........... #> GaussSuppression_anySum: ...................................."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MagnitudeRule.html","id":null,"dir":"Reference","previous_headings":"","what":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","title":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","text":"Supports application multiple values n k. function works magnitude tables containing negative cell values calculating contribution based absolute values.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MagnitudeRule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","text":"","code":"MagnitudeRule(   data,   x,   numVar,   n = NULL,   k = NULL,   pPercent = NULL,   protectZeros = FALSE,   charVar = NULL,   removeCodes = character(0),   removeCodesFraction = 1,   sWeightVar = NULL,   domWeightMethod = \"default\",   allDominance = FALSE,   outputWeightedNum = !is.null(sWeightVar),   dominanceVar = NULL,   structuralEmpty = FALSE,   apply_abs_directly = FALSE,   max_contribution_output = NULL,   num,   ... )  DominanceRule(data, n, k, protectZeros = FALSE, ...)  PPercentRule(data, pPercent, protectZeros = FALSE, ...)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MagnitudeRule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","text":"data dataset x ModelMatrix generated parent function numVar vector containing numeric values data set n Parameter n dominance rule. k Parameter k dominance rule. pPercent Parameter p% rule, non-NULL. Parameters n  k ignored. Technically, calculations performed internally n = 1:2. results intermediate calculations can viewed setting allDominance = TRUE. protectZeros Parameter determining whether cells value 0 suppressed. Unless structuralEmpty TRUE (see ), cells result value 0 due removed removeCode contributions also suppressed. charVar Variable data holding grouping information. Dominance calculated aggregation within groups. removeCodes vector charVar codes excluded calculating dominance percentages. Essentially, corresponding numeric values dominanceVar numVar set zero proceeding dominance calculations. empty charVar row indices assumed conversion integer performed. See also removeCodesFraction . removeCodesFraction Numeric value(s) range [0, 1]. can either single value vector length removeCodes. value 1 represents default behavior, described . value 0 indicates dominance percentages calculated removeCodes removed, percentages associated removeCodes still excluded identifying major contributions. Values 0 1 modify contributions removeCodes proportionally calculation percentages. sWeightVar variable sampling weights used dominance rule domWeightMethod character representing weights treated dominance rule. See Details. allDominance Logical. TRUE, additional information included output. n = 2, following variables added: \"dominant2\": fraction associated dominance rule. \"max2contributor\": IDs associated second largest contribution. IDs taken charVar provided, row indices charVar supplied. \"n_contr\" \"n_non0_contr\": Outputs max_contribution. removeCodes used input, \"n_contr_all\" \"n_non0_contr_all\" also included. parameter max_contribution_output can used specify custom outputs max_contribution. Note max_contribution_output provided, specified outputs included, default outputs (\"n_contr\" \"n_non0_contr\") added unless explicitly listed. outputWeightedNum logical value determine whether weighted numerical value included output. Default TRUE sWeightVar provided. dominanceVar specified, dominanceVar used place numVar. Specifying dominanceVar beneficial avoiding warnings multiple numVar variables. Typically, dominanceVar one variables already included numVar. structuralEmpty Parameter input GaussSuppressionFromData. needed also handle structural zeros caused removeCodes. apply_abs_directly Logical. Determines negative values treated rules. apply_abs_directly = FALSE (default), absolute values taken summing contributions, performed max_contribution. apply_abs_directly = TRUE, absolute values computed directly input values, prior summation. corresponds old behavior function. max_contribution_output See description allDominance parameter. num Output numeric data generated parent function. parameter needed protectZeros TRUE. ... unused parameters","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MagnitudeRule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","text":"logical vector TRUE positions corresponding cells breaching dominance rules.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MagnitudeRule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","text":"method supports suppressing single numeric variable. multiple ways handling sampling weights dominance rule. default method implemented compares unweighted sample values corresponding weighted cell totals. domWeightMethod set \"tauargus\", method implemented tauArgus used. information method, see \"Statistical Disclosure Control\" Hundepool et al (2012, p. 151).","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MagnitudeRule.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","text":"Explicit  protectZeros wrappers since default needed GaussSuppressionFromData","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MagnitudeRule.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","text":"Daniel Lupp Øyvind Langsrud","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MagnitudeRule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dominance (n,k) or p% rule for magnitude tables — MagnitudeRule","text":"","code":"set.seed(123) z <- SSBtools::MakeMicro(SSBtoolsData(\"z2\"), \"ant\") z$value <- sample(1:1000, nrow(z), replace = TRUE)  GaussSuppressionFromData(z, dimVar = c(\"region\", \"fylke\", \"kostragr\", \"hovedint\"),  numVar = \"value\", candidates = CandidatesNum, primary = DominanceRule, preAggregate = FALSE, singletonMethod = \"sub2Sum\", n = c(1, 2), k = c(65, 85), allDominance = TRUE) #> GaussSuppression_numFFT: ............................ #>     region hovedint  value   dominant1  dominant2 max1contributor #> 1        1    Total  58761 0.017001072 0.03384898             505 #> 2        1    annet   5053 0.185632298 0.34751633               6 #> 3        1   arbeid   4184 0.213910134 0.40941683              94 #> 4        1 soshjelp  35414 0.027842096 0.05565596             177 #> 5        1    trygd  14110 0.070800850 0.14096386             505 #> 6       10    Total  48787 0.020394777 0.04066657             687 #> 7       10    annet   6212 0.137475853 0.26207341              83 #> 8       10   arbeid   1675 0.555820896 1.00000000             141 #> 9       10 soshjelp  24620 0.040170593 0.07997563             440 #> 10      10    trygd  16280 0.061117936 0.12057740             687 #> 11     300    Total 292658 0.003413541 0.00680658             505 #> 12     300    annet  37034 0.026705190 0.05341038              23 #> 13     300   arbeid  24402 0.040283583 0.08011638             102 #> 14     300 soshjelp 145491 0.006790798 0.01357472             339 #> 15     300    trygd  85731 0.011652728 0.02323547             505 #> 16       4    Total  30525 0.032432432 0.06358722             533 #> 17       4    annet   3735 0.205622490 0.39544846              17 #> 18       4   arbeid    928 1.000000000 1.00000000             100 #> 19       4 soshjelp  16062 0.059208069 0.11798033             213 #> 20       4    trygd   9800 0.101020408 0.19530612             533 #> 21     400    Total  55366 0.017971318 0.03585233             687 #> 22     400    annet   6841 0.124835550 0.23797690              83 #> 23     400   arbeid   1675 0.555820896 1.00000000             141 #> 24     400 soshjelp  29418 0.033618873 0.06693181             440 #> 25     400    trygd  17432 0.057078935 0.11387104             687 #> 26       5    Total  58837 0.016809151 0.03351632              23 #> 27       5    annet  10363 0.095435685 0.18739747              23 #> 28       5   arbeid   5211 0.188639417 0.36288620             102 #> 29       5 soshjelp  25095 0.039171150 0.07814306             232 #> 30       5    trygd  18168 0.052619991 0.10413915             565 #> 31       6    Total  97942 0.010087603 0.02014458             339 #> 32       6    annet  11461 0.083413315 0.16516883              49 #> 33       6   arbeid   9342 0.097409548 0.19267823             114 #> 34       6 soshjelp  45906 0.021522241 0.04297913             339 #> 35       6    trygd  31233 0.031056895 0.06172958             590 #> 36       8    Total  53172 0.018675243 0.03727526             665 #> 37       8    annet   7051 0.140263792 0.26294143              58 #> 38       8   arbeid   4737 0.205193160 0.40743086             134 #> 39       8 soshjelp  27812 0.035488278 0.07011362             377 #> 40       8    trygd  13572 0.073165340 0.14559387             665 #> 41   Total    Total 348024 0.002870492 0.00572949             505 #> 42   Total    annet  43875 0.022541311 0.04508262              23 #> 43   Total   arbeid  26077 0.037696054 0.07497028             102 #> 44   Total soshjelp 174909 0.005654369 0.01130302             440 #> 45   Total    trygd 103163 0.009683704 0.01932864             505 #> 46       A    Total  52182 0.019144533 0.03803994             505 #> 47       A    annet   4424 0.212025316 0.39692586               6 #> 48       A   arbeid   4184 0.213910134 0.40941683              94 #> 49       A soshjelp  30616 0.032205383 0.06437810             177 #> 50       A    trygd  12958 0.077095231 0.14384936             505 #> 51       B    Total  30525 0.032432432 0.06358722             533 #> 52       B    annet   3735 0.205622490 0.39544846              17 #> 53       B   arbeid    928 1.000000000 1.00000000             100 #> 54       B soshjelp  16062 0.059208069 0.11798033             213 #> 55       B    trygd   9800 0.101020408 0.19530612             533 #> 56       C    Total  35800 0.027625698 0.05508380              23 #> 57       C    annet   3030 0.326402640 0.64092409              23 #> 58       C   arbeid   4980 0.197389558 0.37971888             102 #> 59       C soshjelp  16843 0.058362524 0.11642819             232 #> 60       C    trygd  10947 0.085502878 0.16689504             540 #> 61       D    Total  23037 0.041498459 0.08195512             565 #> 62       D    annet   7333 0.127096686 0.24587481              32 #> 63       D   arbeid    231 0.523809524 1.00000000             109 #> 64       D soshjelp   8252 0.111488124 0.21752302             276 #> 65       D    trygd   7221 0.132391636 0.25868993             565 #> 66       E    Total  69508 0.014214191 0.02838522             339 #> 67       E    annet   5632 0.166370739 0.32705966              45 #> 68       E   arbeid   6648 0.136883273 0.27075812             114 #> 69       E soshjelp  35000 0.028228571 0.05637143             339 #> 70       E    trygd  22228 0.043638654 0.08673745             590 #> 71       F    Total  28434 0.033867905 0.06748963             357 #> 72       F    annet   5829 0.164007548 0.32235375              49 #> 73       F   arbeid   2694 0.269487751 0.49591685             132 #> 74       F soshjelp  10906 0.088300018 0.17494957             357 #> 75       F    trygd   9005 0.100277624 0.20000000             647 #> 76       G    Total  20863 0.047404496 0.09471313              58 #> 77       G    annet   2946 0.335709437 0.53530210              58 #> 78       G   arbeid   2655 0.366101695 0.66177024             134 #> 79       G soshjelp  10823 0.091194678 0.17250300             377 #> 80       G    trygd   4439 0.214012165 0.42351881             658 #> 81       H    Total  32309 0.030734470 0.06115943             665 #> 82       H    annet   4105 0.210718636 0.41997564              65 #> 83       H   arbeid   2082 0.460134486 0.85110471             138 #> 84       H soshjelp  16989 0.056683737 0.11236683             388 #> 85       H    trygd   9133 0.108726596 0.21635826             665 #> 86       I    Total   6579 0.150478796 0.29305366             674 #> 87       I    annet    629 0.502384738 0.85691574              74 #> 88       I   arbeid      0 0.000000000 0.00000000              NA #> 89       I soshjelp   4798 0.195498124 0.37265527             433 #> 90       I    trygd   1152 0.859375000 1.00000000             674 #> 91       J    Total  30046 0.033115889 0.06603208             687 #> 92       J    annet   4718 0.181008902 0.34506147              83 #> 93       J   arbeid      0 0.000000000 0.00000000              NA #> 94       J soshjelp  16457 0.060096008 0.11964514             440 #> 95       J    trygd   8871 0.112163228 0.21564649             687 #> 96       K    Total  18741 0.051651459 0.10218238             702 #> 97       K    annet   1494 0.503346720 0.75368139              86 #> 98       K   arbeid   1675 0.555820896 1.00000000             141 #> 99       K soshjelp   8163 0.116011270 0.22920495             482 #> 100      K    trygd   7409 0.130651910 0.25577001             702 #>     max2contributor n_contr n_non0_contr primary suppressed #> 1               674     127          127   FALSE      FALSE #> 2                 7      14           14   FALSE      FALSE #> 3                89      11           11   FALSE      FALSE #> 4               174      64           64   FALSE      FALSE #> 5               674      38           38   FALSE      FALSE #> 6               440      96           96   FALSE      FALSE #> 7                79      13           13   FALSE      FALSE #> 8               142       2            2    TRUE       TRUE #> 9               441      50           50   FALSE      FALSE #> 10              702      31           31   FALSE       TRUE #> 11              665     596          596   FALSE      FALSE #> 12               58      72           72   FALSE       TRUE #> 13              134      52           52   FALSE       TRUE #> 14              377     283          283   FALSE      FALSE #> 15              665     189          189   FALSE      FALSE #> 16              213      55           55   FALSE      FALSE #> 17               18       7            7   FALSE      FALSE #> 18               NA       1            1    TRUE       TRUE #> 19              198      29           29   FALSE      FALSE #> 20              537      18           18   FALSE       TRUE #> 21              674     110          110   FALSE      FALSE #> 22               79      16           16   FALSE       TRUE #> 23              142       2            2    TRUE       TRUE #> 24              441      59           59   FALSE      FALSE #> 25              674      33           33   FALSE      FALSE #> 26              102     118          118   FALSE      FALSE #> 27               20      18           18   FALSE      FALSE #> 28              107      10           10   FALSE      FALSE #> 29              240      52           52   FALSE      FALSE #> 30              540      38           38   FALSE      FALSE #> 31              313     205          205   FALSE      FALSE #> 32               45      21           21   FALSE      FALSE #> 33              120      23           23   FALSE      FALSE #> 34              313      87           87   FALSE      FALSE #> 35              582      74           74   FALSE      FALSE #> 36               58     105          105   FALSE      FALSE #> 37               65      15           15   FALSE      FALSE #> 38              138       7            7   FALSE      FALSE #> 39              388      60           60   FALSE      FALSE #> 40              661      23           23   FALSE      FALSE #> 41              687     706          706   FALSE      FALSE #> 42               58      88           88   FALSE      FALSE #> 43              134      54           54   FALSE      FALSE #> 44              339     342          342   FALSE      FALSE #> 45              687     222          222   FALSE      FALSE #> 46              177     113          113   FALSE      FALSE #> 47                7      11           11   FALSE       TRUE #> 48               89      11           11   FALSE      FALSE #> 49              174      55           55   FALSE      FALSE #> 50              493      36           36   FALSE       TRUE #> 51              213      55           55   FALSE      FALSE #> 52               18       7            7   FALSE      FALSE #> 53               NA       1            1    TRUE       TRUE #> 54              198      29           29   FALSE      FALSE #> 55              537      18           18   FALSE       TRUE #> 56              102      73           73   FALSE      FALSE #> 57               20       5            5   FALSE       TRUE #> 58              107       8            8   FALSE       TRUE #> 59              240      35           35   FALSE      FALSE #> 60              546      25           25   FALSE      FALSE #> 61               32      45           45   FALSE      FALSE #> 62               36      13           13   FALSE       TRUE #> 63              110       2            2    TRUE       TRUE #> 64              264      17           17   FALSE      FALSE #> 65              572      13           13   FALSE      FALSE #> 66              313     138          138   FALSE      FALSE #> 67               44       9            9   FALSE      FALSE #> 68              120      14           14   FALSE      FALSE #> 69              313      63           63   FALSE      FALSE #> 70              582      52           52   FALSE      FALSE #> 71               49      67           67   FALSE      FALSE #> 72               48      12           12   FALSE      FALSE #> 73              130       9            9   FALSE      FALSE #> 74              356      24           24   FALSE      FALSE #> 75              636      22           22   FALSE      FALSE #> 76              377      40           40   FALSE      FALSE #> 77               61       6            6   FALSE       TRUE #> 78              137       4            4   FALSE       TRUE #> 79              372      22           22   FALSE      FALSE #> 80              655       8            8   FALSE      FALSE #> 81              661      65           65   FALSE      FALSE #> 82               66       9            9   FALSE       TRUE #> 83              139       3            3    TRUE       TRUE #> 84              421      38           38   FALSE      FALSE #> 85              661      15           15   FALSE      FALSE #> 86              433      14           14   FALSE      FALSE #> 87               75       3            3    TRUE       TRUE #> 88               NA       0            0   FALSE      FALSE #> 89              427       9            9   FALSE      FALSE #> 90              675       2            2    TRUE       TRUE #> 91              440      61           61   FALSE      FALSE #> 92               79       9            9   FALSE      FALSE #> 93               NA       0            0   FALSE      FALSE #> 94              441      32           32   FALSE      FALSE #> 95              689      20           20   FALSE      FALSE #> 96              482      35           35   FALSE      FALSE #> 97               88       4            4   FALSE      FALSE #> 98              142       2            2    TRUE       TRUE #> 99              477      18           18   FALSE      FALSE #> 100             700      11           11   FALSE       TRUE   num <- c(100,          90, 10,          80, 20,          70, 30,          50, 25, 25,          40, 20, 20, 20,          25, 25, 25, 25) v1 <- c(\"v1\",         rep(c(\"v2\", \"v3\", \"v4\"), each = 2),         rep(\"v5\", 3),         rep(c(\"v6\", \"v7\"), each = 4)) sw <- c(1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1) d <- data.frame(v1 = v1, num = num, sw = sw)  # without weights GaussSuppressionFromData(d, formula = ~v1 - 1,   numVar = \"num\",  n = c(1,2), k = c(80,70),   preAggregate = FALSE, allDominance = TRUE, candidates = CandidatesNum,   primary = DominanceRule) #> GaussSuppression_anySum: .. #>   v1 num dominant1 dominant2 max1contributor max2contributor n_contr #> 1 v1 100      1.00      1.00               1              NA       1 #> 2 v2 100      0.90      1.00               2               3       2 #> 3 v3 100      0.80      1.00               4               5       2 #> 4 v4 100      0.70      1.00               6               7       2 #> 5 v5 100      0.50      0.75               8               9       3 #> 6 v6 100      0.40      0.60              11              12       4 #> 7 v7 100      0.25      0.50              15              16       4 #>   n_non0_contr primary suppressed #> 1            1    TRUE       TRUE #> 2            2    TRUE       TRUE #> 3            2    TRUE       TRUE #> 4            2    TRUE       TRUE #> 5            3    TRUE       TRUE #> 6            4   FALSE       TRUE #> 7            4   FALSE       TRUE  # with weights, standard method GaussSuppressionFromData(d, formula = ~v1 - 1,  numVar = \"num\",  n = c(1,2), k = c(80,70), sWeightVar = \"sw\",  preAggregate = FALSE, allDominance = TRUE, candidates = CandidatesNum,  primary = DominanceRule) #> GaussSuppression_anySum: ...... #>   v1 num sw weighted.num dominant1 dominant2 max1contributor max2contributor #> 1 v1 100  1          100 1.0000000 1.0000000               1              NA #> 2 v2 100  3          190 0.4736842 0.5263158               2               3 #> 3 v3 100  3          180 0.4444444 0.5555556               4               5 #> 4 v4 100  3          170 0.4117647 0.5882353               6               7 #> 5 v5 100  4          150 0.3333333 0.5000000               8               9 #> 6 v6 100  5          140 0.2857143 0.4285714              11              12 #> 7 v7 100  5          125 0.2000000 0.4000000              15              16 #>   n_contr n_non0_contr primary suppressed #> 1       1            1    TRUE       TRUE #> 2       2            2   FALSE       TRUE #> 3       2            2   FALSE       TRUE #> 4       2            2   FALSE       TRUE #> 5       3            3   FALSE       TRUE #> 6       4            4   FALSE       TRUE #> 7       4            4   FALSE       TRUE  # with weights, tauargus method GaussSuppressionFromData(d, formula = ~v1 - 1,  numVar = \"num\",  n = c(1,2), k = c(80,70), sWeightVar = \"sw\",  preAggregate = FALSE, allDominance = TRUE, candidates = CandidatesNum,  primary = DominanceRule, domWeightMethod = \"tauargus\") #> GaussSuppression_anySum: ... #>   v1 num sw weighted.num dominant1 dominant2 max1contributor max2contributor #> 1 v1 100  1          100 1.0000000 1.0000000               1              NA #> 2 v2 100  3          190 0.4736842 0.9473684               2               3 #> 3 v3 100  3          180 0.4444444 0.8888889               4               5 #> 4 v4 100  3          170 0.4117647 0.8235294               6               7 #> 5 v5 100  4          150 0.3333333 0.6666667               8               9 #> 6 v6 100  5          140 0.2857143 0.5714286              11              12 #> 7 v7 100  5          125 0.2000000 0.4000000              15              16 #>   n_contr n_non0_contr primary suppressed #> 1       1            1    TRUE       TRUE #> 2       2            2    TRUE       TRUE #> 3       2            2    TRUE       TRUE #> 4       2            2    TRUE       TRUE #> 5       3            3   FALSE       TRUE #> 6       4            4   FALSE       TRUE #> 7       4            4   FALSE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MaxContribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Find major contributions to aggregates — MaxContribution","title":"Find major contributions to aggregates — MaxContribution","text":"Assuming aggregates calculated via dummy matrix z = t(x) %*% y, n largest contributions found (value index) aggregate.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MaxContribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find major contributions to aggregates — MaxContribution","text":"","code":"MaxContribution(   x,   y,   n = 1,   decreasing = TRUE,   index = FALSE,   groups = NULL,   return2 = FALSE )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MaxContribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find major contributions to aggregates — MaxContribution","text":"x (sparse) dummy matrix y Vector input values (contributors) n Number contributors found decreasing Ordering parameter. Smallest contributors found FALSE. index Indices y returned TRUE groups non-NULL, major contributions aggregation within groups. combined index = TRUE. missing group category excluded. return2 TRUE, two matrices returned, value id. latter contains indices group NULL otherwise character matrix groups.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MaxContribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find major contributions to aggregates — MaxContribution","text":"Matrix lagest contributions first column, second largest second column . Alternative output using parameters index return2.","code":""},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MaxContribution.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find major contributions to aggregates — MaxContribution","text":"Øyvind Langsrud","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/MaxContribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find major contributions to aggregates — MaxContribution","text":"","code":"library(SSBtools) #> Loading required package: Matrix  z <- SSBtoolsData(\"sprt_emp_withEU\") z$age[z$age == \"Y15-29\"] <- \"young\" z$age[z$age == \"Y30-64\"] <- \"old\"  a <- ModelMatrix(z, formula = ~age + geo, crossTable = TRUE)  cbind(as.data.frame(a$crossTable), MaxContribution(a$modelMatrix, z$ths_per, 1)) #>     age      geo MaxContribution(a$modelMatrix, z$ths_per, 1) #> 1 Total    Total                                        122.1 #> 2   old    Total                                        122.1 #> 3 young    Total                                         69.1 #> 4 Total  Iceland                                          1.9 #> 5 Total Portugal                                         25.8 #> 6 Total    Spain                                        122.1 cbind(a$crossTable, MaxContribution(a$modelMatrix, z$ths_per, 10)) #>     age      geo     1     2     3    4    5    6    7    8    9   10 #> 1 Total    Total 122.1 120.3 119.6 69.1 66.9 63.4 25.8 24.3 20.2 14.2 #> 2   old    Total 122.1 120.3 119.6 25.8 24.3 20.2  1.9  1.6  1.5   NA #> 3 young    Total  69.1  66.9  63.4 14.2 12.7 11.6  1.9  1.9  1.8   NA #> 4 Total  Iceland   1.9   1.9   1.9  1.8  1.6  1.5   NA   NA   NA   NA #> 5 Total Portugal  25.8  24.3  20.2 14.2 12.7 11.6   NA   NA   NA   NA #> 6 Total    Spain 122.1 120.3 119.6 69.1 66.9 63.4   NA   NA   NA   NA cbind(a$crossTable, MaxContribution(a$modelMatrix, z$ths_per, 10, index = TRUE)) #>     age      geo  1  2  3  4  5 6  7  8  9 10 #> 1 Total    Total 16  4 10 13  1 7 18 12  6  9 #> 2   old    Total 16  4 10 18 12 6 17 11  5 NA #> 3 young    Total 13  1  7  9 15 3  8 14  2 NA #> 4 Total  Iceland  8 14 17  2 11 5 NA NA NA NA #> 5 Total Portugal 18 12  6  9 15 3 NA NA NA NA #> 6 Total    Spain 16  4 10 13  1 7 NA NA NA NA  # Both types of output can be achieved with return2 = TRUE) identical(MaxContribution(a$modelMatrix, z$ths_per, 10, return2 = TRUE),           list(value =  MaxContribution(a$modelMatrix, z$ths_per, 10),                 id =  MaxContribution(a$modelMatrix, z$ths_per, 10, index = TRUE))) #> [1] FALSE  b <- ModelMatrix(z[, -4], crossTable = TRUE, inputInOutput = c(TRUE, FALSE, TRUE))  k <- cbind(b$crossTable, MaxContribution(b$modelMatrix, z$ths_per, 10))  gr18 <- paste0(\"g\", 1:18)                          # Each row is a group k18 <- cbind(b$crossTable, MaxContribution(b$modelMatrix, z$ths_per, 10, groups = gr18)) identical(k, k18) # TRUE #> [1] TRUE  gr9 <- paste0(\"g\", as.integer(10 * z$ths_per)%%10) # 9 groups from decimal k9 <- cbind(b$crossTable, MaxContribution(b$modelMatrix, z$ths_per, 10, groups = gr9))  k18[c(4, 13, 17, 33), ] #>      age   geo  year     1     2     3    4    5    6   7   8   9 10 #> 4  Total Total  2016 122.1  69.1  25.8 12.7  1.9  1.9  NA  NA  NA NA #> 13   old Total Total 122.1 120.3 119.6 25.8 24.3 20.2 1.9 1.6 1.5 NA #> 17   old    EU Total 122.1 120.3 119.6 25.8 24.3 20.2  NA  NA  NA NA #> 33 young nonEU Total   1.9   1.9   1.8   NA   NA   NA  NA  NA  NA NA k9[c(4, 13, 17, 33), ] #>      age   geo  year     1     2     3    4    5   6   7  8  9 10 #> 4  Total Total  2016 191.2  25.8  12.7  3.8   NA  NA  NA NA NA NA #> 13   old Total Total 144.6 122.1 121.2 25.8 20.2 1.9 1.5 NA NA NA #> 17   old    EU Total 144.6 122.1 119.6 25.8 20.2  NA  NA NA NA NA #> 33 young nonEU Total   3.8   1.8    NA   NA   NA  NA  NA NA NA NA  # Group info obtained with return2 = TRUE k9_id <- cbind(b$crossTable, MaxContribution(b$modelMatrix, z$ths_per, 10, groups = gr9,                                               return2 = TRUE)$id) k9_id[c(4, 13, 17, 33), ] #>      age   geo  year  1  2    3    4    5    6    7    8    9   10 #> 4  Total Total  2016 g1 g8   g7   g9 <NA> <NA> <NA> <NA> <NA> <NA> #> 13   old Total Total g3 g1   g6   g8   g2   g9   g5 <NA> <NA> <NA> #> 17   old    EU Total g3 g1   g6   g8   g2 <NA> <NA> <NA> <NA> <NA> #> 33 young nonEU Total g9 g8 <NA> <NA> <NA> <NA> <NA> <NA> <NA> <NA>   # Verify similarity z$y <- z$ths_per + (1:nrow(z))/100  # to avoid equal values id1 <- MaxContribution(b$modelMatrix, z$y, 10, index = TRUE) id1[!is.na(id1)] <- paste0(\"g\", id1[!is.na(id1)]) mc2 <- MaxContribution(b$modelMatrix, z$y, 10, groups = gr18, return2 = TRUE) id2 <- mc2$id identical(id1, id2) #> [1] TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NContributorsRule.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of contributors suppression rule — NContributorsRule","title":"Number of contributors suppression rule — NContributorsRule","text":"number contributors number unique contributing 'charVar' codes.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NContributorsRule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of contributors suppression rule — NContributorsRule","text":"","code":"NContributorsRule(   data,   freq,   numVar,   x,   maxN = 3,   protectZeros = FALSE,   charVar = NULL,   removeCodes = character(0),   remove0 = TRUE,   ... )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NContributorsRule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of contributors suppression rule — NContributorsRule","text":"data Input data data frame freq Vector aggregate frequencies numVar Numerical variables. several variables, first used. x Model matrix generated parent function maxN Primary suppression number contributors <= maxN. protectZeros Suppression parameter. TRUE (default) used implemented. charVar Variable(s) contributor codes. empty, unique contributor row assumed. several variables, see details. removeCodes Vector codes omitted counting contributors. empty charVar row indices assumed conversion integer performed. remove0 set TRUE (default), data rows first numVar () zero excluded count contributors. Alternatively, remove0 can specified one variable names. case, data rows zero specified variables omitted contributor count. Specifying remove0 variable name(s) useful avoiding warning multiple numVar variables. ... unused parameters","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NContributorsRule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of contributors suppression rule — NContributorsRule","text":"List first element logical vector defining primary suppressions. second element data frame nRule number contributors used rule nAll similar, without omitting codes removeCodes.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NContributorsRule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of contributors suppression rule — NContributorsRule","text":"several charVar variables, rule applied independently variable. Primary suppression least one case results  primary suppression output. possible specify maxN removeCodes independently charVar using named list input charVar names. E.g. maxN = list(char1 = 3, char2 = 2).","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/Ncontributors.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the number of unique groups contributing to aggregates — Ncontributors","title":"Find the number of unique groups contributing to aggregates — Ncontributors","text":"Assuming aggregates calculated via dummy matrix z = t(x) %*% y, number unique contributing groups, according grouping variable, found aggregate. missing group category counted.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/Ncontributors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the number of unique groups contributing to aggregates — Ncontributors","text":"","code":"Ncontributors(x, groups)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/Ncontributors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the number of unique groups contributing to aggregates — Ncontributors","text":"x (sparse) dummy matrix groups Vector group categories","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/Ncontributors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the number of unique groups contributing to aggregates — Ncontributors","text":"Vector numbers unique groups","code":""},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/Ncontributors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find the number of unique groups contributing to aggregates — Ncontributors","text":"Øyvind Langsrud","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/Ncontributors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the number of unique groups contributing to aggregates — Ncontributors","text":"","code":"library(SSBtools)  z <- SSBtoolsData(\"sprt_emp_withEU\") z$age[z$age == \"Y15-29\"] <- \"young\" z$age[z$age == \"Y30-64\"] <- \"old\" z$groups <- c(\"A\", \"A\", \"B\", \"A\", \"B\", \"C\")  a <- ModelMatrix(z, formula = ~age*eu + geo + year, crossTable = TRUE)  cbind(as.data.frame(a$crossTable), nGroups = Ncontributors(a$modelMatrix, z$groups)) #>      age      geo  year nGroups #> 1  Total    Total Total       3 #> 2    old    Total Total       3 #> 3  young    Total Total       2 #> 4  Total       EU Total       3 #> 5  Total    nonEU Total       2 #> 6  Total  Iceland Total       2 #> 7  Total Portugal Total       2 #> 8  Total    Spain Total       1 #> 9  Total    Total  2014       3 #> 10 Total    Total  2015       3 #> 11 Total    Total  2016       3 #> 12   old       EU Total       2 #> 13   old    nonEU Total       1 #> 14 young       EU Total       2 #> 15 young    nonEU Total       1 cbind(as.data.frame(a$crossTable), nYears = Ncontributors(a$modelMatrix, z$year)) #>      age      geo  year nYears #> 1  Total    Total Total      3 #> 2    old    Total Total      3 #> 3  young    Total Total      3 #> 4  Total       EU Total      3 #> 5  Total    nonEU Total      3 #> 6  Total  Iceland Total      3 #> 7  Total Portugal Total      3 #> 8  Total    Spain Total      3 #> 9  Total    Total  2014      1 #> 10 Total    Total  2015      1 #> 11 Total    Total  2016      1 #> 12   old       EU Total      3 #> 13   old    nonEU Total      3 #> 14 young       EU Total      3 #> 15 young    nonEU Total      3 cbind(as.data.frame(a$crossTable), nUnique_ths_per = Ncontributors(a$modelMatrix, z$ths_per)) #>      age      geo  year nUnique_ths_per #> 1  Total    Total Total              16 #> 2    old    Total Total               9 #> 3  young    Total Total               8 #> 4  Total       EU Total              12 #> 5  Total    nonEU Total               4 #> 6  Total  Iceland Total               4 #> 7  Total Portugal Total               6 #> 8  Total    Spain Total               6 #> 9  Total    Total  2014               6 #> 10 Total    Total  2015               6 #> 11 Total    Total  2016               5 #> 12   old       EU Total               6 #> 13   old    nonEU Total               3 #> 14 young       EU Total               6 #> 15 young    nonEU Total               2"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsHolding.html","id":null,"dir":"Reference","previous_headings":"","what":"Ncontributors with holding-indicator — NcontributorsHolding","title":"Ncontributors with holding-indicator — NcontributorsHolding","text":"aggregates (columns x) grouped holding indicator. Within holding group, number unique groups (output) set equal.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsHolding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ncontributors with holding-indicator — NcontributorsHolding","text":"","code":"NcontributorsHolding(x, groups, holdingInd = NULL)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsHolding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ncontributors with holding-indicator — NcontributorsHolding","text":"x (sparse) dummy matrix groups Vector group categories holdingInd Vector holding group categories","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsHolding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ncontributors with holding-indicator — NcontributorsHolding","text":"Vector numbers unique groups","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsHolding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ncontributors with holding-indicator — NcontributorsHolding","text":"representative within holding group used calculate output Ncontributors. one maximal column sum x chosen representative. Normally aggregate representing holding group total. holdingInd NULL (default), function equivalent Ncontributors.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsHolding.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ncontributors with holding-indicator — NcontributorsHolding","text":"Øyvind Langsrud","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsRule_identical.html","id":null,"dir":"Reference","previous_headings":"","what":"Identical to ´NContributorsRule´ — NcontributorsRule","title":"Identical to ´NContributorsRule´ — NcontributorsRule","text":"function included compatibility changing name NContributorsRule","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsRule_identical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identical to ´NContributorsRule´ — NcontributorsRule","text":"","code":"NcontributorsRule(   data,   freq,   numVar,   x,   maxN = 3,   protectZeros = FALSE,   charVar = NULL,   removeCodes = character(0),   remove0 = TRUE,   ... )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/NcontributorsRule_identical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identical to ´NContributorsRule´ — NcontributorsRule","text":"data Input data data frame freq Vector aggregate frequencies numVar Numerical variables. several variables, first used. x Model matrix generated parent function maxN Primary suppression number contributors <= maxN. protectZeros Suppression parameter. TRUE (default) used implemented. charVar Variable(s) contributor codes. empty, unique contributor row assumed. several variables, see details. removeCodes Vector codes omitted counting contributors. empty charVar row indices assumed conversion integer performed. remove0 set TRUE (default), data rows first numVar () zero excluded count contributors. Alternatively, remove0 can specified one variable names. case, data rows zero specified variables omitted contributor count. Specifying remove0 variable name(s) useful avoiding warning multiple numVar variables. ... unused parameters","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PackageSpecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for viewing built-in GaussSuppression specs — PackageSpecs","title":"Function for viewing built-in GaussSuppression specs — PackageSpecs","text":"Functions retrieve built-specs. can retrieved using either numerical indices specifying spec name, see Details.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PackageSpecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for viewing built-in GaussSuppression specs — PackageSpecs","text":"","code":"PackageSpecs(x = NULL, printTable = FALSE)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PackageSpecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for viewing built-in GaussSuppression specs — PackageSpecs","text":"x character name index spec returned. NULL (default), returns list specs printTable Logical value (default FALSE). TRUE, prints table description specs. Primarily used documentation purposes.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PackageSpecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for viewing built-in GaussSuppression specs — PackageSpecs","text":"returns spec (!.null(x)), list specs (.null(x) printTable = FALSE), markdown table describing specs (printTable = TRUE).","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PackageSpecs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for viewing built-in GaussSuppression specs — PackageSpecs","text":"following table summarizes built-specs. Columns represent different specs, rows represent parameter settings.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PackageSpecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for viewing built-in GaussSuppression specs — PackageSpecs","text":"","code":"PackageSpecs() #> $smallCountSpec #> list(primary = PrimaryDefault, protectZeros = TRUE, candidates = CandidatesDefault,  #>     singleton = SingletonDefault, extend0 = TRUE, preAggregate = is.null(freqVar),  #>     extraAggregate = FALSE, secondaryZeros = FALSE) #>  #> $dominanceSpec #> list(primary = MagnitudeRule, candidates = CandidatesNum, singleton = SingletonUniqueContributor,  #>     preAggregate = !is.null(charVar), extraAggregate = TRUE,  #>     domWeightMethod = \"default\", singletonMethod = \"numttHTT\",  #>     protectZeros = FALSE, extend0 = FALSE, secondaryZeros = FALSE) #>  #> $fewContributorsSpec #> list(primary = NContributorsRule, protectZeros = FALSE, extend0 = FALSE,  #>     preAggregate = !is.null(charVar), extraAggregate = TRUE,  #>     candidates = CandidatesNum, singleton = SingletonUniqueContributor,  #>     singletonMethod = \"numttHTT\", secondaryZeros = FALSE) #>  #> $kDisclosureSpec #> list(primary = KDisclosurePrimary, protectZeros = FALSE, secondaryZeros = 1,  #>     candidates = DirectDisclosureCandidates, extend0 = TRUE,  #>     singletonMethod = \"anySumNOTprimary\", singleton = SingletonDefault,  #>     preAggregate = is.null(freqVar), extraAggregate = FALSE) #>  PackageSpecs(1) #> list(primary = PrimaryDefault, protectZeros = TRUE, candidates = CandidatesDefault,  #>     singleton = SingletonDefault, extend0 = TRUE, preAggregate = is.null(freqVar),  #>     extraAggregate = FALSE, secondaryZeros = FALSE) PackageSpecs(\"smallCountSpec\") #> list(primary = PrimaryDefault, protectZeros = TRUE, candidates = CandidatesDefault,  #>     singleton = SingletonDefault, extend0 = TRUE, preAggregate = is.null(freqVar),  #>     extraAggregate = FALSE, secondaryZeros = FALSE) PackageSpecs(printTable = TRUE) #>  #>  #> |                         |\\strong{smallCountSpec} |\\strong{dominanceSpec}     |\\strong{fewContributorsSpec} |\\strong{kDisclosureSpec}   | #> |:------------------------|:-----------------------|:--------------------------|:----------------------------|:--------------------------| #> |\\strong{primary}         |PrimaryDefault          |MagnitudeRule              |NContributorsRule            |KDisclosurePrimary         | #> |\\strong{protectZeros}    |TRUE                    |FALSE                      |FALSE                        |FALSE                      | #> |\\strong{candidates}      |CandidatesDefault       |CandidatesNum              |CandidatesNum                |DirectDisclosureCandidates | #> |\\strong{singleton}       |SingletonDefault        |SingletonUniqueContributor |SingletonUniqueContributor   |SingletonDefault           | #> |\\strong{extend0}         |TRUE                    |FALSE                      |FALSE                        |TRUE                       | #> |\\strong{preAggregate}    |is.null(freqVar)        |!is.null(charVar)          |!is.null(charVar)            |is.null(freqVar)           | #> |\\strong{extraAggregate}  |FALSE                   |TRUE                       |TRUE                         |FALSE                      | #> |\\strong{secondaryZeros}  |FALSE                   |FALSE                      |FALSE                        |1                          | #> |\\strong{domWeightMethod} |                        |\"default\"                  |                             |                           | #> |\\strong{singletonMethod} |                        |\"numttHTT\"                 |\"numttHTT\"                   |\"anySumNOTprimary\"         |"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Default primary function — PrimaryDefault","title":"Default primary function — PrimaryDefault","text":"Function GaussSuppressionFromData","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default primary function — PrimaryDefault","text":"","code":"PrimaryDefault(freq, maxN = 3, protectZeros = TRUE, ...)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default primary function — PrimaryDefault","text":"freq Vector output frequencies maxN Cells frequency <= maxN set primary suppressed. protectZeros TRUE, cells zero frequency set primary suppressed. ... Unused parameters","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default primary function — PrimaryDefault","text":"primary, GaussSuppression input","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromRiskyDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Additional primary cells based on risky primary cells — PrimaryFromRiskyDefault","title":"Additional primary cells based on risky primary cells — PrimaryFromRiskyDefault","text":"algorithm uses parent-child relationships found model matrix (x)","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromRiskyDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additional primary cells based on risky primary cells — PrimaryFromRiskyDefault","text":"","code":"PrimaryFromRiskyDefault(x, y, risky, candidates, allDims = FALSE)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromRiskyDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Additional primary cells based on risky primary cells — PrimaryFromRiskyDefault","text":"x model matrix y vector numeric values length equal nrow(x) risky Indices columns x corresponding primary cells classified risky (interval limits reached) candidates Indices columns x candidates becoming additional primary cells. Higher order cells must included parent-child relationships seen. allDims TRUE, primary cell added dimension. can specified vector length  length(risky)","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromRiskyDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Additional primary cells based on risky primary cells — PrimaryFromRiskyDefault","text":"Additional primary cells indices columns x.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromRiskyDefault.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Additional primary cells based on risky primary cells — PrimaryFromRiskyDefault","text":"single risky cell,  algorithm can formulated : Consider cell child identify parents present candidates. Remove parents also parents parents (.e., eliminate higher-level parents). Identify children remaining parents included candidates. Select child smallest value numeric variable (y). several risky cells, coordination takes place. See comment examples.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromRiskyDefault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Additional primary cells based on risky primary cells — PrimaryFromRiskyDefault","text":"","code":"# Example inspired by suppression with maxN = 5 d1 <- SSBtoolsData(\"d1\") mm <- SSBtools::ModelMatrix(d1, dimVar = 1:2, crossTable = TRUE) x <- mm$modelMatrix y <- Matrix::crossprod(x, d1$freq)  risky <- c(13, 15, 40, 45) candidates <- c(1:12, 14, 16, 17, 19, 21, 21, 24, 26:37, 39, 42, 44)  info <- rep(\"\", length(y)) info[risky ] <- \"risky\" info[candidates] <- \"c\" cbind(mm$crossTable, y=as.vector(y), info) #>    region main_income   y  info #> 1   Total       Total 596     c #> 2   Total  assistance 283     c #> 3   Total       other  72     c #> 4   Total    pensions 189     c #> 5   Total       wages  52     c #> 6       A       Total 113     c #> 7       A  assistance  55     c #> 8       A       other  11     c #> 9       A    pensions  36     c #> 10      A       wages  11     c #> 11      B       Total  55     c #> 12      B  assistance  29     c #> 13      B       other   7 risky #> 14      B    pensions  18     c #> 15      B       wages   1 risky #> 16      C       Total  73     c #> 17      C  assistance  35     c #> 18      C       other   5       #> 19      C    pensions  25     c #> 20      C       wages   8       #> 21      D       Total  45     c #> 22      D  assistance  17       #> 23      D       other  13       #> 24      D    pensions  13     c #> 25      D       wages   2       #> 26      E       Total 138     c #> 27      E  assistance  63     c #> 28      E       other   9     c #> 29      E    pensions  52     c #> 30      E       wages  14     c #> 31      F       Total  67     c #> 32      F  assistance  24     c #> 33      F       other  12     c #> 34      F    pensions  22     c #> 35      F       wages   9     c #> 36      G       Total  40     c #> 37      G  assistance  22     c #> 38      G       other   6       #> 39      G    pensions   8     c #> 40      G       wages   4 risky #> 41      H       Total  65       #> 42      H  assistance  38     c #> 43      H       other   9       #> 44      H    pensions  15     c #> 45      H       wages   3 risky  PrimaryFromRiskyDefault(x = x, y = y, risky = risky, candidates = candidates) #> [1] 28 35 PrimaryFromRiskyDefault(x = x, y = y, risky = 40, candidates = candidates) #> [1] 39  # The last solution (39) is not included in the first (28, 35).  # This is because 39 is not needed when 35 is already included."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromSuppressedData.html","id":null,"dir":"Reference","previous_headings":"","what":"primary and forced from suppressed data — PrimaryFromSuppressedData","title":"primary and forced from suppressed data — PrimaryFromSuppressedData","text":"Function GaussSuppressionFromData","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromSuppressedData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"primary and forced from suppressed data — PrimaryFromSuppressedData","text":"","code":"PrimaryFromSuppressedData(   x,   crossTable,   suppressedData,   forcedData = FALSE,   totCode = FindTotCode2(x, crossTable),   ... )  ForcedFromSuppressedData(..., forcedData = TRUE)  NotPrimaryFromSuppressedData(..., forcedData = TRUE)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromSuppressedData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"primary and forced from suppressed data — PrimaryFromSuppressedData","text":"x (sparse) dummy matrix crossTable crossTable generated parent function suppressedData data frame list data frames output GaussSuppressionFromData. variable suppressed included, rows considered suppressed. forcedData TRUE, suppressed coding swapped. totCode named list totals codes ... Unused parameters","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromSuppressedData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"primary and forced from suppressed data — PrimaryFromSuppressedData","text":"Logical vector used GaussSuppression input","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromSuppressedData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"primary and forced from suppressed data — PrimaryFromSuppressedData","text":"ForcedFromSuppressedData  uses forcedData = TRUE hence  vector use forced generated. NotPrimaryFromSuppressedData similar, TRUE elements replaced NA's. Hence result can used extra primary vector ensure code combinations suppressed according suppressedData forced primary suppressed. variables used suppressedData addition \"suppressed\" matching names crossTable. Others ignored. variables crossTable suppressedData, totals considered. Others rows ignored mathing suppressedData. suppressedData list, final result union individual results data frame.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryFromSuppressedData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"primary and forced from suppressed data — PrimaryFromSuppressedData","text":"","code":"z2 <- SSBtoolsData(\"z2\")  # Data to be used as suppressedData a <- GaussSuppressionFromData(z2, c(1, 3, 4), 5, protectZeros = FALSE) #> GaussSuppression_anySum: ...............................  # For alternative ways to suppress the same table b1 <- GaussSuppressionFromData(z2, 1:4, 5) #> GaussSuppression_anySum: ............................ b2 <- GaussSuppressionFromData(z2, 1:4, 5, primary = c(PrimaryDefault, PrimaryFromSuppressedData),                                suppressedData = a) #> GaussSuppression_anySum: .......................... b3 <- GaussSuppressionFromData(z2, 1:4, 5, primary = c(PrimaryDefault, PrimaryFromSuppressedData),                                suppressedData = a, forced = ForcedFromSuppressedData) #> Warning: Primary suppression of forced cells ignored #> GaussSuppression_anySum #> Warning: Singleton marking of forced cells ignored (freq) #> : .......................... b4 <- GaussSuppressionFromData(z2, 1:4, 5,               primary = c(PrimaryDefault, PrimaryFromSuppressedData, NotPrimaryFromSuppressedData),                                suppressedData = a, forced = ForcedFromSuppressedData) #> GaussSuppression_anySum #> Warning: Singleton marking of forced cells ignored (freq) #> : ..........................  # Reducing data to rows mathing a b1r <- b1[SSBtools::Match(a[1:2], b1[1:2]), ] b2r <- b2[SSBtools::Match(a[1:2], b2[1:2]), ] b3r <- b3[SSBtools::Match(a[1:2], b3[1:2]), ] b4r <- b4[SSBtools::Match(a[1:2], b4[1:2]), ]   # Look at rows where new suppression is different from that in a    # Both TRUE and FALSE changed cbind(a, b1r)[b1r$suppressed != a$suppressed, c(1:5, 9:10)] #>    region hovedint ant primary suppressed primary.1 suppressed.1 #> 47      A    annet  11   FALSE      FALSE     FALSE         TRUE #> 48      A   arbeid  11   FALSE      FALSE     FALSE         TRUE #> 50      A    trygd  36   FALSE      FALSE     FALSE         TRUE #> 52      B    annet   7   FALSE       TRUE     FALSE        FALSE #> 55      B    trygd  18   FALSE      FALSE     FALSE         TRUE #> 57      C    annet   5   FALSE      FALSE     FALSE         TRUE #> 58      C   arbeid   8   FALSE      FALSE     FALSE         TRUE #> 77      G    annet   6   FALSE      FALSE     FALSE         TRUE #> 78      G   arbeid   4   FALSE      FALSE     FALSE         TRUE #> 88      I   arbeid   0   FALSE      FALSE      TRUE         TRUE #> 92      J    annet   9   FALSE      FALSE     FALSE         TRUE #> 93      J   arbeid   0   FALSE      FALSE      TRUE         TRUE #> 97      K    annet   4   FALSE      FALSE     FALSE         TRUE  # Only  FALSE changed to TRUE (suppression is preserved) cbind(a, b2r)[b2r$suppressed != a$suppressed, c(1:5, 9:10)] #>    region hovedint ant primary suppressed primary.1 suppressed.1 #> 47      A    annet  11   FALSE      FALSE     FALSE         TRUE #> 48      A   arbeid  11   FALSE      FALSE     FALSE         TRUE #> 50      A    trygd  36   FALSE      FALSE     FALSE         TRUE #> 55      B    trygd  18   FALSE      FALSE     FALSE         TRUE #> 57      C    annet   5   FALSE      FALSE     FALSE         TRUE #> 58      C   arbeid   8   FALSE      FALSE     FALSE         TRUE #> 77      G    annet   6   FALSE      FALSE     FALSE         TRUE #> 78      G   arbeid   4   FALSE      FALSE     FALSE         TRUE #> 88      I   arbeid   0   FALSE      FALSE      TRUE         TRUE #> 92      J    annet   9   FALSE      FALSE     FALSE         TRUE #> 93      J   arbeid   0   FALSE      FALSE      TRUE         TRUE  # Only change is due to new primary suppression rule (protectZeros = TRUE)  cbind(a, b3r)[b3r$suppressed != a$suppressed, c(1:5, 9:10)] #> [1] region     hovedint   ant        primary    suppressed primary.1  forced     #> <0 rows> (or 0-length row.names)  # No changes  cbind(a, b4r)[b4r$suppressed != a$suppressed, c(1:5, 9:10)] #> [1] region     hovedint   ant        primary    suppressed primary.1  forced     #> <0 rows> (or 0-length row.names)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryRemoveWg.html","id":null,"dir":"Reference","previous_headings":"","what":"Special functions for the avoidance of suppression — PrimaryRemoveWg","title":"Special functions for the avoidance of suppression — PrimaryRemoveWg","text":"SSBtools function WildcardGlobbing utilized","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryRemoveWg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Special functions for the avoidance of suppression — PrimaryRemoveWg","text":"","code":"PrimaryRemoveWg(wg = NULL, ..., crossTable)  CandidatesNumWg(wg = NULL, ..., crossTable)  ForcedWg(crossTable, wg = NULL, ...)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryRemoveWg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Special functions for the avoidance of suppression — PrimaryRemoveWg","text":"wg data.frame wildcard/globbing. parameter WildcardGlobbing ... unused parameters crossTable crossTable generated parent function","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryRemoveWg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Special functions for the avoidance of suppression — PrimaryRemoveWg","text":"logical vector row indices","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryRemoveWg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Special functions for the avoidance of suppression — PrimaryRemoveWg","text":"CandidatesNumWg generalization CandidatesNumWg","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/PrimaryRemoveWg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Special functions for the avoidance of suppression — PrimaryRemoveWg","text":"","code":"dataset <- SSBtoolsData(\"magnitude1\")  a1 <- SuppressDominantCells(data = dataset, numVar = \"value\",         dimVar = c(\"sector4\", \"geo\"), n = 1:2, k = c(77, 99)) #> [extraAggregate 20*3->10*4] Checking .... #> GaussSuppression_numttHTT: ............  a1 #>          sector4      geo value primary suppressed #> 1          Total    Total 462.3   FALSE      FALSE #> 2          Total  Iceland  37.1   FALSE      FALSE #> 3          Total Portugal 162.5   FALSE      FALSE #> 4          Total    Spain 262.7   FALSE      FALSE #> 5    Agriculture    Total 240.2   FALSE      FALSE #> 6    Agriculture  Iceland   0.0   FALSE      FALSE #> 7    Agriculture Portugal 100.4    TRUE       TRUE #> 8    Agriculture    Spain 139.8    TRUE       TRUE #> 9  Entertainment    Total 131.5   FALSE      FALSE #> 10 Entertainment  Iceland  16.8    TRUE       TRUE #> 11 Entertainment Portugal   9.4    TRUE       TRUE #> 12 Entertainment    Spain 105.3   FALSE       TRUE #> 13  Governmental    Total  32.8   FALSE      FALSE #> 14  Governmental  Iceland   0.0   FALSE      FALSE #> 15  Governmental Portugal  23.6    TRUE       TRUE #> 16  Governmental    Spain   9.2    TRUE       TRUE #> 17      Industry    Total  57.8   FALSE      FALSE #> 18      Industry  Iceland  20.3   FALSE       TRUE #> 19      Industry Portugal  29.1    TRUE       TRUE #> 20      Industry    Spain   8.4    TRUE       TRUE  wg <- data.frame(sector4 = \"Ind*\", geo = c(\"Ice????\", \"Portugal\")) wg #>   sector4      geo #> 1    Ind*  Ice???? #> 2    Ind* Portugal  # Industry:Portugal not primary, but suppressed a2 <- SuppressDominantCells(data = dataset, numVar = \"value\",         dimVar = c(\"sector4\", \"geo\"), n = 1:2, k = c(77, 99),         wg = wg, primary = c(DominanceRule, PrimaryRemoveWg)) #> [extraAggregate 20*3->10*4] Checking .... #> GaussSuppression_numttHTT: ............:  a2 #>          sector4      geo value primary suppressed #> 1          Total    Total 462.3   FALSE      FALSE #> 2          Total  Iceland  37.1   FALSE      FALSE #> 3          Total Portugal 162.5   FALSE      FALSE #> 4          Total    Spain 262.7   FALSE      FALSE #> 5    Agriculture    Total 240.2   FALSE      FALSE #> 6    Agriculture  Iceland   0.0   FALSE      FALSE #> 7    Agriculture Portugal 100.4    TRUE       TRUE #> 8    Agriculture    Spain 139.8    TRUE       TRUE #> 9  Entertainment    Total 131.5   FALSE      FALSE #> 10 Entertainment  Iceland  16.8    TRUE       TRUE #> 11 Entertainment Portugal   9.4    TRUE       TRUE #> 12 Entertainment    Spain 105.3   FALSE       TRUE #> 13  Governmental    Total  32.8   FALSE      FALSE #> 14  Governmental  Iceland   0.0   FALSE      FALSE #> 15  Governmental Portugal  23.6    TRUE       TRUE #> 16  Governmental    Spain   9.2    TRUE       TRUE #> 17      Industry    Total  57.8   FALSE      FALSE #> 18      Industry  Iceland  20.3   FALSE       TRUE #> 19      Industry Portugal  29.1   FALSE       TRUE #> 20      Industry    Spain   8.4    TRUE       TRUE  # Industry:Portugal not primary and not suppressed a3 <- SuppressDominantCells(data = dataset, numVar = \"value\",         dimVar = c(\"sector4\", \"geo\"), n = 1:2, k = c(77, 99),         wg = wg, primary = c(DominanceRule, PrimaryRemoveWg),         candidates = CandidatesNumWg) #> [extraAggregate 20*3->10*4] Checking .... #> GaussSuppression_numttHTT: ........::::: a3 #>          sector4      geo value primary suppressed #> 1          Total    Total 462.3   FALSE      FALSE #> 2          Total  Iceland  37.1   FALSE       TRUE #> 3          Total Portugal 162.5   FALSE       TRUE #> 4          Total    Spain 262.7   FALSE      FALSE #> 5    Agriculture    Total 240.2   FALSE      FALSE #> 6    Agriculture  Iceland   0.0   FALSE      FALSE #> 7    Agriculture Portugal 100.4    TRUE       TRUE #> 8    Agriculture    Spain 139.8    TRUE       TRUE #> 9  Entertainment    Total 131.5   FALSE      FALSE #> 10 Entertainment  Iceland  16.8    TRUE       TRUE #> 11 Entertainment Portugal   9.4    TRUE       TRUE #> 12 Entertainment    Spain 105.3   FALSE       TRUE #> 13  Governmental    Total  32.8   FALSE       TRUE #> 14  Governmental  Iceland   0.0   FALSE      FALSE #> 15  Governmental Portugal  23.6    TRUE       TRUE #> 16  Governmental    Spain   9.2    TRUE       TRUE #> 17      Industry    Total  57.8   FALSE       TRUE #> 18      Industry  Iceland  20.3   FALSE      FALSE #> 19      Industry Portugal  29.1   FALSE      FALSE #> 20      Industry    Spain   8.4    TRUE       TRUE  # Industry:Portugal primary, but not suppressed a4 <- SuppressDominantCells(data = dataset, numVar = \"value\",         dimVar = c(\"sector4\", \"geo\"), n = 1:2, k = c(77, 99),         wg = wg, forced = ForcedWg, whenPrimaryForced = message) #> [extraAggregate 20*3->10*4] Checking .... #> Primary suppression of forced cells ignored #> GaussSuppression_numttHTT: ........::::: a4 #>          sector4      geo value primary forced unsafe suppressed #> 1          Total    Total 462.3   FALSE  FALSE  FALSE      FALSE #> 2          Total  Iceland  37.1   FALSE  FALSE  FALSE       TRUE #> 3          Total Portugal 162.5   FALSE  FALSE  FALSE       TRUE #> 4          Total    Spain 262.7   FALSE  FALSE  FALSE      FALSE #> 5    Agriculture    Total 240.2   FALSE  FALSE  FALSE      FALSE #> 6    Agriculture  Iceland   0.0   FALSE  FALSE  FALSE      FALSE #> 7    Agriculture Portugal 100.4    TRUE  FALSE  FALSE       TRUE #> 8    Agriculture    Spain 139.8    TRUE  FALSE  FALSE       TRUE #> 9  Entertainment    Total 131.5   FALSE  FALSE  FALSE      FALSE #> 10 Entertainment  Iceland  16.8    TRUE  FALSE  FALSE       TRUE #> 11 Entertainment Portugal   9.4    TRUE  FALSE  FALSE       TRUE #> 12 Entertainment    Spain 105.3   FALSE  FALSE  FALSE       TRUE #> 13  Governmental    Total  32.8   FALSE  FALSE  FALSE       TRUE #> 14  Governmental  Iceland   0.0   FALSE  FALSE  FALSE      FALSE #> 15  Governmental Portugal  23.6    TRUE  FALSE  FALSE       TRUE #> 16  Governmental    Spain   9.2    TRUE  FALSE  FALSE       TRUE #> 17      Industry    Total  57.8   FALSE  FALSE  FALSE       TRUE #> 18      Industry  Iceland  20.3   FALSE   TRUE  FALSE      FALSE #> 19      Industry Portugal  29.1    TRUE   TRUE  FALSE      FALSE #> 20      Industry    Spain   8.4    TRUE  FALSE  FALSE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeLimitsDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Default range limit function — RangeLimitsDefault","title":"Default range limit function — RangeLimitsDefault","text":"Preliminary function","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeLimitsDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default range limit function — RangeLimitsDefault","text":"","code":"RangeLimitsDefault(   ...,   rangePercent = 0,   rangeMin = 0,   primary,   num,   freq,   freqVar,   dominanceVar = NULL,   intervalVar = NULL )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeLimitsDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default range limit function — RangeLimitsDefault","text":"... Unused parameters rangePercent Required interval width expressed percentage rangeMin Minimum required width interval primary primary num num freq freq freqVar freqVar dominanceVar dominanceVar intervalVar Numerical variable(s) interval calculations. NULL, dominanceVar, first numVar freqVar used.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeLimitsDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default range limit function — RangeLimitsDefault","text":"matrix named columns","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeLimitsDefault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default range limit function — RangeLimitsDefault","text":"","code":"dat <- SSBtoolsData(\"magnitude1\") dat[\"num2\"] <- 1:nrow(dat)  SuppressDominantCells(data = dat,      numVar = \"value\",      formula = ~sector2 * geo + sector4 * eu,      contributorVar = \"company\",      n = 1:2, k = c(80, 99),      output = RangeOutputFunction, rangePercent = 10, rangeMin = 1) #> [preAggregate 20*7->20*7] #> [extraAggregate 20*7->10*7] Checking ..... #> GaussSuppression_numttHTT: .........::::: #>         geo       sector4 freq value rlim_value primary suppressed #> 1     Total         Total   20 462.3         NA   FALSE      FALSE #> 2     Total       private   16 429.5         NA   FALSE      FALSE #> 3     Total        public    4  32.8         NA   FALSE      FALSE #> 4   Iceland         Total    4  37.1         NA   FALSE      FALSE #> 5  Portugal         Total    8 162.5         NA   FALSE      FALSE #> 6     Spain         Total    8 262.7         NA   FALSE      FALSE #> 7     Total   Agriculture    4 240.2      24.02    TRUE       TRUE #> 8     Total Entertainment    6 131.5         NA   FALSE      FALSE #> 9     Total  Governmental    4  32.8         NA   FALSE      FALSE #> 10    Total      Industry    6  57.8         NA   FALSE       TRUE #> 11       EU         Total   16 425.2         NA   FALSE      FALSE #> 12    nonEU         Total    4  37.1         NA   FALSE      FALSE #> 13  Iceland       private    4  37.1         NA   FALSE      FALSE #> 14 Portugal       private    6 138.9         NA   FALSE       TRUE #> 15    Spain       private    6 253.5         NA   FALSE       TRUE #> 16 Portugal        public    2  23.6       2.36    TRUE       TRUE #> 17    Spain        public    2   9.2       1.00    TRUE       TRUE #> 18       EU   Agriculture    4 240.2      24.02    TRUE       TRUE #> 19       EU Entertainment    5 114.7         NA   FALSE       TRUE #> 20    nonEU Entertainment    1  16.8       1.68    TRUE       TRUE #> 21       EU  Governmental    4  32.8         NA   FALSE      FALSE #> 22       EU      Industry    3  37.5         NA   FALSE       TRUE #> 23    nonEU      Industry    3  20.3         NA   FALSE       TRUE  SuppressDominantCells(data = dat,      numVar = c(\"value\", \"num2\"),      formula = ~sector2 * geo + sector4 * eu,      contributorVar = \"company\",      n = 1:2, k = c(80, 99),      output = RangeOutputFunction,      intervalVar = c(\"value\",\"freq\", \"num2\"),      rangePercent = c(10, 10, 30), rangeMin = c(1, 0.2222, 2.222)) #> [preAggregate 20*7->20*8] #> Warning: Multiple numVar were supplied, only the first is used in candidates function. #> Warning: Multiple numVar were supplied, only the first is suppressed. #> [extraAggregate 20*8->10*8] Checking ..... #> GaussSuppression_numttHTT: .........::::: #>         geo       sector4 freq value num2 rlim_value rlim_freq rlim_num2 #> 1     Total         Total   20 462.3  210         NA        NA        NA #> 2     Total       private   16 429.5  160         NA        NA        NA #> 3     Total        public    4  32.8   50         NA        NA        NA #> 4   Iceland         Total    4  37.1   53         NA        NA        NA #> 5  Portugal         Total    8 162.5   76         NA        NA        NA #> 6     Spain         Total    8 262.7   81         NA        NA        NA #> 7     Total   Agriculture    4 240.2   10      24.02    0.4000     3.000 #> 8     Total Entertainment    6 131.5   45         NA        NA        NA #> 9     Total  Governmental    4  32.8   50         NA        NA        NA #> 10    Total      Industry    6  57.8  105         NA        NA        NA #> 11       EU         Total   16 425.2  157         NA        NA        NA #> 12    nonEU         Total    4  37.1   53         NA        NA        NA #> 13  Iceland       private    4  37.1   53         NA        NA        NA #> 14 Portugal       private    6 138.9   53         NA        NA        NA #> 15    Spain       private    6 253.5   54         NA        NA        NA #> 16 Portugal        public    2  23.6   23       2.36    0.2222     6.900 #> 17    Spain        public    2   9.2   27       1.00    0.2222     8.100 #> 18       EU   Agriculture    4 240.2   10      24.02    0.4000     3.000 #> 19       EU Entertainment    5 114.7   40         NA        NA        NA #> 20    nonEU Entertainment    1  16.8    5       1.68    0.2222     2.222 #> 21       EU  Governmental    4  32.8   50         NA        NA        NA #> 22       EU      Industry    3  37.5   57         NA        NA        NA #> 23    nonEU      Industry    3  20.3   48         NA        NA        NA #>    primary suppressed #> 1    FALSE      FALSE #> 2    FALSE      FALSE #> 3    FALSE      FALSE #> 4    FALSE      FALSE #> 5    FALSE      FALSE #> 6    FALSE      FALSE #> 7     TRUE       TRUE #> 8    FALSE      FALSE #> 9    FALSE      FALSE #> 10   FALSE       TRUE #> 11   FALSE      FALSE #> 12   FALSE      FALSE #> 13   FALSE      FALSE #> 14   FALSE       TRUE #> 15   FALSE       TRUE #> 16    TRUE       TRUE #> 17    TRUE       TRUE #> 18    TRUE       TRUE #> 19   FALSE       TRUE #> 20    TRUE       TRUE #> 21   FALSE      FALSE #> 22   FALSE       TRUE #> 23   FALSE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeOutputFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Function used in RangeLimitsDefault example — RangeOutputFunction","title":"Function used in RangeLimitsDefault example — RangeOutputFunction","text":"Function used RangeLimitsDefault example","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeOutputFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function used in RangeLimitsDefault example — RangeOutputFunction","text":"","code":"RangeOutputFunction(...)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeOutputFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function used in RangeLimitsDefault example — RangeOutputFunction","text":"... parameters","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/RangeOutputFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function used in RangeLimitsDefault example — RangeOutputFunction","text":"Aggregated data suppression information","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Default singleton function — SingletonDefault","title":"Default singleton function — SingletonDefault","text":"Function GaussSuppressionFromData","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default singleton function — SingletonDefault","text":"","code":"SingletonDefault(data, freqVar, protectZeros, secondaryZeros, ...)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default singleton function — SingletonDefault","text":"data Input data, possibly pre-aggregated within GaussSuppressionFromData freqVar single variable holding counts (input GaussSuppressionFromData) protectZeros Suppression parameter (see GaussSuppressionFromData) secondaryZeros Suppression parameter (see GaussSuppressionFromData) ... Unused parameters","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default singleton function — SingletonDefault","text":"singleton, GaussSuppression input","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonDefault.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default singleton function — SingletonDefault","text":"function marks input cells singletons according input frequencies (freqVar). Zero frequencies set singletons protectZeros secondaryZeros TRUE. Otherwise, ones set singletons. Empty freqVar treated frequencies ones.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonUniqueContributor.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique contributor singleton function — SingletonUniqueContributor","title":"Unique contributor singleton function — SingletonUniqueContributor","text":"Function GaussSuppressionFromData","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonUniqueContributor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique contributor singleton function — SingletonUniqueContributor","text":"","code":"SingletonUniqueContributor(   data,   freqVar = NULL,   nUniqueVar = NULL,   charVar = NULL,   removeCodes = character(0),   integerSingleton = length(charVar) > 0,   x,   primary = integer(0),   whenPrimaryMatters = warning,   whenNoVar = TRUE,   specialMultiple = TRUE,   rowGroupsPackage = \"base\",   ... )  SingletonUniqueContributor0(data, numVar, dominanceVar = NULL, ...)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonUniqueContributor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique contributor singleton function — SingletonUniqueContributor","text":"data Input data, possibly pre-aggregated within GaussSuppressionFromData freqVar single variable holding counts (input GaussSuppressionFromData) nUniqueVar single variable holding number unique contributors. charVar Variable contributor codes. removeCodes Vector, list data frame codes considered non-singletons. Single element lists single column data frames behave just like vectors. cases, charVar-names must used. empty charVar vector row indices assumed conversion integer performed. See examples. integerSingleton Integer output TRUE. See details. x ModelMatrix generated parent function primary Vector (integer logical) specifying primary suppressed cells. ensured non-suppressed inner cell considered singleton. whenPrimaryMatters Function called primary caused non-singleton. Supply NULL nothing. whenNoVar TRUE, without nUniqueVar freqVar input, cells marked singletons. specialMultiple TRUE, integerSingleton & length(charVar) > 1 & length(nUniqueVar), special method used. re-coding single charVar re-calculating nUnique. unique (nUnique=1), uniqueness required single charvar. Otherwise, charvar combination must unique. rowGroupsPackage Parameter pkg RowGroups. ... Unused parameters numVar vector containing numeric values data set dominanceVar specified, dominanceVar used place numVar. Specifying dominanceVar beneficial avoiding warnings multiple numVar variables. Typically, dominanceVar one variables already included numVar.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonUniqueContributor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique contributor singleton function — SingletonUniqueContributor","text":"logical integer vector","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonUniqueContributor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unique contributor singleton function — SingletonUniqueContributor","text":"function marks input cells singletons according ones data[[nUniqueVar]], available, otherwise according data[[freqVar]]. output vector can logical integer. , integer, singletons given positive values. unique values represent unique values/combinations data[[charVar]].","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonUniqueContributor.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Unique contributor singleton function — SingletonUniqueContributor","text":"SingletonUniqueContributor0 special version produces singleton two-element list. See GaussSuppression SuppressDominantCells.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SingletonUniqueContributor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unique contributor singleton function — SingletonUniqueContributor","text":"","code":"S <- function(data, ...) {   cbind(data, singleton = SingletonUniqueContributor(data, ...)) } d2 <- SSBtoolsData(\"d2\") d <- d2[d2$freq < 5, ] d$nUnique <- round((5 - d$freq)/3) d$freq <- round(d$freq/2) d[7:8, 2:4] <- NA rownames(d) <- NULL  S(d, freqVar = \"freq\", integerSingleton = FALSE) #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1     FALSE #> 2       K     10     400       other    2       0     FALSE #> 3       B      4     300       wages    0       1     FALSE #> 4       D      5     300       wages    1       1      TRUE #> 5       G      8     300       wages    2       0     FALSE #> 6       H      8     300       wages    2       1     FALSE #> 7       I     NA      NA        <NA>    0       2     FALSE #> 8       J     NA      NA        <NA>    0       2     FALSE #> 9       K     10     400       wages    1       1      TRUE #> 10      I      1     400    pensions    1       1      TRUE S(d, freqVar = \"freq\", nUniqueVar = \"nUnique\", integerSingleton = TRUE, charVar = \"main_income\") #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1         1 #> 2       K     10     400       other    2       0         0 #> 3       B      4     300       wages    0       1         3 #> 4       D      5     300       wages    1       1         3 #> 5       G      8     300       wages    2       0         0 #> 6       H      8     300       wages    2       1         3 #> 7       I     NA      NA        <NA>    0       2         0 #> 8       J     NA      NA        <NA>    0       2         0 #> 9       K     10     400       wages    1       1         3 #> 10      I      1     400    pensions    1       1         2 S(d, nUniqueVar = \"nUnique\", integerSingleton = TRUE, charVar = c(\"main_income\", \"k_group\")) #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1         1 #> 2       K     10     400       other    2       0         1 #> 3       B      4     300       wages    0       1         3 #> 4       D      5     300       wages    1       1         3 #> 5       G      8     300       wages    2       0         3 #> 6       H      8     300       wages    2       1         3 #> 7       I     NA      NA        <NA>    0       2         0 #> 8       J     NA      NA        <NA>    0       2         0 #> 9       K     10     400       wages    1       1         3 #> 10      I      1     400    pensions    1       1         2 S(d, freqVar = \"freq\", nUniqueVar = \"nUnique\", integerSingleton = FALSE,    charVar = \"main_income\", removeCodes = \"other\") #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1     FALSE #> 2       K     10     400       other    2       0     FALSE #> 3       B      4     300       wages    0       1      TRUE #> 4       D      5     300       wages    1       1      TRUE #> 5       G      8     300       wages    2       0     FALSE #> 6       H      8     300       wages    2       1      TRUE #> 7       I     NA      NA        <NA>    0       2     FALSE #> 8       J     NA      NA        <NA>    0       2     FALSE #> 9       K     10     400       wages    1       1      TRUE #> 10      I      1     400    pensions    1       1      TRUE S(d, nUniqueVar = \"nUnique\", integerSingleton = FALSE, charVar = c(\"main_income\", \"k_group\"),    removeCodes = c(\"other\", \"400\")) #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1     FALSE #> 2       K     10     400       other    2       0     FALSE #> 3       B      4     300       wages    0       1      TRUE #> 4       D      5     300       wages    1       1      TRUE #> 5       G      8     300       wages    2       0     FALSE #> 6       H      8     300       wages    2       1      TRUE #> 7       I     NA      NA        <NA>    0       2     FALSE #> 8       J     NA      NA        <NA>    0       2     FALSE #> 9       K     10     400       wages    1       1     FALSE #> 10      I      1     400    pensions    1       1     FALSE S(d, nUniqueVar = \"nUnique\", integerSingleton = FALSE, charVar = c(\"main_income\", \"k_group\"),    removeCodes = data.frame(anyname = c(\"other\", \"400\"))) #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1     FALSE #> 2       K     10     400       other    2       0     FALSE #> 3       B      4     300       wages    0       1      TRUE #> 4       D      5     300       wages    1       1      TRUE #> 5       G      8     300       wages    2       0     FALSE #> 6       H      8     300       wages    2       1      TRUE #> 7       I     NA      NA        <NA>    0       2     FALSE #> 8       J     NA      NA        <NA>    0       2     FALSE #> 9       K     10     400       wages    1       1     FALSE #> 10      I      1     400    pensions    1       1     FALSE S(d, nUniqueVar = \"nUnique\", integerSingleton = FALSE, charVar = c(\"main_income\", \"k_group\"),    removeCodes = list(main_income = c(\"other\", \"pensions\"), k_group = \"300\")) #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1     FALSE #> 2       K     10     400       other    2       0     FALSE #> 3       B      4     300       wages    0       1     FALSE #> 4       D      5     300       wages    1       1     FALSE #> 5       G      8     300       wages    2       0     FALSE #> 6       H      8     300       wages    2       1     FALSE #> 7       I     NA      NA        <NA>    0       2     FALSE #> 8       J     NA      NA        <NA>    0       2     FALSE #> 9       K     10     400       wages    1       1      TRUE #> 10      I      1     400    pensions    1       1     FALSE S(d, nUniqueVar = \"nUnique\", integerSingleton = FALSE, charVar = c(\"main_income\", \"k_group\"),    removeCodes = data.frame(main_income = \"other\", k_group = \"400\")) #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1     FALSE #> 2       K     10     400       other    2       0     FALSE #> 3       B      4     300       wages    0       1      TRUE #> 4       D      5     300       wages    1       1      TRUE #> 5       G      8     300       wages    2       0     FALSE #> 6       H      8     300       wages    2       1      TRUE #> 7       I     NA      NA        <NA>    0       2     FALSE #> 8       J     NA      NA        <NA>    0       2     FALSE #> 9       K     10     400       wages    1       1      TRUE #> 10      I      1     400    pensions    1       1      TRUE S(d, nUniqueVar = \"nUnique\", integerSingleton = FALSE, removeCodes = 1:5) #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1     FALSE #> 2       K     10     400       other    2       0     FALSE #> 3       B      4     300       wages    0       1     FALSE #> 4       D      5     300       wages    1       1     FALSE #> 5       G      8     300       wages    2       0     FALSE #> 6       H      8     300       wages    2       1      TRUE #> 7       I     NA      NA        <NA>    0       2     FALSE #> 8       J     NA      NA        <NA>    0       2     FALSE #> 9       K     10     400       wages    1       1      TRUE #> 10      I      1     400    pensions    1       1      TRUE  x <- SSBtools::ModelMatrix(d, hierarchies = list(region = \"Total\")) which(Matrix::colSums(x) == 1) #> B D G H J  #> 2 3 4 5 7  which(Matrix::rowSums(x[, Matrix::colSums(x) == 1]) > 0) #> [1] 3 4 5 6 8 # columns 2, 3, 4, 5, 7 correspond to inner cells: rows 3, 4, 5, 6, 8  # with 2:4 not primary rows 3:5 are forced non-singleton S(d, freqVar = \"freq\", nUniqueVar = \"nUnique\", integerSingleton = FALSE, x = x, primary = 5:8) #> Warning: primary caused non-singleton #>    region county k_group main_income freq nUnique singleton #> 1       I      1     400       other    2       1      TRUE #> 2       K     10     400       other    2       0     FALSE #> 3       B      4     300       wages    0       1     FALSE #> 4       D      5     300       wages    1       1     FALSE #> 5       G      8     300       wages    2       0     FALSE #> 6       H      8     300       wages    2       1      TRUE #> 7       I     NA      NA        <NA>    0       2     FALSE #> 8       J     NA      NA        <NA>    0       2     FALSE #> 9       K     10     400       wages    1       1      TRUE #> 10      I      1     400    pensions    1       1      TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDirectDisclosure.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppression of directly-disclosive cells — SuppressDirectDisclosure","title":"Suppression of directly-disclosive cells — SuppressDirectDisclosure","text":"Function suppressing directly-disclosive cells frequency tables. method detects primary suppresses directly-disclosive cells FindDisclosiveCells function, applies secondary suppression using Gauss suppression (see GaussSuppressionFromData).","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDirectDisclosure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppression of directly-disclosive cells — SuppressDirectDisclosure","text":"","code":"SuppressDirectDisclosure(   data,   dimVar,   freqVar,   coalition = 1,   secondaryZeros = coalition,   candidates = DirectDisclosureCandidates,   ... )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDirectDisclosure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppression of directly-disclosive cells — SuppressDirectDisclosure","text":"data input data dimVar main dimensional variables output table freqVar variable containing frequency counts coalition numeric variable, parameter primary suppression. Default value 1. secondaryZeros logical numeric value secondary suppression. logical, converted resp numeric value (0 1). numeric, describes largest number prioritized zeroes secondary suppression. Default value equal coalition. candidates function parameter gauss suppression. ... optional parameters can passed primary suppression method. See FindDisclosiveCells details. case SuppressDirectDisclosure2, ... parameters GaussSuppressionFromData.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDirectDisclosure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppression of directly-disclosive cells — SuppressDirectDisclosure","text":"data.frame containing result suppression","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDirectDisclosure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suppression of directly-disclosive cells — SuppressDirectDisclosure","text":"SuppressDirectDisclosure support hierarchical data. SuppressDirectDisclosure2 , less general ways.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDirectDisclosure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Suppression of directly-disclosive cells — SuppressDirectDisclosure","text":"Daniel Lupp","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDirectDisclosure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppression of directly-disclosive cells — SuppressDirectDisclosure","text":"","code":"tex <- data.frame(v1 = rep(c('a', 'b', 'c'), times = 4),                   v2 = c('i','i', 'i','h','h','h','i','i','i','h','h','h'),                   v3 = c('y', 'y', 'y', 'y', 'y', 'y','z','z', 'z', 'z', 'z', 'z'),                   freq = c(0,0,5,0,2,3,1,0,3,1,1,2)) SuppressDirectDisclosure(tex, c(\"v1\", \"v2\", \"v3\"), \"freq\") #> GaussSuppression_anySumNOTprimary: ........................ #>       v1    v2    v3 freq v1-prikk v2-prikk v3-prikk primary suppressed #> 1  Total Total Total   18    FALSE    FALSE    FALSE   FALSE      FALSE #> 2  Total Total     y   10    FALSE    FALSE    FALSE   FALSE      FALSE #> 3  Total Total     z    8    FALSE    FALSE    FALSE   FALSE      FALSE #> 4  Total     h Total    9    FALSE    FALSE    FALSE   FALSE      FALSE #> 5  Total     h     y    5    FALSE    FALSE    FALSE   FALSE      FALSE #> 6  Total     h     z    4    FALSE    FALSE    FALSE   FALSE      FALSE #> 7  Total     i Total    9    FALSE    FALSE    FALSE   FALSE      FALSE #> 8  Total     i     y    5    FALSE    FALSE    FALSE   FALSE      FALSE #> 9  Total     i     z    4    FALSE    FALSE    FALSE   FALSE      FALSE #> 10     a Total Total    2    FALSE    FALSE    FALSE   FALSE      FALSE #> 11     a Total     y    0    FALSE    FALSE    FALSE   FALSE       TRUE #> 12     a Total     z    2    FALSE    FALSE     TRUE    TRUE       TRUE #> 13     a     h Total    1    FALSE     TRUE    FALSE    TRUE       TRUE #> 14     a     h     y    0    FALSE    FALSE    FALSE   FALSE      FALSE #> 15     a     h     z    1    FALSE     TRUE     TRUE    TRUE       TRUE #> 16     a     i Total    1    FALSE     TRUE    FALSE    TRUE       TRUE #> 17     a     i     y    0    FALSE    FALSE    FALSE   FALSE       TRUE #> 18     a     i     z    1    FALSE     TRUE     TRUE    TRUE       TRUE #> 19     b Total Total    3    FALSE    FALSE    FALSE   FALSE      FALSE #> 20     b Total     y    2    FALSE    FALSE     TRUE    TRUE       TRUE #> 21     b Total     z    1    FALSE    FALSE    FALSE   FALSE       TRUE #> 22     b     h Total    3    FALSE     TRUE    FALSE    TRUE       TRUE #> 23     b     h     y    2    FALSE     TRUE     TRUE    TRUE       TRUE #> 24     b     h     z    1    FALSE     TRUE    FALSE    TRUE       TRUE #> 25     b     i Total    0    FALSE    FALSE    FALSE   FALSE       TRUE #> 26     b     i     y    0    FALSE    FALSE    FALSE   FALSE      FALSE #> 27     b     i     z    0    FALSE    FALSE    FALSE   FALSE       TRUE #> 28     c Total Total   13    FALSE    FALSE    FALSE   FALSE      FALSE #> 29     c Total     y    8    FALSE    FALSE    FALSE   FALSE      FALSE #> 30     c Total     z    5    FALSE    FALSE    FALSE   FALSE      FALSE #> 31     c     h Total    5    FALSE    FALSE    FALSE   FALSE       TRUE #> 32     c     h     y    3    FALSE    FALSE    FALSE   FALSE       TRUE #> 33     c     h     z    2    FALSE    FALSE    FALSE   FALSE       TRUE #> 34     c     i Total    8     TRUE    FALSE    FALSE    TRUE       TRUE #> 35     c     i     y    5     TRUE    FALSE    FALSE    TRUE       TRUE #> 36     c     i     z    3     TRUE    FALSE    FALSE    TRUE       TRUE SuppressDirectDisclosure(tex, c(\"v1\", \"v2\", \"v3\"), \"freq\", coalition = 2, unknown.threshold = 10) #> GaussSuppression_anySumNOTprimary: ..................... #>       v1    v2    v3 freq v1-prikk v2-prikk v3-prikk primary suppressed #> 1  Total Total Total   18    FALSE    FALSE    FALSE   FALSE      FALSE #> 2  Total Total     y   10    FALSE    FALSE    FALSE   FALSE      FALSE #> 3  Total Total     z    8    FALSE    FALSE    FALSE   FALSE      FALSE #> 4  Total     h Total    9    FALSE    FALSE    FALSE   FALSE      FALSE #> 5  Total     h     y    5    FALSE    FALSE    FALSE   FALSE      FALSE #> 6  Total     h     z    4    FALSE    FALSE    FALSE   FALSE      FALSE #> 7  Total     i Total    9    FALSE    FALSE    FALSE   FALSE      FALSE #> 8  Total     i     y    5    FALSE    FALSE    FALSE   FALSE      FALSE #> 9  Total     i     z    4    FALSE    FALSE    FALSE   FALSE      FALSE #> 10     a Total Total    2    FALSE    FALSE    FALSE   FALSE      FALSE #> 11     a Total     y    0    FALSE    FALSE    FALSE   FALSE       TRUE #> 12     a Total     z    2    FALSE    FALSE     TRUE    TRUE       TRUE #> 13     a     h Total    1    FALSE     TRUE    FALSE    TRUE       TRUE #> 14     a     h     y    0    FALSE    FALSE    FALSE   FALSE      FALSE #> 15     a     h     z    1    FALSE     TRUE     TRUE    TRUE       TRUE #> 16     a     i Total    1    FALSE     TRUE    FALSE    TRUE       TRUE #> 17     a     i     y    0    FALSE    FALSE    FALSE   FALSE       TRUE #> 18     a     i     z    1    FALSE     TRUE     TRUE    TRUE       TRUE #> 19     b Total Total    3    FALSE    FALSE    FALSE   FALSE      FALSE #> 20     b Total     y    2    FALSE    FALSE     TRUE    TRUE       TRUE #> 21     b Total     z    1    FALSE    FALSE    FALSE   FALSE       TRUE #> 22     b     h Total    3    FALSE     TRUE    FALSE    TRUE       TRUE #> 23     b     h     y    2    FALSE     TRUE     TRUE    TRUE       TRUE #> 24     b     h     z    1    FALSE     TRUE    FALSE    TRUE       TRUE #> 25     b     i Total    0    FALSE    FALSE    FALSE   FALSE       TRUE #> 26     b     i     y    0    FALSE    FALSE    FALSE   FALSE      FALSE #> 27     b     i     z    0    FALSE    FALSE    FALSE   FALSE       TRUE #> 28     c Total Total   13    FALSE    FALSE    FALSE   FALSE      FALSE #> 29     c Total     y    8     TRUE    FALSE    FALSE    TRUE       TRUE #> 30     c Total     z    5    FALSE    FALSE    FALSE   FALSE       TRUE #> 31     c     h Total    5    FALSE    FALSE    FALSE   FALSE       TRUE #> 32     c     h     y    3     TRUE    FALSE     TRUE    TRUE       TRUE #> 33     c     h     z    2     TRUE    FALSE    FALSE    TRUE       TRUE #> 34     c     i Total    8     TRUE    FALSE    FALSE    TRUE       TRUE #> 35     c     i     y    5     TRUE    FALSE    FALSE    TRUE       TRUE #> 36     c     i     z    3     TRUE     TRUE    FALSE    TRUE       TRUE  z3 <- SSBtools::SSBtoolsData(\"z3\") a1 <- SuppressDirectDisclosure(z3, c(1, 4, 5), 7) #> GaussSuppression_anySumNOTprimary: ......................... b1 <- try(SuppressDirectDisclosure(z3, 1:6, 7)) #> Error in SuppressDirectDisclosure(z3, 1:6, 7) :  #>   Try SuppressKDisclosure? - Hierarchies have been detected. This method does not currently support hierarchical data."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDominantCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress magnitude tables using dominance (n,k) or p% rule for primary suppression. — SuppressDominantCells","title":"Suppress magnitude tables using dominance (n,k) or p% rule for primary suppression. — SuppressDominantCells","text":"function utilizes MagnitudeRule.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDominantCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress magnitude tables using dominance (n,k) or p% rule for primary suppression. — SuppressDominantCells","text":"","code":"SuppressDominantCells(   data,   n = 1:length(k),   k = NULL,   pPercent = NULL,   allDominance = FALSE,   dominanceVar = NULL,   numVar = NULL,   dimVar = NULL,   hierarchies = NULL,   formula = NULL,   contributorVar = NULL,   sWeightVar = NULL,   ...,   candidatesVar = NULL,   singletonZeros = FALSE,   preAggregate = !is.null(contributorVar) & is.null(sWeightVar),   spec = PackageSpecs(\"dominanceSpec\") )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDominantCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress magnitude tables using dominance (n,k) or p% rule for primary suppression. — SuppressDominantCells","text":"data Input data, typically data frame, tibble, data.table. data classic data frame, coerced one internally unless preAggregate TRUE aggregatePackage \"data.table\". n Parameter n dominance rule. Default 1:length(k). k Parameter k dominance rule. pPercent Parameter p% rule, non-NULL. Parameters n  k ignored. Technically, calculations performed internally n = 1:2. results intermediate calculations can viewed setting allDominance = TRUE. allDominance Logical. TRUE, additional information included output, described MagnitudeRule. dominanceVar Numerical variable used dominance rule. first numVar variable used specified. numVar Numerical variable aggregated. dominanceVar candidatesVar specified included numVar aggregated accordingly. dimVar main dimensional variables additional aggregating variables. parameter can  useful hierarchies formula unspecified. hierarchies List hierarchies, can converted AutoHierarchies. Thus, variables can also coded \"rowFactor\" \"\", correspond using categories data. formula model formula contributorVar Extra variables used grouping elements dominance rule. Typically, variable contains contributor IDs. sWeightVar Name variable represents sampling weights used dominance rule ... arguments passed supplied functions ModelMatrix (inputInOutput removeEmpty). candidatesVar Variable used candidate function prioritize cells publication thus suppression. specified, variable used dominance rule applied (see dominanceVar numVar). singletonZeros negative values occur, one can determine non-suppressed marginal cell value 0 underlying cells also value 0. use singletonZeros = TRUE intended prevent phenomenon causing suppressed cells revealable. zeros dominanceVar variable examined. Specifically, ordinary singleton method combined method actually designed frequency tables. approach also works magnitude tables SingletonUniqueContributor0 utilized. preAggregate Parameter GaussSuppressionFromData. Necessary include since specification spec take sWeightVar account. spec NULL named list arguments act default values.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDominantCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress magnitude tables using dominance (n,k) or p% rule for primary suppression. — SuppressDominantCells","text":"data frame containing aggregated data suppression information.","code":""},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressDominantCells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress magnitude tables using dominance (n,k) or p% rule for primary suppression. — SuppressDominantCells","text":"","code":"num <- c(100,          90, 10,          80, 20,          70, 30,          50, 25, 25,          40, 20, 20, 20,          25, 25, 25, 25) v1 <- c(\"v1\",         rep(c(\"v2\", \"v3\", \"v4\"), each = 2),         rep(\"v5\", 3),         rep(c(\"v6\", \"v7\"), each = 4)) sweight <- c(1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1) d <- data.frame(v1 = v1, num = num, sweight = sweight)  # basic use SuppressDominantCells(d, n = c(1,2), k = c(80,70), numVar = \"num\", formula = ~v1 -1) #> [extraAggregate 18*2->7*3] Checking .... #> GaussSuppression_numttHTT: .. #>   v1 num primary suppressed #> 1 v1 100    TRUE       TRUE #> 2 v2 100    TRUE       TRUE #> 3 v3 100    TRUE       TRUE #> 4 v4 100    TRUE       TRUE #> 5 v5 100    TRUE       TRUE #> 6 v6 100   FALSE      FALSE #> 7 v7 100   FALSE      FALSE SuppressDominantCells(d, k = c(80,70), numVar = \"num\", formula = ~v1 -1) # same as above #> [extraAggregate 18*2->7*3] Checking .... #> GaussSuppression_numttHTT: .. #>   v1 num primary suppressed #> 1 v1 100    TRUE       TRUE #> 2 v2 100    TRUE       TRUE #> 3 v3 100    TRUE       TRUE #> 4 v4 100    TRUE       TRUE #> 5 v5 100    TRUE       TRUE #> 6 v6 100   FALSE      FALSE #> 7 v7 100   FALSE      FALSE SuppressDominantCells(d, pPercent = 7, numVar = \"num\", formula = ~v1 -1)  #> [extraAggregate 18*2->7*3] Checking .... #> GaussSuppression_numttHTT: ... #>   v1 num primary suppressed #> 1 v1 100    TRUE       TRUE #> 2 v2 100    TRUE       TRUE #> 3 v3 100    TRUE       TRUE #> 4 v4 100    TRUE       TRUE #> 5 v5 100   FALSE      FALSE #> 6 v6 100   FALSE      FALSE #> 7 v7 100   FALSE      FALSE  # with weights SuppressDominantCells(d, n = c(1,2), k = c(80,70), numVar = \"num\", dimVar = \"v1\", sWeightVar = \"sweight\") #> [extraAggregate 18*3->7*3] Checking .... #> GaussSuppression_numttHTT: ....... #>      v1 num sweight weighted.num primary suppressed #> 1 Total 700      24         1055   FALSE      FALSE #> 2    v1 100       1          100    TRUE       TRUE #> 3    v2 100       3          190   FALSE      FALSE #> 4    v3 100       3          180   FALSE      FALSE #> 5    v4 100       3          170   FALSE       TRUE #> 6    v5 100       4          150   FALSE      FALSE #> 7    v6 100       5          140   FALSE      FALSE #> 8    v7 100       5          125   FALSE      FALSE  # overwriting some parameters in default spec SuppressDominantCells(d, n = c(1,2), k = c(80,70), numVar = \"num\", dimVar = \"v1\", sWeightVar = \"sweight\", domWeightMethod = \"tauargus\") #> [extraAggregate 18*3->7*3] Checking .... #> GaussSuppression_numttHTT: .... #>      v1 num sweight weighted.num primary suppressed #> 1 Total 700      24         1055   FALSE      FALSE #> 2    v1 100       1          100    TRUE       TRUE #> 3    v2 100       3          190    TRUE       TRUE #> 4    v3 100       3          180    TRUE       TRUE #> 5    v4 100       3          170    TRUE       TRUE #> 6    v5 100       4          150   FALSE      FALSE #> 7    v6 100       5          140   FALSE      FALSE #> 8    v7 100       5          125   FALSE      FALSE  # using dominance and few contributors rule together, see second example compared to first SuppressDominantCells(d, n = c(1,2), k = c(80,70), numVar = \"num\", formula = ~v1 -1, primary = c(DominanceRule, NContributorsRule), maxN = 3, allDominance = TRUE) #> [extraAggregate 18*2->7*3] Checking .... #> GaussSuppression_numttHTT: .. #>   v1 num dominant1 dominant2 max1contributor max2contributor n_contr #> 1 v1 100      1.00      1.00               1              NA       1 #> 2 v2 100      0.90      1.00               2               3       2 #> 3 v3 100      0.80      1.00               4               5       2 #> 4 v4 100      0.70      1.00               6               7       2 #> 5 v5 100      0.50      0.75               8               9       3 #> 6 v6 100      0.40      0.60              11              12       4 #> 7 v7 100      0.25      0.50              15              16       4 #>   n_non0_contr nRule nAll primary suppressed #> 1            1     1    1    TRUE       TRUE #> 2            2     2    2    TRUE       TRUE #> 3            2     2    2    TRUE       TRUE #> 4            2     2    2    TRUE       TRUE #> 5            3     3    3    TRUE       TRUE #> 6            4     4    4   FALSE      FALSE #> 7            4     4    4   FALSE      FALSE  SuppressDominantCells(d, n = c(1,2), k = c(80,70), numVar = \"num\", formula = ~v1 -1, primary = c(DominanceRule, NContributorsRule), maxN = 4, allDominance = TRUE) #> [extraAggregate 18*2->7*3] Checking .... #> GaussSuppression_numttHTT:  #>   v1 num dominant1 dominant2 max1contributor max2contributor n_contr #> 1 v1 100      1.00      1.00               1              NA       1 #> 2 v2 100      0.90      1.00               2               3       2 #> 3 v3 100      0.80      1.00               4               5       2 #> 4 v4 100      0.70      1.00               6               7       2 #> 5 v5 100      0.50      0.75               8               9       3 #> 6 v6 100      0.40      0.60              11              12       4 #> 7 v7 100      0.25      0.50              15              16       4 #>   n_non0_contr nRule nAll primary suppressed #> 1            1     1    1    TRUE       TRUE #> 2            2     2    2    TRUE       TRUE #> 3            2     2    2    TRUE       TRUE #> 4            2     2    2    TRUE       TRUE #> 5            3     3    3    TRUE       TRUE #> 6            4     4    4    TRUE       TRUE #> 7            4     4    4    TRUE       TRUE   d2 <- SSBtoolsData(\"d2\")[1:4]   # Data considered as microdata set.seed(123) d2$v <- rnorm(nrow(d2))^2  # Hierarchical region variables are detected automatically -> same output column SuppressDominantCells(data = d2, n = c(1, 2), k = c(70, 95), numVar = \"v\",                        dimVar = c(\"region\", \"county\", \"k_group\"), allDominance = TRUE) #> [extraAggregate 44*4->11*5] Checking .... #> GaussSuppression_numttHTT: .............. #>    region          v dominant1 dominant2 max1contributor max2contributor #> 1       1  3.1878024 0.3302228 0.5721194              23              34 #> 2      10 10.0786664 0.4667651 0.6256381              44              43 #> 3     300 27.3487153 0.1414174 0.2581709              18              16 #> 4       4  1.4198773 0.4753900 0.8495649              35              24 #> 5     400 10.9990663 0.4277063 0.5732848              44              43 #> 6       5  6.7724116 0.4200770 0.7788224              26               3 #> 7       6  7.2219335 0.4421335 0.8494272              16               6 #> 8       8  9.6670903 0.4000773 0.5656266              18               8 #> 9   Total 38.3477816 0.1226765 0.2235319              44              18 #> 10      A  2.2674025 0.4642692 0.8043581              23              34 #> 11      B  1.4198773 0.4753900 0.8495649              35              24 #> 12      C  3.3067218 0.7347372 0.8781498               3              36 #> 13      D  3.4656899 0.8208854 0.9100334              26              15 #> 14      E  3.9154941 0.8154931 0.9947520              16              27 #> 15      F  3.3064395 0.8896119 0.9645732               6              17 #> 16      G  5.5201407 0.7006312 0.9352912              18              29 #> 17      H  4.1469497 0.3859174 0.7650037               8              30 #> 18      I  0.9203999 0.5125673 0.7554309               9              20 #> 19      J  3.0271572 0.5289543 0.9056270              43              21 #> 20      K  7.0515092 0.6671437 0.8796339              44              11 #>    n_contr n_non0_contr primary suppressed #> 1        8            8   FALSE      FALSE #> 2        8            8   FALSE      FALSE #> 3       32           32   FALSE      FALSE #> 4        4            4   FALSE      FALSE #> 5       12           12   FALSE      FALSE #> 6        8            8   FALSE      FALSE #> 7        8            8   FALSE      FALSE #> 8        8            8   FALSE      FALSE #> 9       44           44   FALSE      FALSE #> 10       4            4   FALSE      FALSE #> 11       4            4   FALSE      FALSE #> 12       4            4    TRUE       TRUE #> 13       4            4    TRUE       TRUE #> 14       4            4    TRUE       TRUE #> 15       4            4    TRUE       TRUE #> 16       4            4    TRUE       TRUE #> 17       4            4   FALSE       TRUE #> 18       4            4   FALSE      FALSE #> 19       4            4   FALSE      FALSE #> 20       4            4   FALSE      FALSE  # Formula. Hierarchical variables still detected automatically. SuppressDominantCells(data = d2, n = c(1, 2), k = c(70, 95), numVar = \"v\",                        formula = ~main_income * k_group + region + county - k_group) #> [extraAggregate 44*5->44*6] Checking .... #> GaussSuppression_numttHTT: .:::::::::::::::::::: #>    main_income region          v primary suppressed #> 1        Total  Total 38.3477816   FALSE      FALSE #> 2   assistance  Total  9.4825828   FALSE      FALSE #> 3        other  Total  9.7414023   FALSE      FALSE #> 4     pensions  Total  9.3008137   FALSE      FALSE #> 5        wages  Total  9.8229828   FALSE      FALSE #> 6        Total      A  2.2674025   FALSE      FALSE #> 7        Total      B  1.4198773   FALSE      FALSE #> 8        Total      C  3.3067218    TRUE       TRUE #> 9        Total      D  3.4656899    TRUE       TRUE #> 10       Total      E  3.9154941    TRUE       TRUE #> 11       Total      F  3.3064395    TRUE       TRUE #> 12       Total      G  5.5201407    TRUE       TRUE #> 13       Total      H  4.1469497   FALSE       TRUE #> 14       Total      I  0.9203999   FALSE      FALSE #> 15       Total      J  3.0271572   FALSE      FALSE #> 16       Total      K  7.0515092   FALSE      FALSE #> 17       Total      1  3.1878024   FALSE      FALSE #> 18       Total      4  1.4198773   FALSE      FALSE #> 19       Total      5  6.7724116   FALSE      FALSE #> 20       Total      6  7.2219335   FALSE      FALSE #> 21       Total      8  9.6670903   FALSE      FALSE #> 22       Total     10 10.0786664   FALSE      FALSE #> 23  assistance    300  8.4123940   FALSE       TRUE #> 24  assistance    400  1.0701889    TRUE       TRUE #> 25       other    300  7.5726446   FALSE      FALSE #> 26       other    400  2.1687577   FALSE      FALSE #> 27    pensions    300  2.9519862   FALSE       TRUE #> 28    pensions    400  6.3488275    TRUE       TRUE #> 29       wages    300  8.4116906   FALSE       TRUE #> 30       wages    400  1.4112922    TRUE       TRUE  # With hierarchies created manually ml <- data.frame(levels = c(\"@\", \"@@\", \"@@@\", \"@@@\", \"@@@\", \"@@\"),          codes = c(\"Total\", \"not_assistance\", \"other\", \"pensions\", \"wages\", \"assistance\")) SuppressDominantCells(data = d2, n = c(1, 2), k = c(70, 95), numVar = \"v\",                        hierarchies = list(main_income = ml, k_group = \"Total_Norway\")) #> [extraAggregate 44*3->8*4] Checking .... #> GaussSuppression_numttHTT: ............... #>       main_income      k_group         v primary suppressed #> 1           Total Total_Norway 38.347782   FALSE      FALSE #> 2           Total          300 27.348715   FALSE      FALSE #> 3           Total          400 10.999066   FALSE      FALSE #> 4  not_assistance Total_Norway 28.865199   FALSE      FALSE #> 5  not_assistance          300 18.936321   FALSE       TRUE #> 6  not_assistance          400  9.928877   FALSE       TRUE #> 7      assistance Total_Norway  9.482583   FALSE      FALSE #> 8      assistance          300  8.412394   FALSE       TRUE #> 9      assistance          400  1.070189    TRUE       TRUE #> 10          other Total_Norway  9.741402   FALSE      FALSE #> 11          other          300  7.572645   FALSE      FALSE #> 12          other          400  2.168758   FALSE      FALSE #> 13       pensions Total_Norway  9.300814   FALSE      FALSE #> 14       pensions          300  2.951986   FALSE       TRUE #> 15       pensions          400  6.348828    TRUE       TRUE #> 16          wages Total_Norway  9.822983   FALSE      FALSE #> 17          wages          300  8.411691   FALSE       TRUE #> 18          wages          400  1.411292    TRUE       TRUE                        # With contributorVar and p% rule     SuppressDominantCells(data= SSBtoolsData(\"magnitude1\"),                        numVar = \"value\",                        dimVar= c(\"sector4\", \"geo\"),                        contributorVar = \"company\",                       pPercent = 10,                        allDominance = TRUE)                        #> [preAggregate 20*6->20*5] #> [extraAggregate 20*5->10*5] Checking ..... #> GaussSuppression_numttHTT: ......... #>          sector4      geo freq value dominant1 dominant2 max1contributor #> 1          Total    Total   20 462.3 0.5405581 0.8866537               A #> 2          Total  Iceland    4  37.1 0.7115903 0.9487871               B #> 3          Total Portugal    8 162.5 0.4855385 0.9526154               B #> 4          Total    Spain    8 262.7 0.6623525 0.8705748               A #> 5    Agriculture    Total    4 240.2 0.7181515 1.0000000               A #> 6    Agriculture  Iceland    0   0.0 0.0000000 0.0000000            <NA> #> 7    Agriculture Portugal    2 100.4 0.7559761 1.0000000               A #> 8    Agriculture    Spain    2 139.8 0.6909871 1.0000000               A #> 9  Entertainment    Total    6 131.5 0.5885932 0.8577947               A #> 10 Entertainment  Iceland    1  16.8 1.0000000 1.0000000               B #> 11 Entertainment Portugal    2   9.4 0.7553191 1.0000000               B #> 12 Entertainment    Spain    3 105.3 0.7350427 0.8907882               A #> 13  Governmental    Total    4  32.8 0.6585366 0.8567073               B #> 14  Governmental  Iceland    0   0.0 0.0000000 0.0000000            <NA> #> 15  Governmental Portugal    2  23.6 0.9152542 1.0000000               B #> 16  Governmental    Spain    2   9.2 0.7065217 1.0000000               C #> 17      Industry    Total    6  57.8 0.6107266 0.9083045               B #> 18      Industry  Iceland    3  20.3 0.4729064 0.9064039               B #> 19      Industry Portugal    2  29.1 0.8831615 1.0000000               B #> 20      Industry    Spain    1   8.4 1.0000000 1.0000000               C #>    max2contributor n_contr n_non0_contr primary suppressed #> 1                B       4            4   FALSE      FALSE #> 2                C       3            3    TRUE       TRUE #> 3                A       3            3    TRUE       TRUE #> 4                B       4            4   FALSE      FALSE #> 5                B       2            2    TRUE       TRUE #> 6             <NA>       0            0   FALSE      FALSE #> 7                B       2            2    TRUE       TRUE #> 8                B       2            2    TRUE       TRUE #> 9                B       4            4   FALSE      FALSE #> 10            <NA>       1            1    TRUE       TRUE #> 11               D       2            2    TRUE       TRUE #> 12               C       3            3   FALSE       TRUE #> 13               C       3            3   FALSE       TRUE #> 14            <NA>       0            0   FALSE      FALSE #> 15               D       2            2    TRUE       TRUE #> 16               D       2            2    TRUE       TRUE #> 17               C       3            3   FALSE      FALSE #> 18               C       3            3   FALSE       TRUE #> 19               D       2            2    TRUE       TRUE #> 20            <NA>       1            1    TRUE       TRUE                                               # Using formula followed by FormulaSelection                         output <- SuppressDominantCells(data = SSBtoolsData(\"magnitude1\"),                                  numVar = \"value\",                                  formula = ~sector2 * geo + sector4 * eu,                                  contributorVar = \"company\",                                  k = c(80, 99)) #> [preAggregate 20*6->20*7] #> [extraAggregate 20*7->10*7] Checking ..... #> GaussSuppression_numttHTT: .........::::: FormulaSelection(output, ~sector2 * geo)  #>         geo sector4 freq value primary suppressed #> 1     Total   Total   20 462.3   FALSE      FALSE #> 2     Total private   16 429.5   FALSE      FALSE #> 3     Total  public    4  32.8   FALSE      FALSE #> 4   Iceland   Total    4  37.1   FALSE      FALSE #> 5  Portugal   Total    8 162.5   FALSE      FALSE #> 6     Spain   Total    8 262.7   FALSE      FALSE #> 13  Iceland private    4  37.1   FALSE      FALSE #> 14 Portugal private    6 138.9   FALSE       TRUE #> 15    Spain private    6 253.5   FALSE       TRUE #> 16 Portugal  public    2  23.6    TRUE       TRUE #> 17    Spain  public    2   9.2    TRUE       TRUE                                               # This example is similar to the one in the documentation of tables_by_formulas,   # but it uses SuppressDominantCells with the pPercent and contributorVar parameters.   tables_by_formulas(SSBtoolsData(\"magnitude1\"),                    table_fun = SuppressDominantCells,                     table_formulas = list(table_1 = ~region * sector2,                                           table_2 = ~region1:sector4 - 1,                                           table_3 = ~region + sector4 - 1),                     substitute_vars = list(region = c(\"geo\", \"eu\"), region1 = \"eu\"),                     collapse_vars = list(sector = c(\"sector2\", \"sector4\")),                     dominanceVar  = \"value\", pPercent = 10, contributorVar = \"company\")                        #> [preAggregate 20*6->20*7] #> [extraAggregate 20*7->10*7] Checking ..... #> GaussSuppression_numttHTT: ........:::: #>      region        sector freq value primary suppressed table_1 table_2 table_3 #> 1     Total         Total   20 462.3   FALSE      FALSE    TRUE   FALSE   FALSE #> 2   Iceland         Total    4  37.1    TRUE       TRUE    TRUE   FALSE    TRUE #> 3  Portugal         Total    8 162.5    TRUE       TRUE    TRUE   FALSE    TRUE #> 4     Spain         Total    8 262.7   FALSE      FALSE    TRUE   FALSE    TRUE #> 5        EU         Total   16 425.2   FALSE       TRUE    TRUE   FALSE    TRUE #> 6     nonEU         Total    4  37.1    TRUE       TRUE    TRUE   FALSE    TRUE #> 7     Total       private   16 429.5   FALSE      FALSE    TRUE   FALSE   FALSE #> 8     Total        public    4  32.8   FALSE      FALSE    TRUE   FALSE   FALSE #> 9     Total   Agriculture    4 240.2    TRUE       TRUE   FALSE   FALSE    TRUE #> 10    Total Entertainment    6 131.5   FALSE      FALSE   FALSE   FALSE    TRUE #> 11    Total  Governmental    4  32.8   FALSE      FALSE   FALSE   FALSE    TRUE #> 12    Total      Industry    6  57.8   FALSE       TRUE   FALSE   FALSE    TRUE #> 13  Iceland       private    4  37.1    TRUE       TRUE    TRUE   FALSE   FALSE #> 14 Portugal       private    6 138.9    TRUE       TRUE    TRUE   FALSE   FALSE #> 15 Portugal        public    2  23.6    TRUE       TRUE    TRUE   FALSE   FALSE #> 16    Spain       private    6 253.5   FALSE       TRUE    TRUE   FALSE   FALSE #> 17    Spain        public    2   9.2    TRUE       TRUE    TRUE   FALSE   FALSE #> 18       EU       private   12 392.4   FALSE       TRUE    TRUE   FALSE   FALSE #> 19       EU        public    4  32.8   FALSE      FALSE    TRUE   FALSE   FALSE #> 20    nonEU       private    4  37.1    TRUE       TRUE    TRUE   FALSE   FALSE #> 21       EU   Agriculture    4 240.2    TRUE       TRUE   FALSE    TRUE   FALSE #> 22       EU Entertainment    5 114.7   FALSE       TRUE   FALSE    TRUE   FALSE #> 23       EU  Governmental    4  32.8   FALSE      FALSE   FALSE    TRUE   FALSE #> 24       EU      Industry    3  37.5   FALSE      FALSE   FALSE    TRUE   FALSE #> 25    nonEU Entertainment    1  16.8    TRUE       TRUE   FALSE    TRUE   FALSE #> 26    nonEU      Industry    3  20.3   FALSE       TRUE   FALSE    TRUE   FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressFewContributors.html","id":null,"dir":"Reference","previous_headings":"","what":"Few contributors suppression — SuppressFewContributors","title":"Few contributors suppression — SuppressFewContributors","text":"function provides functionality suppressing magnitude tables based contributors rule (NContributorsRule).","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressFewContributors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Few contributors suppression — SuppressFewContributors","text":"","code":"SuppressFewContributors(   data,   maxN,   numVar = NULL,   dimVar = NULL,   hierarchies = NULL,   formula = NULL,   contributorVar = NULL,   removeCodes = character(0),   remove0 = TRUE,   candidatesVar = NULL,   ...,   spec = PackageSpecs(\"fewContributorsSpec\") )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressFewContributors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Few contributors suppression — SuppressFewContributors","text":"data Input data, typically data frame, tibble, data.table. data classic data frame, coerced one internally unless preAggregate TRUE aggregatePackage \"data.table\". maxN Suppression parameter. Cells frequency <= maxN set primary suppressed. Using default primary function, maxN default set 3. See details. numVar Numerical variable aggregated. candidatesVar specified included numVar aggregated accordingly. Additionally, remove0 specified variable name included numVar, also aggregated accordingly. See parameters candidatesVar remove0 . dimVar main dimensional variables additional aggregating variables. parameter can  useful hierarchies formula unspecified. hierarchies List hierarchies, can converted AutoHierarchies. Thus, variables can also coded \"rowFactor\" \"\", correspond using categories data. formula model formula contributorVar Extra variables used grouping elements counting contributors. Typically, variable contains contributor IDs. removeCodes Vector codes omitted counting contributors. empty contributorVar row indices assumed conversion integer performed. remove0 set TRUE (default), data rows first numVar () zero excluded count contributors. Alternatively, remove0 can specified one variable names. case, data rows zero specified variables omitted contributor count. Specifying remove0 variable name(s) useful avoiding warning multiple numVar variables. candidatesVar Variable used candidate function prioritize cells publication thus suppression. first numVar variable used specified. ... arguments passed supplied functions ModelMatrix (inputInOutput removeEmpty). spec NULL named list arguments act default values.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressFewContributors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Few contributors suppression — SuppressFewContributors","text":"data.frame containing aggregated data supppression information. Columns nRule nAll contain number contributors. former, removeCodes taken account.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressFewContributors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Few contributors suppression — SuppressFewContributors","text":"","code":"num <- c(100,          90, 10,          80, 20,          70, 30,          50, 25, 25,          40, 20, 20, 20,          25, 25, 25, 25) v1 <- c(\"v1\",         rep(c(\"v2\", \"v3\", \"v4\"), each = 2),         rep(\"v5\", 3),         rep(c(\"v6\", \"v7\"), each = 4)) sweight <- c(1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1) d <- data.frame(v1 = v1, num = num, sweight = sweight)  SuppressFewContributors(d, formula = ~v1, maxN = 1, numVar = \"num\") #> [extraAggregate 18*2->7*3] Checking .... #> GaussSuppression_numttHTT: ....... #>      v1 num nRule nAll primary suppressed #> 1 Total 700    18   18   FALSE      FALSE #> 2    v1 100     1    1    TRUE       TRUE #> 3    v2 100     2    2   FALSE      FALSE #> 4    v3 100     2    2   FALSE      FALSE #> 5    v4 100     2    2   FALSE       TRUE #> 6    v5 100     3    3   FALSE      FALSE #> 7    v6 100     4    4   FALSE      FALSE #> 8    v7 100     4    4   FALSE      FALSE SuppressFewContributors(d, formula = ~v1, maxN = 2, numVar = \"num\") #> [extraAggregate 18*2->7*3] Checking .... #> GaussSuppression_numttHTT: .... #>      v1 num nRule nAll primary suppressed #> 1 Total 700    18   18   FALSE      FALSE #> 2    v1 100     1    1    TRUE       TRUE #> 3    v2 100     2    2    TRUE       TRUE #> 4    v3 100     2    2    TRUE       TRUE #> 5    v4 100     2    2    TRUE       TRUE #> 6    v5 100     3    3   FALSE      FALSE #> 7    v6 100     4    4   FALSE      FALSE #> 8    v7 100     4    4   FALSE      FALSE SuppressFewContributors(d, formula = ~v1, maxN = 3, numVar = \"num\") #> [extraAggregate 18*2->7*3] Checking .... #> GaussSuppression_numttHTT: ... #>      v1 num nRule nAll primary suppressed #> 1 Total 700    18   18   FALSE      FALSE #> 2    v1 100     1    1    TRUE       TRUE #> 3    v2 100     2    2    TRUE       TRUE #> 4    v3 100     2    2    TRUE       TRUE #> 5    v4 100     2    2    TRUE       TRUE #> 6    v5 100     3    3    TRUE       TRUE #> 7    v6 100     4    4   FALSE      FALSE #> 8    v7 100     4    4   FALSE      FALSE   d2 <- SSBtoolsData(\"d2\")[-5] set.seed(123) d2$v <- round(rnorm(nrow(d2))^2, 1) d2$family_id <- round(2*as.integer(factor(d2$region)) + runif(nrow(d2)))  # Hierarchical region variables are detected automatically -> same output column SuppressFewContributors(data = d2, maxN = 2, numVar = \"v\", contributorVar = \"family_id\",                       dimVar = c(\"region\", \"county\", \"k_group\")) #> [preAggregate 44*6->20*6] #> [extraAggregate 20*6->11*6] Checking ..... #> GaussSuppression_numttHTT: ....:::: #>    region freq    v nRule nAll primary suppressed #> 1       1    8  3.2     3    3   FALSE       TRUE #> 2      10    8 10.0     4    4   FALSE       TRUE #> 3     300   32 27.3    14   14   FALSE      FALSE #> 4       4    4  1.5     2    2    TRUE       TRUE #> 5     400   12 10.9     5    5   FALSE      FALSE #> 6       5    8  6.7     3    3   FALSE       TRUE #> 7       6    8  7.1     3    3   FALSE      FALSE #> 8       8    8  9.7     4    4   FALSE      FALSE #> 9   Total   44 38.2    19   19   FALSE      FALSE #> 10      A    4  2.3     2    2    TRUE       TRUE #> 11      B    4  1.5     2    2    TRUE       TRUE #> 12      C    4  3.3     1    1    TRUE       TRUE #> 13      D    4  3.4     2    2    TRUE       TRUE #> 14      E    4  3.9     1    1    TRUE       TRUE #> 15      F    4  3.2     2    2    TRUE       TRUE #> 16      G    4  5.5     2    2    TRUE       TRUE #> 17      H    4  4.2     2    2    TRUE       TRUE #> 18      I    4  0.9     1    1    TRUE       TRUE #> 19      J    4  3.0     2    2    TRUE       TRUE #> 20      K    4  7.0     2    2    TRUE       TRUE  # Formula. Hierarchical variables still detected automatically. # And codes 1:9 not counted  SuppressFewContributors(data = d2, maxN = 1, numVar = \"v\", contributorVar = \"family_id\",                       formula = ~main_income * k_group + region + county - k_group,                       removeCodes = 1:9) #> [preAggregate 44*6->44*7] #> [extraAggregate 44*7->44*7] Checking ..... #> GaussSuppression_numttHTT: .......::::::::::::::::::: #>    main_income region freq    v nRule nAll primary suppressed #> 1        Total  Total   44 38.2    12   19   FALSE      FALSE #> 2   assistance  Total   11  9.5     6   10   FALSE      FALSE #> 3        other  Total   11  9.7     6    9   FALSE      FALSE #> 4     pensions  Total   11  9.3     5    9   FALSE      FALSE #> 5        wages  Total   11  9.7     6    9   FALSE      FALSE #> 6        Total      A    4  2.3     0    2   FALSE       TRUE #> 7        Total      B    4  1.5     0    2   FALSE      FALSE #> 8        Total      C    4  3.3     0    1   FALSE      FALSE #> 9        Total      D    4  3.4     0    2   FALSE      FALSE #> 10       Total      E    4  3.9     1    1    TRUE       TRUE #> 11       Total      F    4  3.2     2    2   FALSE       TRUE #> 12       Total      G    4  5.5     2    2   FALSE       TRUE #> 13       Total      H    4  4.2     2    2   FALSE       TRUE #> 14       Total      I    4  0.9     1    1    TRUE       TRUE #> 15       Total      J    4  3.0     2    2   FALSE       TRUE #> 16       Total      K    4  7.0     2    2   FALSE       TRUE #> 17       Total      1    8  3.2     1    3    TRUE       TRUE #> 18       Total      4    4  1.5     0    2   FALSE      FALSE #> 19       Total      5    8  6.7     0    3   FALSE      FALSE #> 20       Total      6    8  7.1     3    3   FALSE       TRUE #> 21       Total      8    8  9.7     4    4   FALSE      FALSE #> 22       Total     10    8 10.0     4    4   FALSE      FALSE #> 23  assistance    300    8  8.4     3    7   FALSE      FALSE #> 24  assistance    400    3  1.1     3    3   FALSE      FALSE #> 25       other    300    8  7.5     3    6   FALSE      FALSE #> 26       other    400    3  2.2     3    3   FALSE      FALSE #> 27    pensions    300    8  3.0     3    7   FALSE       TRUE #> 28    pensions    400    3  6.3     2    2   FALSE       TRUE #> 29       wages    300    8  8.4     4    7   FALSE      FALSE #> 30       wages    400    3  1.3     2    2   FALSE      FALSE  # With hierarchies created manually ml <- data.frame(levels = c(\"@\", \"@@\", \"@@@\", \"@@@\", \"@@@\", \"@@\"),          codes = c(\"Total\", \"not_assistance\", \"other\", \"pensions\", \"wages\", \"assistance\")) SuppressFewContributors(data = d2, maxN = 2, numVar = \"v\", contributorVar = \"family_id\",                       hierarchies = list(main_income = ml, k_group = \"Total_Norway\")) #> [preAggregate 44*6->44*5] #> [extraAggregate 44*5->8*5] Checking ..... #> GaussSuppression_numttHTT: ................ #>       main_income      k_group freq    v nRule nAll primary suppressed #> 1           Total Total_Norway   44 38.2    19   19   FALSE      FALSE #> 2           Total          300   32 27.3    14   14   FALSE      FALSE #> 3           Total          400   12 10.9     5    5   FALSE      FALSE #> 4  not_assistance Total_Norway   33 28.7    18   18   FALSE      FALSE #> 5  not_assistance          300   24 18.9    13   13   FALSE      FALSE #> 6  not_assistance          400    9  9.8     5    5   FALSE      FALSE #> 7      assistance Total_Norway   11  9.5    10   10   FALSE      FALSE #> 8      assistance          300    8  8.4     7    7   FALSE      FALSE #> 9      assistance          400    3  1.1     3    3   FALSE      FALSE #> 10          other Total_Norway   11  9.7     9    9   FALSE      FALSE #> 11          other          300    8  7.5     6    6   FALSE      FALSE #> 12          other          400    3  2.2     3    3   FALSE      FALSE #> 13       pensions Total_Norway   11  9.3     9    9   FALSE      FALSE #> 14       pensions          300    8  3.0     7    7   FALSE       TRUE #> 15       pensions          400    3  6.3     2    2    TRUE       TRUE #> 16          wages Total_Norway   11  9.7     9    9   FALSE      FALSE #> 17          wages          300    8  8.4     7    7   FALSE       TRUE #> 18          wages          400    3  1.3     2    2    TRUE       TRUE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressKDisclosure.html","id":null,"dir":"Reference","previous_headings":"","what":"K-disclosure suppression — SuppressKDisclosure","title":"K-disclosure suppression — SuppressKDisclosure","text":"function suppressing frequency tables using k-disclosure method.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressKDisclosure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-disclosure suppression — SuppressKDisclosure","text":"","code":"SuppressKDisclosure(   data,   coalition = 0,   mc_hierarchies = NULL,   upper_bound = Inf,   dimVar = NULL,   formula = NULL,   hierarchies = NULL,   freqVar = NULL,   ...,   spec = PackageSpecs(\"kDisclosureSpec\") )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressKDisclosure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-disclosure suppression — SuppressKDisclosure","text":"data data.frame representing data set coalition numeric vector length one, representing possible size attacking coalition. parameter corresponds parameter k definition k-disclosure. mc_hierarchies hierarchy representing meaningful combinations protected. Default value NULL. upper_bound numeric value representing minimum count considered safe. Default set Inf dimVar main dimensional variables additional aggregating variables. parameter can  useful hierarchies formula unspecified. formula model formula hierarchies List hierarchies, can converted AutoHierarchies. Thus, variables can also coded \"rowFactor\" \"\", correspond using categories data. freqVar name frequency variable data ... parameters passed children functions spec NULL named list arguments act default values.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressKDisclosure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-disclosure suppression — SuppressKDisclosure","text":"data.frame containing publishable data set, boolean variable $suppressed representing cell suppressions.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressKDisclosure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"K-disclosure suppression — SuppressKDisclosure","text":"Daniel P. Lupp","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressKDisclosure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-disclosure suppression — SuppressKDisclosure","text":"","code":"# data data <- SSBtools::SSBtoolsData(\"mun_accidents\")  # hierarchies as DimLists mun <- data.frame(levels = c(\"@\", rep(\"@@\", 6)), codes = c(\"Total\", paste(\"k\", 1:6, sep = \"\"))) inj <- data.frame(levels = c(\"@\", \"@@\" ,\"@@\", \"@@\", \"@@\"), codes = c(\"Total\", \"serious\", \"light\", \"none\", \"unknown\")) dimlists <- list(mun = mun, inj = inj)  inj2 <- data.frame(levels = c(\"@\", \"@@\", \"@@@\" ,\"@@@\", \"@@\", \"@@\"), codes = c(\"Total\", \"injured\", \"serious\", \"light\", \"none\", \"unknown\")) inj3 <- data.frame(levels = c(\"@\", \"@@\", \"@@\" ,\"@@\", \"@@\"), codes = c( \"shadowtotal\", \"serious\", \"light\", \"none\", \"unknown\")) mc_dimlist <- list(inj = inj2) mc_nomargs <- list(inj = inj3)  #' # Example with formula, no meaningful combination out <- SuppressKDisclosure(data, coalition = 1, freqVar = \"freq\", formula = ~mun*inj) #> [extend0 24*3->24*3] #> GaussSuppression_anySumNOTprimary: ...................................  # Example with hierarchy and meaningful combination out2 <- SuppressKDisclosure(data, coalition = 1, freqVar = \"freq\", hierarchies = dimlists, mc_hierarchies = mc_dimlist) #> [extend0 24*3->24*3] #> GaussSuppression_anySumNOTprimary: ..............................  #' # Example of table without mariginals, and mc_hierarchies to protect out3 <- SuppressKDisclosure(data, coalition = 1, freqVar = \"freq\", formula = ~mun:inj, mc_hierarchies = mc_nomargs ) #> [extend0 24*3->24*3] #> GaussSuppression_anySumNOTprimary: ........................."},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressSmallCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Small count frequency table suppression. — SuppressSmallCounts","title":"Small count frequency table suppression. — SuppressSmallCounts","text":"wrapper function GaussSuppressionFromData small count frequency suppression. common applications, spec parameter can adjusted, see PackageSpecs information. See Details information function call customization.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressSmallCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small count frequency table suppression. — SuppressSmallCounts","text":"","code":"SuppressSmallCounts(   data,   maxN,   freqVar = NULL,   dimVar = NULL,   hierarchies = NULL,   formula = NULL,   ...,   spec = PackageSpecs(\"smallCountSpec\") )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressSmallCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Small count frequency table suppression. — SuppressSmallCounts","text":"data Input data, typically data frame, tibble, data.table. data classic data frame, coerced one internally unless preAggregate TRUE aggregatePackage \"data.table\". maxN Suppression parameter. Cells frequency <= maxN set primary suppressed. Using default primary function, maxN default set 3. See details. freqVar single variable holding counts (name number). dimVar main dimensional variables additional aggregating variables. parameter can  useful hierarchies formula unspecified. hierarchies List hierarchies, can converted AutoHierarchies. Thus, variables can also coded \"rowFactor\" \"\", correspond using categories data. formula model formula ... arguments passed supplied functions ModelMatrix (inputInOutput removeEmpty). spec NULL named list arguments act default values.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressSmallCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small count frequency table suppression. — SuppressSmallCounts","text":"data frame containing aggregated data suppression information.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressSmallCounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Small count frequency table suppression. — SuppressSmallCounts","text":"specs provided package (see PackageSpecs) provide common parameter setups small count suppression. However, might necessary customize parameters . case, certain parameters GaussSuppressionFromData might need adjusting values provided package specs. particular, parameters protectZeros (zeros primary suppressed), extend0 (empty cells added primary suppression), secondaryZeros (zero frequency cells candidates secondary suppression) might interest. examples illustrate override parameters specified spec. Note possible specLock = FALSE.","code":""},{"path":[]},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressSmallCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small count frequency table suppression. — SuppressSmallCounts","text":"","code":"mun_accidents <- SSBtoolsData(\"mun_accidents\")  SuppressSmallCounts(data = mun_accidents, maxN = 3, dimVar = 1:2, freqVar = 3) #> [extend0 24*3->24*3] #> GaussSuppression_anySum: ............. #>      mun     inj freq primary suppressed #> 1  Total   Total   32   FALSE      FALSE #> 2  Total   light    3    TRUE       TRUE #> 3  Total    none    6   FALSE      FALSE #> 4  Total serious   23   FALSE      FALSE #> 5  Total unknown    0    TRUE       TRUE #> 6     k1   Total    4   FALSE       TRUE #> 7     k1   light    0    TRUE       TRUE #> 8     k1    none    0    TRUE       TRUE #> 9     k1 serious    4   FALSE      FALSE #> 10    k1 unknown    0    TRUE       TRUE #> 11    k2   Total    6   FALSE      FALSE #> 12    k2   light    0    TRUE       TRUE #> 13    k2    none    1    TRUE       TRUE #> 14    k2 serious    5   FALSE      FALSE #> 15    k2 unknown    0    TRUE       TRUE #> 16    k3   Total    6   FALSE      FALSE #> 17    k3   light    2    TRUE       TRUE #> 18    k3    none    1    TRUE       TRUE #> 19    k3 serious    3    TRUE       TRUE #> 20    k3 unknown    0    TRUE       TRUE #> 21    k4   Total    9   FALSE      FALSE #> 22    k4   light    1    TRUE       TRUE #> 23    k4    none    4   FALSE      FALSE #> 24    k4 serious    4   FALSE      FALSE #> 25    k4 unknown    0    TRUE       TRUE #> 26    k5   Total    1    TRUE       TRUE #> 27    k5   light    0    TRUE       TRUE #> 28    k5    none    0    TRUE       TRUE #> 29    k5 serious    1    TRUE       TRUE #> 30    k5 unknown    0    TRUE       TRUE #> 31    k6   Total    6   FALSE      FALSE #> 32    k6   light    0    TRUE       TRUE #> 33    k6    none    0    TRUE       TRUE #> 34    k6 serious    6   FALSE       TRUE #> 35    k6 unknown    0    TRUE       TRUE # override default spec SuppressSmallCounts(data = mun_accidents, maxN = 3, dimVar = 1:2, freqVar = 3,                      protectZeros = FALSE) #> [extend0 24*3->24*3] #> GaussSuppression_anySum: ........................... #>      mun     inj freq primary suppressed #> 1  Total   Total   32   FALSE      FALSE #> 2  Total   light    3    TRUE       TRUE #> 3  Total    none    6   FALSE       TRUE #> 4  Total serious   23   FALSE      FALSE #> 5  Total unknown    0   FALSE      FALSE #> 6     k1   Total    4   FALSE       TRUE #> 7     k1   light    0   FALSE      FALSE #> 8     k1    none    0   FALSE      FALSE #> 9     k1 serious    4   FALSE       TRUE #> 10    k1 unknown    0   FALSE      FALSE #> 11    k2   Total    6   FALSE      FALSE #> 12    k2   light    0   FALSE      FALSE #> 13    k2    none    1    TRUE       TRUE #> 14    k2 serious    5   FALSE       TRUE #> 15    k2 unknown    0   FALSE      FALSE #> 16    k3   Total    6   FALSE      FALSE #> 17    k3   light    2    TRUE       TRUE #> 18    k3    none    1    TRUE       TRUE #> 19    k3 serious    3    TRUE       TRUE #> 20    k3 unknown    0   FALSE      FALSE #> 21    k4   Total    9   FALSE      FALSE #> 22    k4   light    1    TRUE       TRUE #> 23    k4    none    4   FALSE       TRUE #> 24    k4 serious    4   FALSE      FALSE #> 25    k4 unknown    0   FALSE      FALSE #> 26    k5   Total    1    TRUE       TRUE #> 27    k5   light    0   FALSE      FALSE #> 28    k5    none    0   FALSE      FALSE #> 29    k5 serious    1    TRUE       TRUE #> 30    k5 unknown    0   FALSE      FALSE #> 31    k6   Total    6   FALSE      FALSE #> 32    k6   light    0   FALSE      FALSE #> 33    k6    none    0   FALSE      FALSE #> 34    k6 serious    6   FALSE      FALSE #> 35    k6 unknown    0   FALSE      FALSE                                           d2 <- SSBtoolsData(\"d2\") d2$f <- round(d2$freq/10)  # tenth as frequency in examples  # Hierarchical region variables are detected automatically -> same output column SuppressSmallCounts(data = d2, maxN = 2, freqVar = \"f\",                      dimVar = c(\"region\", \"county\", \"k_group\")) #> [extend0 44*4->44*4] #> GaussSuppression_anySum: .................. #>    region  f primary suppressed #> 1       1 13   FALSE      FALSE #> 2      10  9   FALSE       TRUE #> 3     300 59   FALSE      FALSE #> 4       4  6   FALSE       TRUE #> 5     400 10   FALSE      FALSE #> 6       5 11   FALSE      FALSE #> 7       6 19   FALSE      FALSE #> 8       8 11   FALSE      FALSE #> 9   Total 69   FALSE      FALSE #> 10      A 12   FALSE       TRUE #> 11      B  6   FALSE       TRUE #> 12      C  7   FALSE      FALSE #> 13      D  4   FALSE      FALSE #> 14      E 13   FALSE      FALSE #> 15      F  6   FALSE      FALSE #> 16      G  4   FALSE      FALSE #> 17      H  7   FALSE      FALSE #> 18      I  1    TRUE       TRUE #> 19      J  6   FALSE      FALSE #> 20      K  3   FALSE       TRUE  # Formula. Hierarchical variables still detected automatically. SuppressSmallCounts(data = d2, maxN = 3, freqVar = \"f\",                      formula = ~main_income * k_group + region + county - k_group) #> [extend0 44*5->44*5] #> GaussSuppression_anySum: ........................ #>    main_income region  f primary suppressed #> 1        Total  Total 69   FALSE      FALSE #> 2   assistance  Total 35   FALSE      FALSE #> 3        other  Total  8   FALSE      FALSE #> 4     pensions  Total 22   FALSE      FALSE #> 5        wages  Total  4   FALSE      FALSE #> 6        Total      A 12   FALSE       TRUE #> 7        Total      B  6   FALSE      FALSE #> 8        Total      C  7   FALSE      FALSE #> 9        Total      D  4   FALSE      FALSE #> 10       Total      E 13   FALSE      FALSE #> 11       Total      F  6   FALSE      FALSE #> 12       Total      G  4   FALSE      FALSE #> 13       Total      H  7   FALSE      FALSE #> 14       Total      I  1    TRUE       TRUE #> 15       Total      J  6   FALSE       TRUE #> 16       Total      K  3    TRUE       TRUE #> 17       Total      1 13   FALSE      FALSE #> 18       Total      4  6   FALSE      FALSE #> 19       Total      5 11   FALSE      FALSE #> 20       Total      6 19   FALSE      FALSE #> 21       Total      8 11   FALSE      FALSE #> 22       Total     10  9   FALSE      FALSE #> 23  assistance    300 29   FALSE      FALSE #> 24  assistance    400  6   FALSE      FALSE #> 25       other    300  7   FALSE       TRUE #> 26       other    400  1    TRUE       TRUE #> 27    pensions    300 19   FALSE       TRUE #> 28    pensions    400  3    TRUE       TRUE #> 29       wages    300  4   FALSE       TRUE #> 30       wages    400  0    TRUE       TRUE  # With hierarchies created manually ml <- data.frame(levels = c(\"@\", \"@@\", \"@@@\", \"@@@\", \"@@@\", \"@@\"),          codes = c(\"Total\", \"not_assistance\", \"other\", \"pensions\", \"wages\", \"assistance\")) SuppressSmallCounts(data = d2, maxN = 2, freqVar = \"f\",                      hierarchies = list(main_income = ml, k_group = \"Total_Norway\")) #> [extend0 44*3->44*3] #> GaussSuppression_anySum: ................ #>       main_income      k_group  f primary suppressed #> 1           Total Total_Norway 69   FALSE      FALSE #> 2           Total          300 59   FALSE      FALSE #> 3           Total          400 10   FALSE      FALSE #> 4  not_assistance Total_Norway 34   FALSE      FALSE #> 5  not_assistance          300 30   FALSE      FALSE #> 6  not_assistance          400  4   FALSE      FALSE #> 7      assistance Total_Norway 35   FALSE      FALSE #> 8      assistance          300 29   FALSE      FALSE #> 9      assistance          400  6   FALSE      FALSE #> 10          other Total_Norway  8   FALSE      FALSE #> 11          other          300  7   FALSE       TRUE #> 12          other          400  1    TRUE       TRUE #> 13       pensions Total_Norway 22   FALSE      FALSE #> 14       pensions          300 19   FALSE      FALSE #> 15       pensions          400  3   FALSE      FALSE #> 16          wages Total_Norway  4   FALSE      FALSE #> 17          wages          300  4   FALSE       TRUE #> 18          wages          400  0    TRUE       TRUE   # Data without pensions in k_group 400  # And assume these are structural zeros (will not be suppressed) SuppressSmallCounts(data = d2[1:41, ], maxN = 3, freqVar = \"f\",                      hierarchies = list(main_income = ml, k_group = \"Total_Norway\"),                      extend0 = FALSE, structuralEmpty = TRUE) #> GaussSuppression_anySum: .............. #>       main_income      k_group  f primary suppressed #> 1           Total Total_Norway 66   FALSE      FALSE #> 2           Total          300 59   FALSE      FALSE #> 3           Total          400  7   FALSE      FALSE #> 4  not_assistance Total_Norway 31   FALSE      FALSE #> 5  not_assistance          300 30   FALSE       TRUE #> 6  not_assistance          400  1    TRUE       TRUE #> 7      assistance Total_Norway 35   FALSE      FALSE #> 8      assistance          300 29   FALSE       TRUE #> 9      assistance          400  6   FALSE       TRUE #> 10          other Total_Norway  8   FALSE      FALSE #> 11          other          300  7   FALSE       TRUE #> 12          other          400  1    TRUE       TRUE #> 13       pensions Total_Norway 19   FALSE      FALSE #> 14       pensions          300 19   FALSE      FALSE #> 15       pensions          400  0   FALSE      FALSE #> 16          wages Total_Norway  4   FALSE      FALSE #> 17          wages          300  4   FALSE       TRUE #> 18          wages          400  0    TRUE       TRUE # -- Note for the example above --  # With protectZeros = FALSE  #   - No zeros suppressed # With extend0 = FALSE and structuralEmpty = FALSE  #   - Primary suppression without protection (with warning)  # With extend0 = TRUE and structuralEmpty = TRUE  #   - As default behavior. Suppression/protection of all zeros (since nothing empty) # With formula instead of hierarchies: Extra parameter needed when extend0 = FALSE. #   - removeEmpty = FALSE,  to include empty zeros in output.          # Using formula followed by FormulaSelection  output <- SuppressSmallCounts(data = SSBtoolsData(\"example1\"),                                formula = ~age * geo * year + eu * year,                                freqVar = \"freq\",                                maxN = 1) #> [extend0 18*5->18*5] #> GaussSuppression_anySum: .............................................. FormulaSelection(output, ~(age + eu) * year) #>      age   geo  year freq primary suppressed #> 1  Total Total Total   59   FALSE      FALSE #> 2    old Total Total   38   FALSE      FALSE #> 3  young Total Total   21   FALSE      FALSE #> 7  Total Total  2014   20   FALSE      FALSE #> 8  Total Total  2015   18   FALSE      FALSE #> 9  Total Total  2016   21   FALSE      FALSE #> 10 Total    EU Total   46   FALSE      FALSE #> 11 Total nonEU Total   13   FALSE      FALSE #> 18   old Total  2014   13   FALSE      FALSE #> 19   old Total  2015   13   FALSE      FALSE #> 20   old Total  2016   12   FALSE      FALSE #> 21 young Total  2014    7   FALSE      FALSE #> 22 young Total  2015    5   FALSE      FALSE #> 23 young Total  2016    9   FALSE      FALSE #> 33 Total    EU  2014   15   FALSE      FALSE #> 34 Total nonEU  2014    5   FALSE      FALSE #> 35 Total    EU  2015   15   FALSE      FALSE #> 36 Total nonEU  2015    3   FALSE      FALSE #> 37 Total    EU  2016   16   FALSE      FALSE #> 38 Total nonEU  2016    5   FALSE      FALSE   # To illustrate hierarchical_extend0  # (parameter to underlying function, SSBtools::Extend0fromModelMatrixInput) SuppressSmallCounts(data = SSBtoolsData(\"example1\"),                      formula = ~age * geo * eu, freqVar = \"freq\",                      maxN = 0,  avoidHierarchical = TRUE) #> [extend0 18*4->24*4] #> GaussSuppression_anySum: ........................... #>      age      geo    eu freq primary suppressed #> 1  Total    Total Total   59   FALSE      FALSE #> 2    old    Total Total   38   FALSE      FALSE #> 3  young    Total Total   21   FALSE      FALSE #> 4  Total  Iceland Total   13   FALSE      FALSE #> 5  Total Portugal Total   12   FALSE      FALSE #> 6  Total    Spain Total   34   FALSE      FALSE #> 7  Total    Total    EU   46   FALSE      FALSE #> 8  Total    Total nonEU   13   FALSE      FALSE #> 9    old  Iceland Total   10   FALSE       TRUE #> 10   old Portugal Total   11   FALSE       TRUE #> 11   old    Spain Total   17   FALSE      FALSE #> 12 young  Iceland Total    3   FALSE       TRUE #> 13 young Portugal Total    1   FALSE       TRUE #> 14 young    Spain Total   17   FALSE      FALSE #> 15   old    Total    EU   28   FALSE      FALSE #> 16   old    Total nonEU   10   FALSE      FALSE #> 17 young    Total    EU   18   FALSE      FALSE #> 18 young    Total nonEU    3   FALSE      FALSE #> 19 Total  Iceland    EU    0    TRUE       TRUE #> 20 Total  Iceland nonEU   13   FALSE       TRUE #> 21 Total Portugal    EU   12   FALSE       TRUE #> 22 Total Portugal nonEU    0    TRUE       TRUE #> 23 Total    Spain    EU   34   FALSE       TRUE #> 24 Total    Spain nonEU    0    TRUE       TRUE #> 25   old  Iceland    EU    0    TRUE       TRUE #> 26   old  Iceland nonEU   10   FALSE       TRUE #> 27   old Portugal    EU   11   FALSE       TRUE #> 28   old Portugal nonEU    0    TRUE       TRUE #> 29   old    Spain    EU   17   FALSE       TRUE #> 30   old    Spain nonEU    0    TRUE       TRUE #> 31 young  Iceland    EU    0    TRUE       TRUE #> 32 young  Iceland nonEU    3   FALSE       TRUE #> 33 young Portugal    EU    1   FALSE       TRUE #> 34 young Portugal nonEU    0    TRUE       TRUE #> 35 young    Spain    EU   17   FALSE       TRUE #> 36 young    Spain nonEU    0    TRUE       TRUE SuppressSmallCounts(data = SSBtoolsData(\"example1\"),                      formula = ~age * geo * eu, freqVar = \"freq\",                      maxN = 0,  avoidHierarchical = TRUE,                     hierarchical_extend0 = TRUE)  #> [extend0 18*4->18*4] #>      age      geo    eu freq primary suppressed #> 1  Total    Total Total   59   FALSE      FALSE #> 2    old    Total Total   38   FALSE      FALSE #> 3  young    Total Total   21   FALSE      FALSE #> 4  Total  Iceland Total   13   FALSE      FALSE #> 5  Total Portugal Total   12   FALSE      FALSE #> 6  Total    Spain Total   34   FALSE      FALSE #> 7  Total    Total    EU   46   FALSE      FALSE #> 8  Total    Total nonEU   13   FALSE      FALSE #> 9    old  Iceland Total   10   FALSE      FALSE #> 10   old Portugal Total   11   FALSE      FALSE #> 11   old    Spain Total   17   FALSE      FALSE #> 12 young  Iceland Total    3   FALSE      FALSE #> 13 young Portugal Total    1   FALSE      FALSE #> 14 young    Spain Total   17   FALSE      FALSE #> 15   old    Total    EU   28   FALSE      FALSE #> 16   old    Total nonEU   10   FALSE      FALSE #> 17 young    Total    EU   18   FALSE      FALSE #> 18 young    Total nonEU    3   FALSE      FALSE #> 19 Total  Iceland nonEU   13   FALSE      FALSE #> 20 Total Portugal    EU   12   FALSE      FALSE #> 21 Total    Spain    EU   34   FALSE      FALSE #> 22   old  Iceland nonEU   10   FALSE      FALSE #> 23   old Portugal    EU   11   FALSE      FALSE #> 24   old    Spain    EU   17   FALSE      FALSE #> 25 young  Iceland nonEU    3   FALSE      FALSE #> 26 young Portugal    EU    1   FALSE      FALSE #> 27 young    Spain    EU   17   FALSE      FALSE                                 # This example is similar to the one in the documentation of tables_by_formulas,   # but it uses SuppressSmallCounts, and the input data (SSBtoolsData(\"magnitude1\"))   # is used to generate a frequency table by excluding the \"value\" variable.  tables_by_formulas(SSBtoolsData(\"magnitude1\"),                     table_fun = SuppressSmallCounts,                     table_formulas = list(table_1 = ~region * sector2,                                           table_2 = ~region1:sector4 - 1,                                           table_3 = ~region + sector4 - 1),                     substitute_vars = list(region = c(\"geo\", \"eu\"), region1 = \"eu\"),                     collapse_vars = list(sector = c(\"sector2\", \"sector4\")),                     maxN = 2)                  #> [preAggregate 20*6->10*5] #> [extend0 10*5->12*5] #> GaussSuppression_anySum: ................... #>      region        sector freq primary suppressed table_1 table_2 table_3 #> 1     Total         Total   20   FALSE      FALSE    TRUE   FALSE   FALSE #> 2   Iceland         Total    4   FALSE      FALSE    TRUE   FALSE    TRUE #> 3  Portugal         Total    8   FALSE      FALSE    TRUE   FALSE    TRUE #> 4     Spain         Total    8   FALSE      FALSE    TRUE   FALSE    TRUE #> 5        EU         Total   16   FALSE      FALSE    TRUE   FALSE    TRUE #> 6     nonEU         Total    4   FALSE      FALSE    TRUE   FALSE    TRUE #> 7     Total       private   16   FALSE      FALSE    TRUE   FALSE   FALSE #> 8     Total        public    4   FALSE      FALSE    TRUE   FALSE   FALSE #> 9     Total   Agriculture    4   FALSE      FALSE   FALSE   FALSE    TRUE #> 10    Total Entertainment    6   FALSE      FALSE   FALSE   FALSE    TRUE #> 11    Total  Governmental    4   FALSE      FALSE   FALSE   FALSE    TRUE #> 12    Total      Industry    6   FALSE      FALSE   FALSE   FALSE    TRUE #> 13  Iceland       private    4   FALSE       TRUE    TRUE   FALSE   FALSE #> 14  Iceland        public    0    TRUE       TRUE    TRUE   FALSE   FALSE #> 15 Portugal       private    6   FALSE       TRUE    TRUE   FALSE   FALSE #> 16 Portugal        public    2    TRUE       TRUE    TRUE   FALSE   FALSE #> 17    Spain       private    6   FALSE       TRUE    TRUE   FALSE   FALSE #> 18    Spain        public    2    TRUE       TRUE    TRUE   FALSE   FALSE #> 19       EU       private   12   FALSE       TRUE    TRUE   FALSE   FALSE #> 20       EU        public    4   FALSE       TRUE    TRUE   FALSE   FALSE #> 21    nonEU       private    4   FALSE       TRUE    TRUE   FALSE   FALSE #> 22    nonEU        public    0    TRUE       TRUE    TRUE   FALSE   FALSE #> 23       EU   Agriculture    4   FALSE       TRUE   FALSE    TRUE   FALSE #> 24       EU Entertainment    5   FALSE       TRUE   FALSE    TRUE   FALSE #> 25       EU  Governmental    4   FALSE       TRUE   FALSE    TRUE   FALSE #> 26       EU      Industry    3   FALSE      FALSE   FALSE    TRUE   FALSE #> 27    nonEU   Agriculture    0    TRUE       TRUE   FALSE    TRUE   FALSE #> 28    nonEU Entertainment    1    TRUE       TRUE   FALSE    TRUE   FALSE #> 29    nonEU  Governmental    0    TRUE       TRUE   FALSE    TRUE   FALSE #> 30    nonEU      Industry    3   FALSE      FALSE   FALSE    TRUE   FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressionFromDecimals.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell suppression from synthetic decimal numbers — SuppressionFromDecimals","title":"Cell suppression from synthetic decimal numbers — SuppressionFromDecimals","text":"Decimal numbers, calculated GaussSuppressDec, used decide suppression (whole numbers ). Technically, calculations done via GaussSuppressionFromData, without running GaussSuppression. suppressed cells primary suppressed.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressionFromDecimals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell suppression from synthetic decimal numbers — SuppressionFromDecimals","text":"","code":"SuppressionFromDecimals(   data,   decVar,   freqVar = NULL,   numVar = NULL,   preAggregate = FALSE,   digits = 9,   ... )"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressionFromDecimals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell suppression from synthetic decimal numbers — SuppressionFromDecimals","text":"data Input data data frame decVar One ore several (nRep>1) decimal number variables. freqVar single variable holding counts (needed) numVar numerical variables aggregated preAggregate Parameter GaussSuppressionFromData digits Parameter RoundWhole. Values close whole numbers rounded. ... parameters GaussSuppressionFromData","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressionFromDecimals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell suppression from synthetic decimal numbers — SuppressionFromDecimals","text":"Aggregated data suppression information","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressionFromDecimals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cell suppression from synthetic decimal numbers — SuppressionFromDecimals","text":"Several decimal number variables reduce probability obtaining whole numbers chance.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressionFromDecimals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cell suppression from synthetic decimal numbers — SuppressionFromDecimals","text":"Øyvind Langsrud","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/SuppressionFromDecimals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell suppression from synthetic decimal numbers — SuppressionFromDecimals","text":"","code":"z2 <- SSBtoolsData(\"z2\")  # Find suppression and decimal numbers with \"fylke\" in model  a1 <- GaussSuppressDec(z2,                        fun = SuppressSmallCounts,                           dimVar = c(\"region\", \"fylke\", \"hovedint\"),                         freqVar = \"ant\", protectZeros = FALSE, maxN = 2,                         output = \"inner\") #> [extend0 44*4->44*4] #> GaussSuppression_anySum: ..........................  # Add decimal numbers to data  z2$freqDec <- a1$freqDec  # Find suppression with \"kostragr\" in model  a2 <- SuppressionFromDecimals(z2, dimVar = c(\"region\", \"kostragr\", \"hovedint\"),                                freqVar = \"ant\", decVar = \"freqDec\") #> GaussSuppression_none:  tail(a2) #>    region hovedint ant    freqDec primary suppressed #> 65      J    trygd  20 20.0000000   FALSE      FALSE #> 66      K    Total  35 35.0000000   FALSE      FALSE #> 67      K    annet   4  5.6718736    TRUE       TRUE #> 68      K   arbeid   2  0.3281264    TRUE       TRUE #> 69      K soshjelp  18 18.0000000   FALSE      FALSE #> 70      K    trygd  11 11.0000000   FALSE      FALSE  b1 <- GaussSuppressDec(data = SSBtoolsData(\"magnitude1\"),                         fun = SuppressDominantCells,                         numVar = \"value\",                         formula = ~sector2 * geo + sector4 * eu,                        contributorVar = \"company\", k = c(80, 99)) #> [preAggregate 20*6->20*7] #> [extraAggregate 20*7->10*7] Checking ..... #> GaussSuppression_numttHTT: .........:::::   b2 <- SuppressionFromDecimals(b1[b1$isInner, ],                                formula = ~(sector2 + sector4) * eu,                                numVar = \"value\",                                decVar = \"freqDec\") #> GaussSuppression_none:  FormulaSelection(b2, ~sector2 * eu)                                  #>    sector4    eu       freqDec value primary suppressed #> 1    Total Total  1.110223e-16 462.3   FALSE      FALSE #> 2  private Total -1.110223e-16 429.5   FALSE      FALSE #> 3   public Total  2.220446e-16  32.8   FALSE      FALSE #> 8    Total    EU  5.551115e-16 425.2   FALSE      FALSE #> 9    Total nonEU -4.440892e-16  37.1   FALSE      FALSE #> 10 private    EU  3.330669e-16 392.4   FALSE      FALSE #> 11 private nonEU -4.440892e-16  37.1   FALSE      FALSE #> 12  public    EU  2.220446e-16  32.8   FALSE      FALSE"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/X_from_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to be used within KDisclosurePrimary — X_from_mc","title":"Function to be used within KDisclosurePrimary — X_from_mc","text":"Function used within KDisclosurePrimary","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/X_from_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to be used within KDisclosurePrimary — X_from_mc","text":"","code":"X_from_mc(   x,   crossTable,   mc_hierarchies,   removeIncomplete = FALSE,   returnNewCrossTable = FALSE,   noInner = FALSE,   ... )  X_from_mc_remove(..., removeIncomplete = TRUE)  X_from_mc_noinner(..., noInner = TRUE)  X_from_mc_remove_noinner(..., removeIncomplete = TRUE, noInner = TRUE)"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/X_from_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to be used within KDisclosurePrimary — X_from_mc","text":"x ModelMatrix generated parent function crossTable crossTable generated parent function mc_hierarchies hierarchy representing meaningful combinations protected. Default value NULL. removeIncomplete TRUE,  input code contributions checked incomplete entries removed. returnNewCrossTable TRUE, crossTable corresponding created x-matrix also returned (list) noInner TRUE,  efficient generation model matrix.  (removing inner cells according colSums needed) ... parameters passed children functions","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/X_from_mc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to be used within KDisclosurePrimary — X_from_mc","text":"Øyvind Langsrud","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. SSBtools FormulaSelection, GaussSuppression, SSBtoolsData, formula_selection, tables_by_formulas","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-095","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.9.5","title":"GaussSuppression 0.9.5","text":"CRAN release: 2025-02-07 package now documentation site https://statisticsnorway.github.io/ssb-gausssuppression/. follow best practices R packages new function tables_by_formulas(), now reexported, demonstrated SuppressSmallCounts() example SuppressDominantCells() example. new function Extend0fromModelMatrixInput() now used data pre-processing. result, hierarchical_extend0 now possible parameter, illustrated SuppressSmallCounts() example. GaussSuppressDec() now accepts wrappers input, SuppressSmallCounts() SuppressDominantCells(). Added new parameter use_freqVar allow decimal numbers generated solely 0s, improving stability. output variables underlying function now included default output GaussSuppressDec(). FormulaSelection() now works correctly output GaussSuppressDec(). SuppressionFromDecimals() updated accordingly. particular, automation now implemented detect whether decimal numbers generated 0s frequencies.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-092","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.9.2","title":"GaussSuppression 0.9.2","text":"CRAN release: 2024-12-09 breaking change may affect previous code. Previously, unspecified, dimVar automatically generated remaining columns. behavior correctly implemented, often stemmed user input errors lead unexpected behavior crashes. change now requires explicit input, making function robust reducing risk user errors. contributorVar (charVar) can now combined sWeightVar. Improved handling protectZeros. See parameter’s documentation ?MagnitudeRule. New parameter removeCodesFraction allows adjustment effect removeCodes parameter. apply_abs_directly = FALSE (default), absolute values taken summing contributions, performed max_contribution() SSBtools package. apply_abs_directly = TRUE, absolute values computed directly input values, prior summation [beyond preAggregate]. corresponds old behavior function. Renaming: variable previously called primary.2:80 ((2,80) dominance)) now dominant2. IDs associated largest contributions now included. number contributors also included. Additional outputs available. See documentation allDominance parameter. new functionality enabled replacing MaxContribution() improved max_contribution() SSBtools. Input now explicitly coerced data frame using .data.frame() necessary ensure consistent behavior. preAggregate TRUE aggregatePackage \"data.table\", use .data.frame() skipped avoid unnecessary back--forth conversion data.table objects, preserving efficiency. Applies GaussSuppressionFromData() wrappers. functions useful extracting smaller datasets output. change, using library(SSBtools) longer necessary access . Output functions like get_klass() klassR package hier_create() sdcHierarchies package can now used directly input. Example usage: New possibilities working formulas hierarchies now available map_hierarchies_to_data() function. Improved functionality combining formulas Formula2ModelMatrix() parameter avoidHierarchical = TRUE, thanks new total_collapse() function can applied output.","code":"a <- get_klass(classification = \"24\")  b <- hier_create(root = \"Total\", nodes = LETTERS[1:5])  mydata <- data.frame(tree = sample(a$code[nchar(a$code) > 1], 200, replace = TRUE),                        letter = LETTERS[1:5])  SuppressSmallCounts(mydata, maxN = 3, hierarchies = list(tree = a, letter = b))"},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-090","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.9.0","title":"GaussSuppression 0.9.0","text":"CRAN release: 2024-09-24 package description updated reference (Langsrud, 2024). TRUE, NAs grouping variables omitted output included separate category. parameter can input GaussSuppressionFromData() wrappers. Whether include NAs grouping variables preAggregate/extraAggregate. Needs TRUE (default) utilize NAomit parameter. aggregatePackage parameter GaussSuppressionFromData() wrappers. Also note related new parameters aggregateBaseOrder rowGroupsPackage.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-088","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.8.8","title":"GaussSuppression 0.8.8","text":"CRAN release: 2024-06-28 bug related remove0 parameter SuppressFewContributors/NContributorsRule introduced version 0.8.0. single numVar used input, remove0 functionality failed.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-085","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.8.5","title":"GaussSuppression 0.8.5","text":"CRAN release: 2024-05-22 pPercent parameter now exposed SuppressDominantCells() documentation. simplify common use. bug occurring cases response value zero secondary suppressed. happen parallel eliminations combined integer overflow. warning message: longer object length multiple shorter object length practice, rarely makes difference. previous behavior can ensured setting singletonMethod either \"anySumOld\" \"anySumNOTprimaryOld\".","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-083","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.8.3","title":"GaussSuppression 0.8.3","text":"CRAN release: 2024-03-22 rangePercent: Required interval width expressed percentage rangeMin: Minimum required width interval","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-080","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.8.0","title":"GaussSuppression 0.8.0","text":"CRAN release: 2024-02-02 prevent doubling, set singletonMethod = \"numttHtT\". behavior version 0.7.0 can restored setting singletonMethod = \"numttH\". simpler faster method achievable singletonMethod = \"numttT\". previous versions, singleton handling can disabled setting singletonMethod = \"none\". Additional information can found ?SSBtools::NumSingleton. explanation provided bottom magnitude vignette. later documented comprehensive manner (paper). Improved support handling multiple numerical variables, introducing new parameters: dominanceVar candidatesVar. removeCodes parameter now also available DominanceRule() SuppressDominantCells() functions. Support multiple contributorVar (charVar) SuppressFewContributors() NContributorsRule() functions. Now, SuppressDominantCells() includes special functionality prevent zero cells, suppressed, revealable cases negative values occur. See parameter singletonZeros. update described enables specification pPercent parameter directly SuppressDominantCells(). Technically, PPercentRule() DominanceRule() now serve wrappers newly introduced. general function MagnitudeRule(). AdditionalSuppression() generalized take wrappers input. PrimaryRemoveWg(), CandidatesNumWg() ForcedWg() Intervals can now calculated using new function ComputeIntervals(). lpPackage parameter specified GaussSuppressionFromData() wrappers, intervals primary suppressed cells computed included output.","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-070","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.7.0","title":"GaussSuppression 0.7.0","text":"CRAN release: 2023-06-07 vignettes included. Due improvements SSBtools package (version 1.4.6). Due new default extraAggregate = TRUE specs, dominanceSpec fewContributorsSpec. See PackageSpecs().","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-060","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.6.0","title":"GaussSuppression 0.6.0","text":"CRAN release: 2023-03-31 vignette entitled “Defining Tables GaussSuppression” now included. SuppressSmallCounts(), SuppressDominantCells(), SuppressFewContributors(), along SuppressKDisclosure() (available previous version). See PackageSpecs(). See DominanceRule(). See SSBtools::GaussSuppression(). See SingletonUniqueContributor(). unsafe means unsafe primary suppressions due forced cells. , unsafe primarily suppressed values can re-calculated values cells forced suppressed. See parameters forcedInOutput unsafeInOutput GaussSuppressionFromData().","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-050","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.5.0","title":"GaussSuppression 0.5.0","text":"CRAN release: 2022-08-30 previous versions names standardized \"freq\" \"weight\". Code relying previous behavior freqVar/weightVar \"freq\"/\"weight\" needs updated. \"freq\" still default data aggregated microdata without freqVar specified (see new parameter freqVarNew). Adaption needed Matrix ver. 1.4-2 (user-visible change)","code":""},{"path":"https://statisticsnorway.github.io/ssb-gausssuppression/news/index.html","id":"gausssuppression-040","dir":"Changelog","previous_headings":"","what":"GaussSuppression 0.4.0","title":"GaussSuppression 0.4.0","text":"CRAN release: 2022-06-28 Last version news","code":""}]
